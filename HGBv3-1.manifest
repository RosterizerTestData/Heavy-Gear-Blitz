{
  "name": "Core System",
  "revision": "0.0.1",
  "game": "Heavy Gear Blitz! v3.1",
  "genre": "sci-fi",
  "publisher": "Dream Pod 9",
  "url": "https://www.dp9.com/",
  "notes": "",
  "wip": true,
  "dependencies": [],
  "manifest": {
    "assetTaxonomy": {
      "Airstrike Counter": {
        "stats": {
          "GU": {
            "format": "{v}+",
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 7,
            "statType": "numeric",
            "tracked": true,
            "value": 2,
            "visibility": "normal"
          },
          "maxAirstrikeCounters": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Model": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 1,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "Mounted Weapons": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 11,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "PI": {
            "format": "{v}+",
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 8,
            "statType": "numeric",
            "tracked": true,
            "value": 2,
            "visibility": "normal"
          },
          "TV": {
            "group": "Accounting",
            "groupOrder": 2,
            "statOrder": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "Type": {
            "group": "Profile",
            "groupOrder": 1,
            "ranks": {
              "Gear": {
                "order": 0
              },
              "Infantry": {
                "order": 1
              },
              "Strider": {
                "order": 2
              },
              "Cavalry": {
                "order": 3
              },
              "Vehicle": {
                "order": 4
              },
              "Drone": {
                "order": 5
              },
              "Terrain": {
                "order": 6
              },
              "Area Terrain": {
                "order": 7
              },
              "Building": {
                "order": 8
              },
              "Airstrike Counter": {
                "order": 9
              }
            },
            "statOrder": 13,
            "statType": "rank",
            "value": "Airstrike Counter",
            "visibility": "normal"
          }
        },
        "templateClass": "Grandparent"
      },
      "Cavalry": {
        "stats": {
          "Type": {
            "value": "Cavalry"
          }
        },
        "templateClass": "Non-Veteran Model"
      },
      "Combat Group": {
        "allowed": {
          "classifications": []
        },
        "assets": {
          "traits": [
            "Unit§Primary Unit"
          ]
        },
        "rules": {
          "mustBeVeteranGroupIfVeteranForce": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Veteran Group?",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Veteran Force?",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 45
          },
          "This class is for combat group containers; it has a titular asset, and Duelists.": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 2
          }
        },
        "stats": {
          "Actions": {
            "group": "Accounting",
            "groupOrder": 1,
            "statOrder": 2,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "TV": {
            "group": "Accounting",
            "groupOrder": 1,
            "statOrder": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "Veteran Group?": {
            "dynamic": true,
            "group": "Accounting",
            "groupOrder": 1,
            "ranks": {
              "0": {
                "number": 0,
                "order": 0
              },
              "1": {
                "number": 1,
                "order": 1
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "tracked": true,
            "value": "0",
            "visibility": "normal"
          }
        },
        "templateClass": "Grandparent"
      },
      "Drone": {
        "stats": {
          "Type": {
            "value": "Drone"
          }
        },
        "templateClass": "Non-Veteran Model"
      },
      "Duelist Melee Upgrade": {
        "aspects": {
          "Unique": true
        },
        "templateClass": "Melee Weapon, Reach-upgrade, Dual-upgrade"
      },
      "Duelist Ranged Upgrade": {
        "aspects": {
          "Unique": true
        },
        "templateClass": "Ranged Weapon, Direct"
      },
      "Duelist Upgrade": {
        "templateClass": "Upgrade"
      },
      "Faction": {
        "allowed": {
          "classifications": [
            "Sub-list"
          ]
        },
        "templateClass": "Grandparent"
      },
      "Gear": {
        "stats": {
          "Type": {
            "value": "Gear"
          }
        },
        "templateClass": "Non-Veteran Model"
      },
      "Grandparent": {
        "rules": {
          "|** Rules that act as comments or info evals **|": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 1
          },
          "|** Rules that edit stat strings **|": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 160
          },
          "|** Rules that enforce model requirements **|": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 60
          },
          "|** Rules that enforce roster requirements **|": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 40
          },
          "|** Rules that grant legal options **|": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 80
          },
          "|** Rules that programmatically add assets **|": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 20
          },
          "|** Rules that remove illegal options **|": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 100
          },
          "|** Rules that rename or edit designations **|": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 140
          },
          "|** Rules that report illegality of configurable options **|": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 120
          }
        }
      },
      "Infantry": {
        "constraints": {
          "none": []
        },
        "rules": {
          "changeToSquadIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the hull/structure to 3/3...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the designation to Infantry Squad...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Infantry Squad"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the name to Infantry Squad as well.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Infantry Squad"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Squad upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Squad +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "MR": {
            "format": "I:{v}"
          },
          "Squad +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Type": {
            "value": "Infantry"
          }
        },
        "templateClass": "Non-Veteran Model"
      },
      "Leader": {
        "aspects": {
          "Unique": true
        },
        "stats": {
          "CG Leaders": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Initiative": {
            "format": "{v}+",
            "group": "Profile",
            "groupOrder": 2,
            "statOrder": 3,
            "statType": "numeric",
            "value": 0,
            "visibility": "normal"
          },
          "Rank": {
            "group": "Profile",
            "groupOrder": 2,
            "statOrder": 2,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "SP": {
            "group": "Profile",
            "groupOrder": 2,
            "label": "CP",
            "statOrder": 4,
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "normal"
          },
          "TV": {
            "group": "Accounting",
            "groupOrder": 1,
            "statOrder": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          }
        },
        "templateClass": "Grandparent"
      },
      "Melee Weapon": {
        "stats": {
          "meleeBrawlStat": {
            "format": "Brawl:{v}",
            "group": "Property Tracking",
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "meleeReachStat": {
            "format": "Reach:{v}",
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Mode": {
            "value": "Melee"
          },
          "Range": {
            "value": "0/-"
          }
        },
        "templateClass": "Weapon"
      },
      "Melee Weapon, Reach-upgrade": {
        "rules": {
          "addReachIfNotPresent": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "traits"
                  ]
                ],
                "value": "Model/Weapon Property, Variable§Reach:X"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Reach:X"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Vet: +1 Reach +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 21
          },
          "makeReachModifiedIfUpgraded": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "Then increment the value of the Reach:X Modified stat.",
                "paths": [
                  [
                    "{self}",
                    "traits",
                    "item",
                    "Model/Weapon Property, Variable§Reach:X",
                    "stats",
                    "Modified",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the +1 Reach upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Vet: +1 Reach +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 148
          },
          "makeReachUpgradeVisible": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set its visibility to \"normal.\"",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Vet: +1 Reach +1TV",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the (parent) Model is a Vet...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "Vet"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the weapon has the React trait...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "StatColumn",
                    "value"
                  ]
                ],
                "value": "React"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          }
        },
        "stats": {
          "Vet: +1 Reach +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 2,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "meleeReachStat": 1,
                  "TV": 1
                }
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          }
        },
        "templateClass": "Melee Weapon"
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade": {
        "rules": {
          "makeDualUpgradeVisible": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set its visibility to \"normal.\"",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Dual Weapons +1TV",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the (parent) Model is a Duelist...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Duelist",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          }
        },
        "stats": {
          "Dual Weapons +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 3,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property§Link",
                      "stats": {
                        "Modified": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          }
        },
        "templateClass": "Melee Weapon, Reach-upgrade"
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable": {
        "rules": {
          "makeSwapToVisible": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the visibility of \"Swap To:\" to normal.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": false,
                "contains": true,
                "not": false,
                "note": "Is the model a gear?",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Gear"
              },
              {
                "actionable": false,
                "contains": true,
                "not": false,
                "note": "Is the model a strider?",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Strider"
              },
              {
                "actionable": true,
                "not": false,
                "note": "If the model is a gear or strider...",
                "operator": "OR",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "makeSwapToVisible",
                    "evals",
                    "0",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "makeSwapToVisible",
                    "evals",
                    "1",
                    "result",
                    "truthy"
                  ]
                ],
                "value": true
              },
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "...and has hands...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "Hands"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "StatColumn",
                    "value"
                  ]
                ],
                "value": "React"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          }
        },
        "stats": {
          "Swap to:": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 3,
            "statOrder": 4,
            "statType": "rank",
            "value": null,
            "visibility": "hidden"
          }
        },
        "templateClass": "Melee Weapon, Reach-upgrade, Dual-upgrade"
      },
      "Model": {
        "allowed": {
          "classifications": [
            "Standard Upgrade"
          ],
          "items": [
            "Ranged Weapon, Direct or Indirect§LHG +0.5TV",
            "Ranged Weapon, Direct§LPZ +0.5TV",
            "Ranged Weapon, Direct or Indirect§MHG +1TV",
            "Ranged Weapon, Direct§MPZ +1TV",
            "Ranged Weapon, Direct, Link-upgrade§LP +0.5TV",
            "Ranged Weapon, Direct, Link-upgrade§LSMG +0.5TV",
            "Melee Weapon§LSE +0.5TV",
            "Melee Weapon§MSE +1TV"
          ]
        },
        "aspects": {
          "Type": "game piece"
        },
        "keywords": {
          "Tags": [
            "UA: Fire Support",
            "UA: Fortifications",
            "UA: General Purpose",
            "UA: Recon",
            "UA: Special Operations",
            "UA: Strike"
          ]
        },
        "rules": {
          "3+ActionsLimitsOptions": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...then add \"No 3+ Actions\" to disallowed assets.",
                "paths": [
                  [
                    "{self}",
                    "disallowed",
                    "items"
                  ]
                ],
                "value": "Duelist Upgrade§Advanced Control System +2-3TV"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 3,
                "not": false,
                "note": "If the model has 3 or more actions...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Actions",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 111
          },
          "Conscripts Can't Be Veterans.": {
            "evals": [
              {
                "actionable": true,
                "equation": {
                  "operator": "T+O",
                  "value": [
                    "{self}",
                    "tally",
                    "Vet"
                  ]
                },
                "max": 1,
                "not": false,
                "note": "Should add the tally of Vet and Conscript; if the total is >1, it will error.",
                "operator": "SUM",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Conscript"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 121
          },
          "doublePrimaryAvailability": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "A secondary unit gets one availability for each variant. If this model is in a Primary Unit, then that availability is increased by 1 (which is indistiguishable from double).",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "fireSupportMax",
                    "value"
                  ],
                  [
                    "{self}",
                    "stats",
                    "fortificationsMax",
                    "value"
                  ],
                  [
                    "{self}",
                    "stats",
                    "generalPurposeMax",
                    "value"
                  ],
                  [
                    "{self}",
                    "stats",
                    "reconMax",
                    "value"
                  ],
                  [
                    "{self}",
                    "stats",
                    "specialOperationsMax",
                    "value"
                  ],
                  [
                    "{self}",
                    "stats",
                    "strikeMax",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "item"
                  ]
                ],
                "value": "Unit§Primary Unit"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 41
          },
          "duelistsGetOptionsAndMustBeVeterans": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Duelist Upgrade"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Duelist Melee Upgrade"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Duelist Ranged Upgrade"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Veteran?",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Duelist is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Duelist",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 62
          },
          "ifGroupIsVeteranThisCanBeToo": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then the Veteran upgrade should be revealed.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Veteran?",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Combat Group is a veteran...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "{parent}",
                    "stats",
                    "Veteran Group?",
                    "value"
                  ]
                ],
                "value": 1
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the model isn't a Conscript, Drone, or Terrain...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "Is the model not Conscript, Drone, or Terrain?",
                    "evals",
                    "3",
                    "result",
                    "truthy"
                  ]
                ],
                "value": true
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 64
          },
          "independentDuelistsCantLead": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "disallowed",
                    "items"
                  ]
                ],
                "value": "Duelist Upgrade§Lead by Example"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "disallowed",
                    "items"
                  ]
                ],
                "value": "Leader§2iC"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "disallowed",
                    "items"
                  ]
                ],
                "value": "Leader§CGL"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "disallowed",
                    "items"
                  ]
                ],
                "value": "Leader§Force Leader (CGL)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "item"
                  ]
                ],
                "value": "Combat Group§Duelist (Independent)"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 103
          },
          "independentOperatorsMustBeDuelists": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Duelist",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "designation"
                  ]
                ],
                "value": "Duelist (Independent)"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 61
          },
          "Is the model not Cav, Gear, Inf, or Strider?": {
            "evals": [
              {
                "actionable": false,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Cavalry"
              },
              {
                "actionable": false,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Gear"
              },
              {
                "actionable": false,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Infantry"
              },
              {
                "actionable": false,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Strider"
              },
              {
                "actionable": false,
                "not": false,
                "note": "Test that rules out all 4 possibilities; used in the Model:vetButNotCavGearInfOrStriderLimitsOptions rule",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "Is the model not Cav, Gear, Inf, or Strider?",
                    "evals",
                    "0",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model not Cav, Gear, Inf, or Strider?",
                    "evals",
                    "1",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model not Cav, Gear, Inf, or Strider?",
                    "evals",
                    "2",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model not Cav, Gear, Inf, or Strider?",
                    "evals",
                    "3",
                    "result",
                    "truthy"
                  ]
                ],
                "value": true
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 19
          },
          "Is the model not Conscript, Drone, or Terrain?": {
            "evals": [
              {
                "actionable": false,
                "min": 1,
                "not": true,
                "note": "Fail if it is a Conscript.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Conscript"
                  ]
                ]
              },
              {
                "actionable": false,
                "not": true,
                "note": "Fail if it is a Drone.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Drone"
              },
              {
                "actionable": false,
                "not": true,
                "note": "Fail if it is a Terrain.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Terrain"
              },
              {
                "actionable": false,
                "not": false,
                "note": "Fail if the model is any of Conscript, Drone, or any kind of Terrain (this will be used in revealing the veteran upgrade).",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "Is the model not Conscript, Drone, or Terrain?",
                    "evals",
                    "0",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model not Conscript, Drone, or Terrain?",
                    "evals",
                    "1",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model not Conscript, Drone, or Terrain?",
                    "evals",
                    "2",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model not Conscript, Drone, or Terrain?",
                    "evals",
                    "4",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model not Conscript, Drone, or Terrain?",
                    "evals",
                    "5",
                    "result",
                    "truthy"
                  ]
                ],
                "value": true
              },
              {
                "actionable": false,
                "not": true,
                "note": "Fail if it is a Building.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Building"
              },
              {
                "actionable": false,
                "not": true,
                "note": "Fail if it is Area Terrain.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Area Terrain"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 17
          },
          "Is the model Terrain, Area Terrain, Building, Infantry, Cavalry, or Airstrike?": {
            "evals": [
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Terrain"
              },
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Area Terrain"
              },
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Building"
              },
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Infantry"
              },
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Cavalry"
              },
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Airstrike Counter"
              },
              {
                "actionable": false,
                "not": false,
                "note": "This will eval \"true\" if the model is any of these; used in \"vetButTerrainBuildingInfantyCavalryOrAirstrikeLimitsOptions\"",
                "operator": "OR",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "Is the model Terrain, Area Terrain, Building, Infantry, Cavalry, or Airstrike?",
                    "evals",
                    "0",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model Terrain, Area Terrain, Building, Infantry, Cavalry, or Airstrike?",
                    "evals",
                    "1",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model Terrain, Area Terrain, Building, Infantry, Cavalry, or Airstrike?",
                    "evals",
                    "2",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model Terrain, Area Terrain, Building, Infantry, Cavalry, or Airstrike?",
                    "evals",
                    "3",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model Terrain, Area Terrain, Building, Infantry, Cavalry, or Airstrike?",
                    "evals",
                    "4",
                    "result",
                    "truthy"
                  ],
                  [
                    "{self}",
                    "rules",
                    "Is the model Terrain, Area Terrain, Building, Infantry, Cavalry, or Airstrike?",
                    "evals",
                    "5",
                    "result",
                    "truthy"
                  ]
                ],
                "value": true
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 18
          },
          "lumberingLimitsOptions": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...add \"No Lumbering\" to the None constraint.",
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "none"
                  ]
                ],
                "value": "No Lumbering"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If there's a Lumbering Property...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Lumbering"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 110
          },
          "maxEWis6+": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Sets EW to 6 (if it tests higher)",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "EW",
                    "value"
                  ]
                ],
                "value": 6
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 6,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "EW",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 101
          },
          "maxGUis6+": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Sets GU to 6 (if it tests higher)",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "GU",
                    "value"
                  ]
                ],
                "value": 6
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 6,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "GU",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 101
          },
          "maxPIis6+": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Sets PI to 6 (if it tests higher)",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "PI",
                    "value"
                  ]
                ],
                "value": 6
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 6,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "PI",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 101
          },
          "minEWis2+": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Sets EW to 2 (if it tests lower)",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "EW",
                    "value"
                  ]
                ],
                "value": 2
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 2,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "EW",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 102
          },
          "minGUis2+": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Set GU to 2 (if it tests to lower than that).",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "GU",
                    "value"
                  ]
                ],
                "value": 2
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 2,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "GU",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 102
          },
          "minPIis2+": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Set PI to 2 (if it tests lower).",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "PI",
                    "value"
                  ]
                ],
                "value": 2
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 2,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "PI",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 102
          },
          "noHandsAndNotInfantryLimitsOptions": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "none"
                  ]
                ],
                "value": "Requires Hands or Infantry"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Hands"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Type",
                    "value"
                  ]
                ],
                "value": "Infantry"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 105
          },
          "noHandsLimitsOptions": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...then add Requires Hands to the None constraint.",
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "none"
                  ]
                ],
                "value": "Requires Hands"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 0,
                "not": false,
                "note": "If the model doesn't have Hands...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Hands"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 104
          },
          "officersGetRanksAndCPs": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Leader"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SP",
                    "label"
                  ]
                ],
                "value": "CP"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Officer?",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "Think carefully about putting rules on sub-classes!": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 3
          },
          "Think carefully about rule order!": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 2
          },
          "Too many of this model in this type of unit.": {
            "evals": [
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ]
              },
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Unit Type",
                    "processed",
                    "term",
                    "current"
                  ]
                ]
              },
              {
                "actionable": true,
                "max": [
                  "{self}",
                  "stats",
                  "{1string}",
                  "value"
                ],
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "{0string}"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 122
          },
          "vetButNoAppropriateGunsLimitsAMS": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...and if so, adds the relevant tag to the \"none\" constraint.",
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "none"
                  ]
                ],
                "value": "Requires Frag Cannon, Autocannon, Submachine Gun, Machine Gun, or Rotary Cannon"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "Checks to see if the model has no guns that are AMS capable...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "AMSCapableGuns",
                    "value"
                  ]
                ],
                "value": 0
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 108
          },
          "vetButNotCavGearInfOrStriderLimitsOptions": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "none"
                  ]
                ],
                "value": "Requires Cavalry Gears Infantry or Striders"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Vet"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "SUM",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "Is the model not Cav, Gear, Inf, or Strider?",
                    "evals",
                    "4",
                    "result",
                    "truthy"
                  ]
                ],
                "value": 1
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 107
          },
          "vetButTerrainBuildingInfantyCavalryOrAirstrikeLimitsOptions": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "none"
                  ]
                ],
                "value": "No Terrain, Area Terrain, Buildings, Infantry, Cavalry or Airstrike counters."
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "Is the model Terrain, Area Terrain, Building, Infantry, Cavalry, or Airstrike?",
                    "evals",
                    "6",
                    "result",
                    "truthy"
                  ]
                ],
                "value": true
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 109
          },
          "veteransGetOptions": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...then add Veteran Upgrade to allowed...",
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Veteran Upgrade"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...and Veteran Upgrade Weapons too.",
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Veteran Upgrade Weapons"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model is a vet...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Vet"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          },
          "veteransShouldShowIt": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Veteran?",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Veteran? stat has been checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Veteran?",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 63
          },
          "VTOLSlimitOptions": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "none"
                  ]
                ],
                "value": "No VTOLs"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "VTOL"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 106
          }
        },
        "stats": {
          "Actions": {
            "group": "Accounting",
            "groupOrder": 2,
            "max": 3,
            "statOrder": 2,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Arm": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 5,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "Brawler Upgrade": {
            "group": "Hidden",
            "max": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "brawlStat": {
            "group": "Property Tracking",
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Duelist": {
            "dynamic": true,
            "group": "Model Options",
            "groupOrder": 3,
            "label": "Duelist?",
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "Duelist": 1
                }
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "tracked": true,
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "format": "{v}+",
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 9,
            "statType": "numeric",
            "tracked": true,
            "value": 2,
            "visibility": "normal"
          },
          "fireSupportMax": {
            "group": "Hidden",
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "fortificationsMax": {
            "group": "Hidden",
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "generalPurposeMax": {
            "group": "Hidden",
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "GU": {
            "format": "{v}+",
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 7,
            "statType": "numeric",
            "tracked": true,
            "value": 2,
            "visibility": "normal"
          },
          "H/S": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 6,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "HT": {
            "format": "{v}\"",
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 14,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "Leader": {
            "group": "Hidden",
            "label": "Officer Ranks",
            "max": 1,
            "min": 0,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "ModelName": {
            "group": "Profile",
            "groupOrder": 1,
            "label": "Model",
            "statOrder": 1,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "Mounted Weapons": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 11,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "MR": {
            "format": "W/G: {v}",
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 4,
            "statType": "numeric",
            "value": 0,
            "visibility": "normal"
          },
          "Officer?": {
            "dynamic": true,
            "group": "Model Options",
            "groupOrder": 3,
            "ranks": {
              "1": {
                "order": 1
              },
              "-": {
                "order": 0
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "PI": {
            "format": "{v}+",
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 8,
            "statType": "numeric",
            "tracked": true,
            "value": 2,
            "visibility": "normal"
          },
          "React Weapons": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 10,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "reconMax": {
            "group": "Hidden",
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "Roles": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 2,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "SP": {
            "group": "Accounting",
            "groupOrder": 2,
            "statOrder": 3,
            "statType": "numeric",
            "tracked": true,
            "value": null,
            "visibility": "normal"
          },
          "specialOperationsMax": {
            "group": "Hidden",
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "strikeMax": {
            "group": "Hidden",
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "Traits": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 12,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "TV": {
            "group": "Accounting",
            "groupOrder": 2,
            "statOrder": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "Type": {
            "group": "Profile",
            "groupOrder": 1,
            "ranks": {
              "Gear": {
                "order": 0
              },
              "Infantry": {
                "order": 1
              },
              "Strider": {
                "order": 2
              },
              "Cavalry": {
                "order": 3
              },
              "Vehicle": {
                "order": 4
              },
              "Drone": {
                "order": 5
              },
              "Terrain": {
                "order": 6
              },
              "Area Terrain": {
                "order": 7
              },
              "Building": {
                "order": 8
              },
              "Airstrike Counter": {
                "order": 9
              }
            },
            "statOrder": 13,
            "statType": "rank",
            "value": null,
            "visibility": "normal"
          },
          "Veteran?": {
            "dynamic": true,
            "group": "Model Options",
            "groupOrder": 3,
            "ranks": {
              "0": {
                "order": 0
              },
              "1": {
                "order": 1,
                "tracking": {},
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Vet"
                  }
                ]
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "0",
            "visibility": "hidden"
          }
        },
        "templateClass": "Grandparent"
      },
      "Model/Weapon Property": {
        "aspects": {
          "Order Traits A–Z": true,
          "Unique": true,
          "Visibility": "active"
        },
        "rules": {
          "labelAuxSystems": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...then append (Aux) to the designation.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Aux)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Aux_Systems is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Aux_System",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 147
          },
          "propertyAppendDesignationToParentModifications": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...then append the asset's designation to the parent's Modifications stat.",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Modifications",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "designation"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "note": "If the parent is not a model...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "lineage"
                  ]
                ],
                "value": "Model"
              },
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "...and the asset is \"modified\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Modified",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 148
          },
          "updateParentStatTraits": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "designation"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          }
        },
        "stats": {
          "Aux_System": {
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          },
          "Modified": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          }
        },
        "templateClass": "Grandparent"
      },
      "Model/Weapon Property, Variable": {
        "rules": {
          "renameWithFormattedNameVariable": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...change the designation of the asset to match that formatted value.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "NameVariable",
                  "processed",
                  "format",
                  "current"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "note": "If NameVariable is not 0...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "NameVariable",
                    "value"
                  ]
                ],
                "value": 0
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 145
          }
        },
        "stats": {
          "NameVariable": {
            "format": "renamePerProperty:{v}",
            "group": "Hidden",
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          }
        },
        "templateClass": "Model/Weapon Property"
      },
      "Model/Weapon Property, Variable and Type": {
        "rules": {
          "renameWithFormattedNameVariable": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "NameVariable",
                  "processed",
                  "format",
                  "current"
                ]
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Type",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "NameVariable",
                    "value"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Type": {
            "group": "Hidden",
            "groupOrder": 1,
            "ranks": {
              "Gear(s)": {
                "order": 0
              },
              "Squad(s)": {
                "order": 1
              },
              "Strider(s)": {
                "order": 2
              },
              "Cavalry": {
                "order": 3
              },
              "Vehicle(s)": {
                "order": 4
              },
              "Drone(s)": {
                "order": 5
              },
              "Team(s)": {
                "order": 6
              }
            },
            "statOrder": 13,
            "statType": "rank",
            "value": null,
            "visibility": "hidden"
          }
        },
        "templateClass": "Model/Weapon Property, Variable"
      },
      "Non-Veteran Model": {
        "rules": {
          "veteranForceModelsMustBeVets": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Then each model has to be a veteran.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Veteran?",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "Does the roster use the Veteran Force option?",
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Veteran Force?",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 42
          }
        },
        "stats": {
          "Veteran?": {
            "label": "Veteran? +2TV",
            "ranks": {
              "1": {
                "order": 1,
                "tracking": {
                  "TV": 2
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Vet"
                  }
                ]
              }
            }
          }
        },
        "templateClass": "Model"
      },
      "Ranged Weapon": {
        "rules": {
          "addAutoDuelistIfSelected": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...add the Auto, Duelist property.",
                "paths": [
                  [
                    "{self}",
                    "traits"
                  ]
                ],
                "value": "Model/Weapon Property§Auto, Duelist"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the upgrade is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Auto +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 84
          },
          "addStableDuelistIfSelected": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...add the Stable, Duelist property.",
                "paths": [
                  [
                    "{self}",
                    "traits"
                  ]
                ],
                "value": "Model/Weapon Property§Stable, Duelist"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the upgrade is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Stable +2TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 84
          },
          "increaseTVisDuelistStable&Combo": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "..then increment TV.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If this is a Combo weapon...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "/"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the Stable upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Stable +2TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 84
          },
          "makeAutoForDuelistVisible": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make the Auto upgrade visible.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Auto +1TV",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the model is a Duelist...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Duelist",
                    "value"
                  ]
                ],
                "value": "✓"
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the weapon has React...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "StatColumn",
                    "value"
                  ]
                ],
                "value": "React"
              },
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "note": "...and doesn't already have Auto...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Auto"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          },
          "makeStableForDuelistVisible": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then reveal the Duelist: Stable upgrade.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Stable +2TV",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the model is a Duelist...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Duelist",
                    "value"
                  ]
                ],
                "value": "✓"
              },
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "note": "...and doesn't already have Stable...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Stable"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          },
          "renameDuelistStableUpgradeIfCombo": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...change the upgrade label to +3TV.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Stable +2TV",
                    "label"
                  ]
                ],
                "value": "Duelist: Stable +3TV"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If this is a Combo weapon...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "/"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Auto +1TV": {
            "group": "Upgrades",
            "groupOrder": 3,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          },
          "Stable +2TV": {
            "group": "Upgrades",
            "groupOrder": 3,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 2
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          }
        },
        "templateClass": "Weapon"
      },
      "Ranged Weapon, Direct": {
        "stats": {
          "Mode": {
            "value": "Direct"
          }
        },
        "templateClass": "Ranged Weapon"
      },
      "Ranged Weapon, Direct or Indirect": {
        "stats": {
          "Mode": {
            "value": "Direct, Indirect"
          }
        },
        "templateClass": "Ranged Weapon"
      },
      "Ranged Weapon, Direct or Indirect, Link-upgrade": {
        "rules": {
          "makeDualForVetsVisible": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...reveal the upgrade.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Dual Guns +1TV",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the parent is a Vet...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "Vet"
                  ]
                ]
              },
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "note": "...and doesn't have the Combo trait...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "/"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          }
        },
        "stats": {
          "Dual Guns +1TV": {
            "group": "Upgrades",
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property§Link",
                      "stats": {
                        "Modified": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          }
        },
        "templateClass": "Ranged Weapon, Direct or Indirect"
      },
      "Ranged Weapon, Direct or Indirect, Swappable": {
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": ""
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Swap for:": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 2,
            "statType": "rank",
            "value": null,
            "visibility": "normal"
          }
        },
        "templateClass": "Ranged Weapon, Direct or Indirect"
      },
      "Ranged Weapon, Direct, AA-upgrade": {
        "assets": {
          "traits": []
        },
        "stats": {
          "AA +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 3,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property§AA",
                      "stats": {
                        "Modified": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "tracked": true,
            "value": "-",
            "visibility": "normal"
          }
        },
        "templateClass": "Ranged Weapon, Direct"
      },
      "Ranged Weapon, Direct, AA-upgrade, Link-upgrade": {
        "rules": {
          "MakeDualForVetsVisible": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...reveal the Dual Guns upgrade.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Dual Guns +1TV",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the parent is a Vet...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "Vet"
                  ]
                ]
              },
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "note": "...and doesn't have the Combo trait...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "/"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          }
        },
        "stats": {
          "Dual Guns +1TV": {
            "group": "Upgrades",
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property§Link",
                      "stats": {
                        "Modified": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          }
        },
        "templateClass": "Ranged Weapon, Direct, AA-upgrade"
      },
      "Ranged Weapon, Direct, Link-upgrade": {
        "rules": {
          "makeDualForVetsVisible": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...reveal the upgrade.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Dual Guns +1TV",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the parent is a Vet...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "Vet"
                  ]
                ]
              },
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "note": "...and doesn't have the Combo trait...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "/"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          }
        },
        "stats": {
          "Dual Guns +1TV": {
            "group": "Upgrades",
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property§Link",
                      "stats": {
                        "Modified": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          }
        },
        "templateClass": "Ranged Weapon, Direct"
      },
      "Ranged Weapon, Direct, Swappable": {
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": ""
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Swap for:": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 2,
            "statType": "rank",
            "value": null,
            "visibility": "normal"
          }
        },
        "templateClass": "Ranged Weapon, Direct"
      },
      "Ranged Weapon, Indirect": {
        "stats": {
          "Mode": {
            "value": "Indirect"
          }
        },
        "templateClass": "Ranged Weapon"
      },
      "Standard Upgrade": {
        "aspects": {
          "Unique": true,
          "Visibility": "active"
        },
        "stats": {
          "TV": {
            "tracked": true
          }
        },
        "templateClass": "Upgrade"
      },
      "Strider": {
        "stats": {
          "Type": {
            "value": "Strider"
          }
        },
        "templateClass": "Non-Veteran Model"
      },
      "Sub-list": {
        "templateClass": "Grandparent"
      },
      "Terrain": {
        "assets": {
          "traits": []
        },
        "removed": {
          "allowed": {
            "classifications": [
              "Standard Upgrade",
              "Standard Upgrade Weapons"
            ]
          },
          "keywords": {
            "Tags": [
              "UA: Fire Support",
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose"
            ]
          },
          "rules": {
            "maxEWis6+": {},
            "maxGUis6+": {},
            "maxPIis6+": {},
            "minEWis2+": {},
            "minGUis2+": {},
            "minPIis2+": {}
          }
        },
        "stats": {
          "Actions": {
            "max": 4
          },
          "MR": {
            "format": "-",
            "statType": "term",
            "value": "-"
          }
        },
        "templateClass": "Model"
      },
      "Unit": {
        "allowed": {
          "classifications": [
            "Model"
          ]
        },
        "rules": {
          "limitToFireSupportUA": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...then add UA: Fire Support to the Any constraint.",
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "UA: Fire Support"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the unit has the Fire Support type...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Unit Type",
                    "value"
                  ]
                ],
                "value": "Fire Support"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 101
          },
          "limitToFortificationsUA": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...then add UA: Fortifications to the Any constraint.",
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "UA: Fortifications"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the unit has the Fortifications UA...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Unit Type",
                    "value"
                  ]
                ],
                "value": "Fortifications"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 101
          },
          "limitToGeneralPurposeUA": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...then add UA: General Purpose to the Any constraint.",
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "UA: General Purpose"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the unit has the General Purpose type...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Unit Type",
                    "value"
                  ]
                ],
                "value": "General Purpose"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 101
          },
          "limitToReconUA": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...then add UA: Recon to the Any constraint.",
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "UA: Recon"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the unit has the Recon UA...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Unit Type",
                    "value"
                  ]
                ],
                "value": "Recon"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 101
          },
          "limitToSpecialOperationsUA": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...then add UA: Special Operations to the Any constraint.",
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "UA: Special Operations"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the unit has the Special Operations type...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Unit Type",
                    "value"
                  ]
                ],
                "value": "Special Operations"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 101
          },
          "limitToStrikeUA": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...then add UA: Strike to the Any constraint.",
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "UA: Strike"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the unit has the Strike UA...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Unit Type",
                    "value"
                  ]
                ],
                "value": "Strike"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 101
          },
          "This class is only for Primary and Secondary units.": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 2
          },
          "Units (Primary or Secondary) will only ever have Model child assets.": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 3
          }
        },
        "stats": {
          "Actions": {
            "group": "Accounting",
            "statOrder": 2,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "TV": {
            "group": "Accounting",
            "statOrder": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "Unit Type": {
            "dynamic": true,
            "group": "Accounting",
            "ranks": {
              "General Purpose": {
                "order": 0,
                "term": "generalPurposeMax"
              },
              "Strike": {
                "order": 1,
                "term": "strikeMax"
              },
              "Fire Support": {
                "order": 2,
                "term": "fireSupportMax"
              },
              "Recon": {
                "order": 3,
                "term": "reconMax"
              },
              "Special Operations": {
                "order": 4,
                "term": "specialOperationsMax"
              },
              "Fortifications": {
                "order": 5,
                "term": "fortificationsMax"
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "General Purpose",
            "visibility": "normal"
          }
        },
        "templateClass": "Grandparent"
      },
      "Upgrade": {
        "stats": {
          "TV": {
            "group": "Accounting",
            "statType": "numeric",
            "tracked": true,
            "value": null,
            "visibility": "normal"
          }
        },
        "templateClass": "Model/Weapon Property"
      },
      "Vehicle": {
        "stats": {
          "Type": {
            "value": "Vehicle"
          }
        },
        "templateClass": "Non-Veteran Model"
      },
      "Veteran Gear": {
        "stats": {
          "Type": {
            "value": "Gear"
          }
        },
        "templateClass": "Veteran Model"
      },
      "Veteran Infantry": {
        "constraints": {
          "none": []
        },
        "stats": {
          "MR": {
            "format": "I: {v}"
          },
          "Type": {
            "value": "Infantry"
          }
        },
        "templateClass": "Veteran Model"
      },
      "Veteran Model": {
        "stats": {
          "Veteran?": {
            "dynamic": false,
            "value": "1"
          }
        },
        "templateClass": "Model"
      },
      "Veteran Strider": {
        "stats": {
          "Type": {
            "value": "Strider"
          }
        },
        "templateClass": "Veteran Model"
      },
      "Veteran Upgrade": {
        "templateClass": "Upgrade"
      },
      "Veteran Upgrade Weapons": {
        "rules": {
          "stripModdedDesignation": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "TV": {
            "value": 1
          }
        },
        "templateClass": "Melee Weapon, Reach-upgrade, Dual-upgrade"
      },
      "Veteran Vehicle": {
        "stats": {
          "Type": {
            "value": "Vehicle"
          }
        },
        "templateClass": "Veteran Model"
      },
      "Weapon": {
        "aspects": {
          "Type": "game piece"
        },
        "rules": {
          "addPreciseDuelistIfSelected": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "note": "...then add the Precise, Duelist trait.",
                "paths": [
                  [
                    "{self}",
                    "traits"
                  ]
                ],
                "value": "Model/Weapon Property§Precise, Duelist"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the upgrade is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Precise +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 84
          },
          "concatenateOrClauses": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...to Traits, append the contents of Modifications...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Modifications",
                  "value"
                ]
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...and append OR...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "(OR)"
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...then append the contents of OrClause...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "OrClause",
                  "value"
                ]
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...and append the contents of Modifications again.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Modifications",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If there is an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          },
          "increaseTVifDuelistPreciseAndCombo": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "..then increment TV.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If this is a Combo weapon...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "/"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the Precise upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Precise +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 84
          },
          "makePreciseForDuelistsVisible": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then reveal the Duelist: Precise upgrade.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Precise +1TV",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the model is a Duelist...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Duelist",
                    "value"
                  ]
                ],
                "value": "✓"
              },
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "note": "...and doesn't already have Precise...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Precise"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          },
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Temp text 1"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Temp text 2"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 164
          },
          "renameDuelistPreciseUpgradeIfCombo": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...change the upgrade label to +2TV.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Precise +1TV",
                    "label"
                  ]
                ],
                "value": "Duelist: Precise +2TV"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If this is a Combo weapon...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "/"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          },
          "setDesignationWithoutReact": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 142
          },
          "updateStatMountedWeapons": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...add the name of the weapon to the parent's \"Mounted Weapons\" stat.",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Mounted Weapons",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "designation"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If StatColumn is set to Mounted...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "StatColumn",
                    "value"
                  ]
                ],
                "value": "Mounted"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "updateStatReactWeapons": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...put the designation in the parent's React Weapons stat.",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "React Weapons",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "designation"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If StatColumn is set to React...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "StatColumn",
                    "value"
                  ]
                ],
                "value": "React"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "weaponAppendModificationsToDesignation": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Modifications",
                  "processed",
                  "format",
                  "current"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Modified",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          }
        },
        "stats": {
          "Damage": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 3,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "Mode": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 5,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "Modifications": {
            "format": "({v})",
            "group": "Hidden",
            "statOrder": 2,
            "statType": "term",
            "value": null,
            "visibility": "hidden"
          },
          "Modified": {
            "group": "Hidden",
            "statOrder": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Name": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 1,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "OrClause": {
            "group": "Hidden",
            "statType": "term",
            "value": null,
            "visibility": "hidden"
          },
          "Precise +1TV": {
            "group": "Upgrades",
            "groupOrder": 3,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          },
          "Range": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 2,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "StatColumn": {
            "group": "Hidden",
            "ranks": {
              "Mounted": {
                "order": 0
              },
              "React": {
                "order": 1
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "Mounted",
            "visibility": "hidden"
          },
          "Traits": {
            "group": "Profile",
            "groupOrder": 1,
            "statOrder": 4,
            "statType": "term",
            "value": null,
            "visibility": "normal"
          },
          "TV": {
            "group": "Accounting",
            "groupOrder": 2,
            "statOrder": 1,
            "statType": "numeric",
            "tracked": true,
            "value": null,
            "visibility": "normal"
          }
        },
        "templateClass": "Grandparent"
      }
    },
    "assetCatalog": {
      "Airstrike Counter§Airstrike, High Explosives": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§BB (AP:2, Guided)"
          ]
        },
        "stats": {
          "GU": {
            "value": 4
          },
          "Model": {
            "value": "High Explosives"
          },
          "PI": {
            "value": 4
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Airstrike Counter§Airstrike, Napalm": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§BB (AI, Fire, Guided)"
          ]
        },
        "stats": {
          "GU": {
            "value": 4
          },
          "Model": {
            "value": "Napalm"
          },
          "PI": {
            "value": 4
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Cavalry§Armadillo Rider": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§MIW",
            "Melee Weapon, Reach-upgrade§HICW",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Climber",
            "Melee Weapon, Reach-upgrade§MICW (AP:1, Reach:1)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Armadillo Rider"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Cavalry§Barnaby Rider": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§MIW",
            "Melee Weapon, Reach-upgrade§HICW",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Climber",
            "Model/Weapon Property§Agile"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Barnaby Rider"
          },
          "MR": {
            "format": "W: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Cavalry§Jackrabbit": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Ranged Weapon, Direct§LIW",
            "Ranged Weapon, Direct or Indirect§LIGL",
            "Melee Weapon, Reach-upgrade§LICW"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "teamsGetBetterH/S": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...then append Team to the name...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Team"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the H/S value to 3/3.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Team is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Team +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 85
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Jackrabbit"
          },
          "MR": {
            "format": "G: {v}",
            "value": 11
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP+, RC"
          },
          "Team +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Cavalry§Jackrabbit Recon": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Ranged Weapon, Direct§LIW",
            "Melee Weapon, Reach-upgrade§LICW",
            "Model/Weapon Property§TD",
            "Model/Weapon Property§Comms"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "teamsGetBetterH/S": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...then append Team to the name...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Team"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the H/S value to 3/3.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Team is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Team +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 85
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 5
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Jackrabbit Recon"
          },
          "MR": {
            "format": "G: {v}",
            "value": 10
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP+, RC"
          },
          "Team +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Cavalry§Spitz Monowheel": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Ranged Weapon, Direct§LIW",
            "Ranged Weapon, Direct or Indirect§LIGL",
            "Melee Weapon, Reach-upgrade§LICW"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "teamsGetBetterH/S": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...then append Team to the name...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Team"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the H/S value to 3/3.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Team is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Team +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 85
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 5
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Spitz Monowheel"
          },
          "MR": {
            "format": "G: {v}",
            "value": 11
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP+, RC"
          },
          "Team +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Cavalry§Wallaby ATV": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Offroad",
            "Ranged Weapon, Direct§LIW",
            "Ranged Weapon, Direct or Indirect§LIGL",
            "Melee Weapon, Reach-upgrade§LICW"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "teamsGetBetterH/S": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...then append Team to the name...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Team"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the H/S value to 3/3.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Team is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Team +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 85
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Wallaby ATV"
          },
          "MR": {
            "format": "G: {v}",
            "value": 10
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP+, RC"
          },
          "Team +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Combat Group§Airstrikes": {
        "allowed": {
          "classifications": [
            "Airstrike Counter"
          ]
        },
        "removed": {
          "assets": {
            "traits": [
              "Unit§Primary Unit"
            ]
          },
          "stats": {
            "Veteran Group?": {},
            "Actions": {}
          }
        },
        "stats": {
          "maxAirstrikeCounters": {
            "group": "Hidden",
            "max": 4,
            "min": 0,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          }
        }
      },
      "Combat Group§Combat Group": {
        "rules": {
          "This asset is the container for normal combat groups.": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 3
          }
        },
        "stats": {
          "2iC": {
            "group": "Hidden",
            "max": 1,
            "statOrder": 2,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Add Secondary Unit?": {
            "dynamic": true,
            "group": "Combat Group Options",
            "groupOrder": 2,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "path": [
                      "{self}"
                    ],
                    "trait": "Unit§Secondary Unit"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "CG Leaders": {
            "group": "Hidden",
            "max": 1,
            "min": 1,
            "statOrder": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          }
        }
      },
      "Combat Group§Duelist (Independent)": {
        "allowed": {
          "classifications": [
            "Model"
          ]
        },
        "removed": {
          "assets": {
            "traits": [
              "Unit§Primary Unit"
            ]
          }
        },
        "rules": {
          "It will still contain a Primary Unit for bookeeping purposes.": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 4
          },
          "This asset is for Duelists that act in their own Combat Group.": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 3
          }
        },
        "stats": {
          "Actions": {
            "min": 1
          },
          "Model": {
            "group": "Hidden",
            "max": 1,
            "min": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "Unit Type": {
            "dynamic": true,
            "group": "Accounting",
            "ranks": {
              "General Purpose": {
                "order": 0,
                "term": "generalPurposeMax"
              },
              "Strike": {
                "order": 1,
                "term": "strikeMax"
              },
              "Fire Support": {
                "order": 2,
                "term": "fireSupportMax"
              },
              "Recon": {
                "order": 3,
                "term": "reconMax"
              },
              "Special Operations": {
                "order": 4,
                "term": "specialOperationsMax"
              },
              "Fortifications": {
                "order": 5,
                "term": "fortificationsMax"
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "General Purpose",
            "visibility": "normal"
          }
        }
      },
      "Drone§Drone, Demo": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Offroad",
            "Model/Weapon Property§Conscript",
            "Model/Weapon Property§Vuln:H",
            "Ranged Weapon, Direct§BB (AP:2, Demo:4)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 2
          },
          "EW": {
            "value": 6
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "1/0"
          },
          "maxDemoDrone": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "ModelName": {
            "value": "Demo Drone"
          },
          "MR": {
            "format": "G: {v}",
            "value": 5
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "TV": {
            "value": 2
          }
        },
        "text": "The Demo Drone may designate one enemy model as the primary target of its bomb if it is in base contact with that model.\n\nAfter the Demo Drone uses its weapon, it is destroyed and removed from the battlefield. Demo Drones destroyed in this way to not count towards an opponent’s victory points, such as from Pave the Way or Wipe Them Out."
      },
      "Drone§Drone, Hunter Killer": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Jump Jets:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Conscript",
            "Model/Weapon Property§Vuln:H",
            "Ranged Weapon, Direct§MMG, React"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 2
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "1/0"
          },
          "HT": {
            "value": 0.5
          },
          "maxHunterKiller": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "ModelName": {
            "value": "Hunter Killer"
          },
          "MR": {
            "format": "H: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {},
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 2
          }
        }
      },
      "Drone§Drone, Recon": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§TD",
            "Model/Weapon Property§Conscript",
            "Model/Weapon Property§Vuln:H"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: General Purpose"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 2
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 6
          },
          "H/S": {
            "value": "1/0"
          },
          "HT": {
            "value": 0.5
          },
          "maxReconDrone": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "ModelName": {
            "value": "Recon Drone"
          },
          "MR": {
            "format": "H: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 999
          },
          "Roles": {
            "value": "RC+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 2
          }
        }
      },
      "Duelist Melee Upgrade§MCW (React, Demo:4) +1TV": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "Modified": {
                  "value": 1
                },
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands"
          ]
        },
        "rules": {
          "renameMCW": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MCW"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "TV": {
            "value": 1
          }
        }
      },
      "Duelist Melee Upgrade§MVB (React) +1TV": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands"
          ]
        },
        "rules": {
          "renameMVB": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MVB"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Vibro-Blade"
          },
          "StatColumn": {
            "value": "React"
          },
          "TV": {
            "value": 1
          }
        }
      },
      "Duelist Ranged Upgrade§Trick Shot +1TV": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            {
              "item": "Model/Weapon Property§Link",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property§Split",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands"
          ]
        },
        "rules": {
          "renameLP": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LP"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Pistol"
          },
          "Range": {
            "value": "0-24/48"
          },
          "TV": {
            "value": 1
          }
        },
        "text": "This model does not suffer the -1D6 modifier when using the Split trait for attacks made with this weapon."
      },
      "Duelist Upgrade§Ace Gunner +1TV": {
        "rules": {
          "renameAceGunner": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Duelist: Ace Gunner"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "TV": {
            "value": 1
          }
        },
        "text": "When using an autocannon, this model does not suffer the -1D6 modifier when using the Split trait for attacks against multiple models."
      },
      "Duelist Upgrade§Add Agile +1TV": {
        "keywords": {
          "Tags": [
            "No Lumbering"
          ]
        },
        "rules": {
          "renameAgile": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Duelist: Agile"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "TV": {
            "value": 1
          }
        },
        "text": "Attacks targeting this model will miss on a margin of success of zero (MOS:0)."
      },
      "Duelist Upgrade§Add Shield +1-2TV": {
        "rules": {
          "increaseTVforArm8": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...increment TV.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 8,
                "not": false,
                "note": "If the model's armor is 8 or more...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Arm",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 61
          },
          "renameShield": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Duelist: Shield"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "TV": {
            "value": 1
          }
        },
        "text": "This model may reroll defense rolls if the attack originated from within its front arc."
      },
      "Duelist Upgrade§Advanced Control System +2-3TV": {
        "keywords": {
          "Tags": []
        },
        "rules": {
          "addACStoParentAllowed": {
            "actions": [
              {
                "actionType": "remove",
                "iterations": 1,
                "note": "If this upgrade is taken, then it is removed from disallowed.",
                "paths": [
                  [
                    "{parent}",
                    "disallowed",
                    "items"
                  ]
                ],
                "value": "Duelist Upgrade§Advanced Control System +2-3TV"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 112
          },
          "increaseTVforArm8": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...increment TV.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 8,
                "not": false,
                "note": "If the model's armor is 8 or more...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Arm",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 61
          },
          "renameACS": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Duelist: ACS"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "normal"
          },
          "TV": {
            "value": 2
          }
        },
        "text": "**Advanced Control System**  \nGain +1 action point."
      },
      "Duelist Upgrade§Lead by Example": {
        "aspects": {
          "Unique": true
        },
        "text": "- Once per round, for each duelist, whenever a duelist\ndamages an enemy model, give one SP to one model\nin formation with the duelist.\n- This SP does not convert to a CP. If not used, this SP\nis removed during cleanup."
      },
      "Gear§Bricklayer": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Repair",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Melee Weapon§LSE",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "Bricklayer Upgrades": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Hammer": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)"
                  }
                ]
              },
              "Saw Blade": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)"
                  }
                ]
              },
              "Vibrosword": {
                "order": 2,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB (Reach:1)"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "Hammer",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Bricklayer"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Gear§Bricklayer UC": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Repair",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Melee Weapon§LSE",
            "Ranged Weapon, Direct, Link-upgrade§MFC"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "Bricklayer Upgrades": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Hammer": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)"
                  }
                ]
              },
              "Saw Blade": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)"
                  }
                ]
              },
              "Vibrosword": {
                "order": 2,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB (Reach:1)"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "Hammer",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {},
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Bricklayer"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Gear§Bricklayer, Assault": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Repair",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Melee Weapon§LSE",
            "Ranged Weapon, Direct§MSC"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "renameAssaultBricklayer": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Assault Bricklayer"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "Bricklayer Upgrades": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Hammer": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)"
                  }
                ]
              },
              "Saw Blade": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)"
                  }
                ]
              },
              "Vibrosword": {
                "order": 2,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB (Reach:1)"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "Hammer",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Bricklayer"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Chargeur": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Repair"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "Chargeur Upgrades": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "None": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)"
                  }
                ]
              },
              "Chainsword": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW (Brawl:1, Reach:1)"
                  }
                ]
              },
              "Claw": {
                "order": 2,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "None",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chargeur"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Cobra, Engineering": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Repair",
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Indirect§HIM",
            "Ranged Weapon, Direct or Indirect, Swappable§MHG",
            "Melee Weapon§MSE"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "renameEngineeringCobra": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Engineering Cobra"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 2
          },
          "Melee Weapon": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Vibro-Blade": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
                  }
                ]
              },
              "Chainsword": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Reach:1)"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "Vibro-Blade",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Engineering Cobra"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Primary Weapon": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Heavy Autocannon": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, AA-upgrade§HAC, React"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              },
              "Strike Upgrade -1TV": {
                "order": 1,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§MBZ"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              },
              "Demolisher Hands -1TV": {
                "order": 2,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon§MCW (Link, Demo:4)"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "Heavy Autocannon",
            "visibility": "normal"
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Druid": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Repair",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct§HP",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Demo:4)",
            "Melee Weapon§LSE",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW (Fire:2)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Earth allies"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "prefixHydorIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then rename the item with the Hydor prefix.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Hydor Druid"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Hydor upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Hydor Upgrade -1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "Hydor Upgrade -1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Jetpack:X",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        },
                        "NameVariable": {
                          "value": 8
                        }
                      }
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Druid"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Druid, Ger": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Repair",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct§MBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Demo:4)",
            "Melee Weapon§LSE",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW (Fire:2)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Earth allies"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "prefixHydorIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then rename the item with the Hydor prefix.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Hydor Ger Druid"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Hydor upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Hydor Upgrade -1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "renameGerDruid": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Ger Druid"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "Hydor Upgrade -1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Jetpack:X",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        },
                        "NameVariable": {
                          "value": 8
                        }
                      }
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Ger Druid"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Druid, Ignus": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Repair",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, Link-upgrade§MFL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Demo:4)",
            "Melee Weapon§LSE",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW (Fire:2)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Earth allies"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "prefixHydorIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then rename the item with the Hydor prefix.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Hydor Ignus Druid"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Hydor upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Hydor Upgrade -1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "renameIgnusDruid": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Ignus Druid"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "Hydor Upgrade -1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Jetpack:X",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        },
                        "NameVariable": {
                          "value": 8
                        }
                      }
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Ignus Druid"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Druid, Yeoman": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Repair",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§LRP, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Demo:4)",
            "Melee Weapon§LSE",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW (Fire:2)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Earth allies"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "prefixHydorIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then rename the item with the Hydor prefix.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Hydor Yeoman Druid"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Hydor upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Hydor Upgrade -1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "renameYeomanDruid": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Yeoman Druid"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "Hydor Upgrade -1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Jetpack:X",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        },
                        "NameVariable": {
                          "value": 8
                        }
                      }
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Yeoman Druid"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Example Gear": {
        "allowed": {
          "classifications": [],
          "items": []
        },
        "assets": {
          "included": [],
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "constraints": {
          "any": []
        },
        "keywords": {
          "Tags": []
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 3
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 3
          },
          "HT": {
            "value": 1.5
          },
          "PI": {
            "value": 3
          },
          "React Weapons": {
            "value": ""
          },
          "reconMax": {
            "value": 1
          },
          "specialOperationsMax": {
            "value": 1
          },
          "strikeMax": {
            "value": 1
          },
          "Traits": {
            "value": ""
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Example Gear, Adv": {
        "allowed": {
          "items": []
        },
        "assets": {
          "included": [],
          "traits": [
            "Model/Weapon Property§Hands"
          ]
        },
        "constraints": {
          "any": []
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 3
          },
          "GU": {
            "value": 3
          },
          "HT": {
            "value": 1.5
          },
          "PI": {
            "value": 3
          },
          "React Weapons": {
            "value": ""
          },
          "Traits": {
            "value": ""
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Grizzly, Engineering": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Repair",
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Indirect§HIM",
            "Ranged Weapon, Direct or Indirect, Swappable§MHG",
            "Melee Weapon§MSE"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "renameEngineeringGrizzly": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Engineering Grizzly"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 2
          },
          "Melee Weapon": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Vibro-Blade": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
                  }
                ]
              },
              "Chainsword": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Reach:1)"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "Vibro-Blade",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Engineering Grizzly"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Primary Weapon": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Heavy Autocannon": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, AA-upgrade§HAC, React"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              },
              "Destroyer Upgrade -1TV": {
                "order": 1,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§MBZ"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              },
              "Demolisher Hands -1TV": {
                "order": 2,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon§MCW (Link, Demo:4)"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "Heavy Autocannon",
            "visibility": "normal"
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Python, Badlands": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Indirect§MFM",
            "Ranged Weapon, Direct, AA-upgrade§HAC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "renameBadlandsPython": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Badlands Python"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Badlands Python"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Gear§Sapeur": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Repair",
            "Model/Weapon Property§Shield",
            "Ranged Weapon, Indirect§HIM"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "Demolisher Hands -1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, AA-upgrade§HAC, React"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  },
                  {
                    "trait": "Melee Weapon§MCW (Link, Demo:4)"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "4/2"
          },
          "Hammer": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Reach:1)"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Sapeur"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Stonemason": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Repair",
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Melee Weapon§LSE",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "Melee Weapon": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Hammer": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)"
                  }
                ]
              },
              "Mauler Fist": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)"
                  }
                ]
              },
              "Chainsword": {
                "order": 2,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW (Brawl:1, Reach:1)"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "Hammer",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Stonemason"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Gear§Stonemason Riotmaster": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Repair",
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Melee Weapon§LSE",
            "Ranged Weapon, Direct, Link-upgrade§MFC, React"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "Melee Weapon": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Hammer": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)"
                  }
                ]
              },
              "Mauler Fist": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)"
                  }
                ]
              },
              "Chainsword": {
                "order": 2,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW (Brawl:1, Reach:1)"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "Hammer",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Stonemason Riotmaster"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Gear§Valence": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Repair",
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Melee Weapon§LSE",
            "Ranged Weapon, Direct§LAPGL",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {},
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "ModelName": {
            "value": "Valence"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          },
          "Valence Upgrades": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Hammer": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)"
                  }
                ]
              },
              "Fist or Saw": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)"
                  }
                ]
              },
              "Claw": {
                "order": 2,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "Hammer",
            "visibility": "normal"
          }
        }
      },
      "Gear§Valence, Demolisher": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Repair",
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Melee Weapon§LSE",
            "Ranged Weapon, Direct§LAPGL",
            "Ranged Weapon, Direct§MSC"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "renameDemolisherValence": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Demolisher Valence"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "ModelName": {
            "value": "Demolisher Valence"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          },
          "Valence Upgrades": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Hammer": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)"
                  }
                ]
              },
              "Fist or Saw": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)"
                  }
                ]
              },
              "Claw": {
                "order": 2,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "Hammer",
            "visibility": "normal"
          }
        }
      },
      "Gear§Valence, Foreman": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Repair",
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Melee Weapon§LSE",
            "Ranged Weapon, Direct§LAPGL",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Model/Weapon Property§Comms"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "renameForemanValence": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Foreman Valence"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "ModelName": {
            "value": "Foreman Valence"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          },
          "Valence Upgrades": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Hammer": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)"
                  }
                ]
              },
              "Fist or Saw": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)"
                  }
                ]
              },
              "Claw": {
                "order": 2,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "Hammer",
            "visibility": "normal"
          }
        }
      },
      "Gear§Valence, Sweeper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Repair",
            "Model/Weapon Property§Vuln:F",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Melee Weapon§LSE",
            "Ranged Weapon, Direct§LAPGL",
            "Ranged Weapon, Direct, Link-upgrade§MFC, React"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "renameSweeperValence": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Sweeper Valence"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "ModelName": {
            "value": "Sweeper Valence"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          },
          "Valence Upgrades": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Hammer": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)"
                  }
                ]
              },
              "Fist or Saw": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)"
                  }
                ]
              },
              "Claw": {
                "order": 2,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "Hammer",
            "visibility": "normal"
          }
        }
      },
      "Infantry§Infantry Team": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§MIW",
            "Ranged Weapon, Direct or Indirect§LIGL",
            "Melee Weapon, Reach-upgrade§LICW",
            "Ranged Weapon, Direct§LIR"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "appendSpecOpsFrogmen": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Frogmen.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Frogmen)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Frogmen option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Frogmen"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsMountaineering": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Mountaineer.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Mountaineer)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Mountaineering option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Mountaineering"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsParatrooper": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Paratrooper.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Paratrooper)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Paratrooper option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Paratrooper"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "changeRolesStatIfSpecOps": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then change the Roles stat to add the SO string.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Roles",
                    "value"
                  ]
                ],
                "value": "GP+, SK, FS, SO"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "note": "If the SpecOps stat is set to anything other than No...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          },
          "Infantry in Special Operations must take a SpecOps upgrade.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the parent unit is SO...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Unit Type",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "Special Operations"
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the model has a SpecOps upgrade, then don't error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 122
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Infantry Team"
          },
          "MR": {
            "format": "I:{v}",
            "value": 3
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "SpecOps +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "tracking": {
                  "specialOperationsMax": -1
                }
              },
              "Paratrooper": {
                "order": 1,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Airdrop"
                  }
                ]
              },
              "Mountaineering": {
                "order": 2,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  }
                ]
              },
              "Frogmen": {
                "order": 3,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 3
          }
        }
      },
      "Infantry§Infantry Team, Anti-Tank": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§LIW",
            "Melee Weapon, Reach-upgrade§LICW",
            "Ranged Weapon, Direct or Indirect§MAVM"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "appendSpecOpsFrogmen": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Frogmen.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Frogmen)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Frogmen option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Frogmen"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsMountaineering": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Mountaineer.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Mountaineer)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Mountaineering option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Mountaineering"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsParatrooper": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Paratrooper.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Paratrooper)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Paratrooper option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Paratrooper"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "changeRolesStatIfSpecOps": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then change the Roles stat to add the SO string.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Roles",
                    "value"
                  ]
                ],
                "value": "GP, SK, FS, SO"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "note": "If the SpecOps stat is set to anything other than No...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          },
          "changeToSquadIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the hull/structure to 3/3...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the designation to Infantry squad, Anti-Tank...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Infantry Squad, Anti-Tank"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the name to Anti-Tank Squad as well.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Anti-Tank Squad"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Squad upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Squad +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ]
          },
          "Infantry in Special Operations must take a SpecOps upgrade.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the parent unit is SO...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Unit Type",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "Special Operations"
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the model has a SpecOps upgrade, then don't error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 122
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Anti-Tank Team"
          },
          "MR": {
            "format": "I:{v}",
            "value": 3
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "SpecOps +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "tracking": {
                  "specialOperationsMax": -1
                }
              },
              "Paratrooper": {
                "order": 1,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Airdrop"
                  }
                ]
              },
              "Mountaineering": {
                "order": 2,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  }
                ]
              },
              "Frogmen": {
                "order": 3,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Infantry§Infantry Team, Assault": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§LIW",
            "Melee Weapon, Reach-upgrade§LICW",
            "Ranged Weapon, Direct§HIS (Burst:1)"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "appendSpecOpsFrogmen": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Frogmen.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Frogmen)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Frogmen option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Frogmen"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsMountaineering": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Mountaineer.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Mountaineer)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Mountaineering option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Mountaineering"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsParatrooper": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Paratrooper.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Paratrooper)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Paratrooper option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Paratrooper"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "changeRolesStatIfSpecOps": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then change the Roles stat to add the SO string.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Roles",
                    "value"
                  ]
                ],
                "value": "GP, SK, FS, SO"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "note": "If the SpecOps stat is set to anything other than No...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          },
          "changeToSquadIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the hull/structure to 3/3...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the designation to Infantry Squad, Assault...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Infantry Squad, Assault"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the name to Assault Squad as well.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Assault Squad"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Squad upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Squad +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ]
          },
          "Infantry in Special Operations must take a SpecOps upgrade.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the parent unit is SO...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Unit Type",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "Special Operations"
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the model has a SpecOps upgrade, then don't error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 122
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Assault Team"
          },
          "MR": {
            "format": "I:{v}",
            "value": 3
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "SpecOps +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "tracking": {
                  "specialOperationsMax": -1
                }
              },
              "Paratrooper": {
                "order": 1,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Airdrop"
                  }
                ]
              },
              "Mountaineering": {
                "order": 2,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  }
                ]
              },
              "Frogmen": {
                "order": 3,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 3
          }
        }
      },
      "Infantry§Infantry Team, Command": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§LIW",
            "Melee Weapon, Reach-upgrade§LICW",
            "Model/Weapon Property§Comms"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "appendSpecOpsFrogmen": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Frogmen.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Frogmen)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Frogmen option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Frogmen"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsMountaineering": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Mountaineer.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Mountaineer)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Mountaineering option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Mountaineering"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsParatrooper": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Paratrooper.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Paratrooper)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Paratrooper option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Paratrooper"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "changeRolesStatIfSpecOps": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then change the Roles stat to add the SO string.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Roles",
                    "value"
                  ]
                ],
                "value": "GP, SK, FS, SO"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "note": "If the SpecOps stat is set to anything other than No...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          },
          "changeToSquadIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the hull/structure to 3/3...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the designation to Infantry Squad, Command...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Infantry Squad, Command"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the name to Command Squad as well.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Command Squad"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Squad upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Squad +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ]
          },
          "Infantry in Special Operations must take a SpecOps upgrade.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the parent unit is SO...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Unit Type",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "Special Operations"
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the model has a SpecOps upgrade, then don't error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 122
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Command Team"
          },
          "MR": {
            "format": "I:{v}",
            "value": 3
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "SpecOps +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "tracking": {
                  "specialOperationsMax": -1
                }
              },
              "Paratrooper": {
                "order": 1,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Airdrop"
                  }
                ]
              },
              "Mountaineering": {
                "order": 2,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  }
                ]
              },
              "Frogmen": {
                "order": 3,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 3
          }
        }
      },
      "Infantry§Infantry Team, Engineering": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§LIW",
            "Melee Weapon, Reach-upgrade§LICW",
            "Melee Weapon§LSE",
            {
              "item": "Model/Weapon Property, Variable§Mine:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "appendSpecOpsFrogmen": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Frogmen.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Frogmen)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Frogmen option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Frogmen"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsMountaineering": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Mountaineer.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Mountaineer)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Mountaineering option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Mountaineering"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsParatrooper": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Paratrooper.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Paratrooper)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Paratrooper option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Paratrooper"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "changeRolesStatIfSpecOps": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then change the Roles stat to add the SO string.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Roles",
                    "value"
                  ]
                ],
                "value": "GP, SK, FS, SO"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "note": "If the SpecOps stat is set to anything other than No...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          },
          "changeToSquadIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the hull/structure to 3/3...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the designation to Infantry Squad, Engineering...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Infantry Squad, Engineering"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the name to Engineering Squad as well.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Engineering Squad"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Squad upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Squad +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ]
          },
          "Infantry in Special Operations must take a SpecOps upgrade.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the parent unit is SO...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Unit Type",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "Special Operations"
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the model has a SpecOps upgrade, then don't error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 122
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Engineering Team"
          },
          "MR": {
            "format": "I:{v}",
            "value": 3
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "SpecOps +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "tracking": {
                  "specialOperationsMax": -1
                }
              },
              "Paratrooper": {
                "order": 1,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Airdrop"
                  }
                ]
              },
              "Mountaineering": {
                "order": 2,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  }
                ]
              },
              "Frogmen": {
                "order": 3,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 3
          }
        }
      },
      "Infantry§Infantry Team, Medic": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§LIW",
            "Melee Weapon, Reach-upgrade§LICW",
            "Model/Weapon Property§Medic"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "appendSpecOpsFrogmen": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Frogmen.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Frogmen)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Frogmen option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Frogmen"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsMountaineering": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Mountaineer.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Mountaineer)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Mountaineering option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Mountaineering"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsParatrooper": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Paratrooper.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Paratrooper)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Paratrooper option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Paratrooper"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "changeRolesStatIfSpecOps": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then change the Roles stat to add the SO string.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Roles",
                    "value"
                  ]
                ],
                "value": "GP, SK, FS, SO"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "note": "If the SpecOps stat is set to anything other than No...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          },
          "changeToSquadIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the hull/structure to 3/3...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the designation to Infantry squad, Medic...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Infantry Squad, Medic"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the name to Medic Squad as well.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Medic Squad"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Squad upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Squad +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ]
          },
          "Infantry in Special Operations must take a SpecOps upgrade.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the parent unit is SO...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Unit Type",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "Special Operations"
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the model has a SpecOps upgrade, then don't error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 122
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Medic Team"
          },
          "MR": {
            "format": "I:{v}",
            "value": 3
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "SpecOps +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "tracking": {
                  "specialOperationsMax": -1
                }
              },
              "Paratrooper": {
                "order": 1,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Airdrop"
                  }
                ]
              },
              "Mountaineering": {
                "order": 2,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  }
                ]
              },
              "Frogmen": {
                "order": 3,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 2
          }
        }
      },
      "Infantry§Infantry Team, Mortar": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§LIW",
            "Melee Weapon, Reach-upgrade§LICW",
            "Ranged Weapon, Indirect§MIM (Brace)"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "appendSpecOpsFrogmen": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Frogmen.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Frogmen)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Frogmen option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Frogmen"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsMountaineering": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Mountaineer.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Mountaineer)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Mountaineering option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Mountaineering"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsParatrooper": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Paratrooper.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Paratrooper)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Paratrooper option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Paratrooper"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "changeRolesStatIfSpecOps": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then change the Roles stat to add the SO string.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Roles",
                    "value"
                  ]
                ],
                "value": "GP, SK, FS, SO"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "note": "If the SpecOps stat is set to anything other than No...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          },
          "changeToSquadIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the hull/structure to 3/3...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the designation to Infantry Squad, Mortar...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Infantry Squad, Mortar"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the name to Mortar Squad as well.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Mortar Squad"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Squad upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Squad +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ]
          },
          "Infantry in Special Operations must take a SpecOps upgrade.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the parent unit is SO...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Unit Type",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "Special Operations"
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the model has a SpecOps upgrade, then don't error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 122
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Mortar Team"
          },
          "MR": {
            "format": "I:{v}",
            "value": 3
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "SpecOps +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "tracking": {
                  "specialOperationsMax": -1
                }
              },
              "Paratrooper": {
                "order": 1,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Airdrop"
                  }
                ]
              },
              "Mountaineering": {
                "order": 2,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  }
                ]
              },
              "Frogmen": {
                "order": 3,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 3
          }
        }
      },
      "Infantry§Infantry Team, Recon": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§LIW",
            "Melee Weapon, Reach-upgrade§LICW",
            "Model/Weapon Property§TD"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "appendSpecOpsFrogmen": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Frogmen.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Frogmen)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Frogmen option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Frogmen"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsMountaineering": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Mountaineer.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Mountaineer)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Mountaineering option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Mountaineering"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsParatrooper": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Paratrooper.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Paratrooper)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Paratrooper option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Paratrooper"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "changeRolesStatIfSpecOps": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then change the Roles stat to add the SO string.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Roles",
                    "value"
                  ]
                ],
                "value": "GP, SK, FS, SO"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "note": "If the SpecOps stat is set to anything other than No...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          },
          "changeToSquadIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the hull/structure to 3/3...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the designation to Infantry Squad, Recon...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Infantry Squad, Recon"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the name to Recon Squad as well.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Recon Squad"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Squad upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Squad +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ]
          },
          "Infantry in Special Operations must take a SpecOps upgrade.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the parent unit is SO...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Unit Type",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "Special Operations"
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the model has a SpecOps upgrade, then don't error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 122
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Recon Team"
          },
          "MR": {
            "format": "I:{v}",
            "value": 3
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "SpecOps +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "tracking": {
                  "specialOperationsMax": -1
                }
              },
              "Paratrooper": {
                "order": 1,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Airdrop"
                  }
                ]
              },
              "Mountaineering": {
                "order": 2,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  }
                ]
              },
              "Frogmen": {
                "order": 3,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 3
          }
        }
      },
      "Infantry§Infantry Team, Sniper": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§LIW",
            "Melee Weapon, Reach-upgrade§LICW",
            "Ranged Weapon, Direct§MIR (Silent)"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "appendSpecOpsFrogmen": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Frogmen.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Frogmen)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Frogmen option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Frogmen"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsMountaineering": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Mountaineer.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Mountaineer)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Mountaineering option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Mountaineering"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "appendSpecOpsParatrooper": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...append Paratrooper.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "(Paratrooper)"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Paratrooper option is selected...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "Paratrooper"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "changeRolesStatIfSpecOps": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then change the Roles stat to add the SO string.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Roles",
                    "value"
                  ]
                ],
                "value": "GP, SK, FS, SO"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "note": "If the SpecOps stat is set to anything other than No...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "value"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          },
          "changeToSquadIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the hull/structure to 3/3...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "value": "3/3"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the designation to Infantry Squad, Sniper...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Infantry Squad, Sniper"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the name to Sniper Squad as well.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Name",
                    "value"
                  ]
                ],
                "value": "Sniper Squad"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Squad upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Squad +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ]
          },
          "Infantry in Special Operations must take a SpecOps upgrade.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the parent unit is SO...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Unit Type",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "Special Operations"
              },
              {
                "actionable": true,
                "not": false,
                "note": "...and the model has a SpecOps upgrade, then don't error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "SpecOps +1TV",
                    "processed",
                    "term",
                    "current"
                  ]
                ],
                "value": "No"
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 122
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Sniper Team"
          },
          "MR": {
            "format": "I:{v}",
            "value": 3
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "SpecOps +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "tracking": {
                  "specialOperationsMax": -1
                }
              },
              "Paratrooper": {
                "order": 1,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Airdrop"
                  }
                ]
              },
              "Mountaineering": {
                "order": 2,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  }
                ]
              },
              "Frogmen": {
                "order": 3,
                "tracking": {
                  "PI": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Sub"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 3
          }
        }
      },
      "Leader§2iC": {
        "stats": {
          "Initiative": {
            "value": 5
          },
          "Rank": {
            "value": "Second in Command"
          },
          "TV": {
            "value": 1
          }
        }
      },
      "Leader§CGL": {
        "stats": {
          "CG Leaders": {
            "value": 1
          },
          "Initiative": {
            "value": 5
          },
          "Rank": {
            "value": "Combat Group Leader"
          },
          "SP": {
            "value": 1
          }
        }
      },
      "Leader§CO": {
        "stats": {
          "CG Leaders": {
            "value": 1
          },
          "Initiative": {
            "value": 4
          },
          "Rank": {
            "value": "Commanding Officer"
          },
          "TV": {
            "value": 3
          }
        }
      },
      "Leader§Force Leader (CGL)": {
        "stats": {
          "CG Leaders": {
            "value": 1
          },
          "Initiative": {
            "value": 5
          },
          "Rank": {
            "value": "Force Leader"
          }
        },
        "text": ""
      },
      "Leader§TFC": {
        "stats": {
          "CG Leaders": {
            "value": 1
          },
          "Initiative": {
            "value": 3
          },
          "Rank": {
            "value": "Task Force Commander"
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Leader§XO": {
        "stats": {
          "CG Leaders": {
            "value": 1
          },
          "Initiative": {
            "value": 4
          },
          "Rank": {
            "value": "Executive Officer"
          },
          "TV": {
            "value": 3
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "rules": {
          "swapToLSG": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it be so.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to LSG...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "LSG"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToLVB": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to LVB...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "LVB"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "LCW": {
                "order": 0
              },
              "LSG": {
                "order": 1
              },
              "LVB": {
                "order": 2
              }
            },
            "value": "LCW"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW (Brawl:1, Reach:1)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "meleeBrawlStat": {
                  "value": 1
                },
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Reach:X",
              "stats": {
                "meleeReachStat": {
                  "value": 1
                },
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LCW"
              }
            ],
            "evals": []
          },
          "swapToLSG": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it be so.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to LSG...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "LSG"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToLVB": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to LVB...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "LVB"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "LCW": {
                "order": 0
              },
              "LSG": {
                "order": 1
              },
              "LVB": {
                "order": 2
              }
            },
            "value": "LCW"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "rules": {
          "swapToLCW": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to LCW...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "LCW"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToLVB": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to LVB...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "LVB"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Spike Gun"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "LCW": {
                "order": 0
              },
              "LSG": {
                "order": 1
              },
              "LVB": {
                "order": 2
              }
            },
            "value": "LSG"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "rules": {
          "swapToLCW": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to LCW...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "LCW"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToLSG": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it be so.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to LSG...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "LSG"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Vibro-Blade"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "LCW": {
                "order": 0
              },
              "LSG": {
                "order": 1
              },
              "LVB": {
                "order": 2
              }
            },
            "value": "LVB"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "rules": {
          "swapToMSG": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it be so.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MSG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MSG...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MSG"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToMVB": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MVB...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MVB"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "MCW": {
                "order": 0
              },
              "MSG": {
                "order": 1
              },
              "MVB": {
                "order": 2
              }
            },
            "value": "MCW"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Demo:4)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "meleeBrawlStat": {
                  "value": 1
                },
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "Modified": {
                  "value": 1
                },
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MCW"
              }
            ],
            "evals": []
          },
          "swapToMSG": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it be so.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MSG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MSG...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MSG"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToMVB": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MVB...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MVB"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "MCW": {
                "order": 0
              },
              "MSG": {
                "order": 1
              },
              "MVB": {
                "order": 2
              }
            },
            "value": "MCW"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Brawl:1, Reach:1)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "meleeBrawlStat": {
                  "value": 1
                },
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Reach:X",
              "stats": {
                "meleeReachStat": {
                  "value": 1
                },
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MCW"
              }
            ],
            "evals": []
          },
          "swapToMSG": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it be so.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MSG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MSG...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MSG"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToMVB": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MVB...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MVB"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "MCW": {
                "order": 0
              },
              "MSG": {
                "order": 1
              },
              "MVB": {
                "order": 2
              }
            },
            "value": "MCW"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Demo:4)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                },
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MCW"
              }
            ],
            "evals": []
          },
          "swapToMSG": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it be so.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MSG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MSG...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MSG"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToMVB": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MVB...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MVB"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "MCW": {
                "order": 0
              },
              "MSG": {
                "order": 1
              },
              "MVB": {
                "order": 2
              }
            },
            "value": "MCW"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW (Reach:1, Demo:4)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Reach:X",
              "stats": {
                "meleeReachStat": {
                  "value": 1
                },
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "Modified": {
                  "value": 1
                },
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MCW"
              }
            ],
            "evals": []
          },
          "swapToMSG": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it be so.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MSG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MSG...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MSG"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToMVB": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MVB...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MVB"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "MCW": {
                "order": 0
              },
              "MSG": {
                "order": 1
              },
              "MVB": {
                "order": 2
              }
            },
            "value": "MCW"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MSG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "rules": {
          "swapToMCW": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MCW...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MCW"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToMVB": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MVB...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MVB"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Spike Gun"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "MCW": {
                "order": 0
              },
              "MSG": {
                "order": 1
              },
              "MVB": {
                "order": 2
              }
            },
            "value": "MSG"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "rules": {
          "swapToMCW": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MCW...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MCW"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToMSG": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it be so.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MSG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MSG...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MSG"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Vibro-Blade"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "MCW": {
                "order": 0
              },
              "MSG": {
                "order": 1
              },
              "MVB": {
                "order": 2
              }
            },
            "value": "MVB"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB (Reach:1)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Reach:X",
              "stats": {
                "meleeReachStat": {
                  "value": 1
                },
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MVB"
              }
            ],
            "evals": []
          },
          "swapToMCW": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it happen.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MCW...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MCW"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "swapToMSG": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then make it be so.",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MSG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If Swap To: is set to MSG...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap to:",
                    "value"
                  ]
                ],
                "value": "MSG"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Vibro-Blade"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap to:": {
            "ranks": {
              "MCW": {
                "order": 0
              },
              "MSG": {
                "order": 1
              },
              "MVB": {
                "order": 2
              }
            },
            "value": "MVB"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade§HCW": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Combat Weapon"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade§HCW, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HCW"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade§HSG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 5
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Spike Gun"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade§HVB": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Vibro-Blade"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Combat Weapon"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW (Fire:2)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Fire:X",
              "stats": {
                "Modified": {
                  "value": 1
                },
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LCW"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Combat Weapon"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade§LSG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Spike Gun"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade§MCW": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Combat Weapon"
          }
        }
      },
      "Melee Weapon, Reach-upgrade, Dual-upgrade§MSG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Spike Gun"
          }
        }
      },
      "Melee Weapon, Reach-upgrade§HICW": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Heavy Infantry Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Melee Weapon, Reach-upgrade§LICW": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI"
          ]
        },
        "stats": {
          "Damage": {
            "value": "4"
          },
          "Name": {
            "value": "Light Infantry Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Melee Weapon, Reach-upgrade§MICW": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI"
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Medium Infantry Combat Weapon"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Melee Weapon, Reach-upgrade§MICW (AP:1, Reach:1)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "Modified": {
                  "value": 1
                },
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Reach:X",
              "stats": {
                "meleeReachStat": {
                  "value": 1
                },
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MICW"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Medium Infantry Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Melee Weapon, Reach-upgrade§MICW, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MICW"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Medium Infantry Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Melee Weapon§HSE": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "meleeBrawlStat": {
                  "value": -1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "10"
          },
          "Name": {
            "value": "Heavy Shaped Explosives"
          },
          "Range": {
            "value": "0/-"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Melee Weapon§LSE": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "meleeBrawlStat": {
                  "value": -1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Light Shaped Explosives"
          },
          "Range": {
            "value": "0/-"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Melee Weapon§LSE +0.5TV": {
        "aspects": {
          "Unique": true
        },
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "meleeBrawlStat": {
                  "value": -1
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands or Infantry"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LSE"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Light Shaped Explosives"
          },
          "Range": {
            "value": "0/-"
          },
          "Traits": {
            "value": ""
          },
          "TV": {
            "value": 0.5
          }
        }
      },
      "Melee Weapon§MCW (Link, Demo:4)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property§Link",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                },
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MCW"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Combat Weapons"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Melee Weapon§MSE": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "meleeBrawlStat": {
                  "value": -1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Medium Shaped Explosives"
          },
          "Range": {
            "value": "0/-"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Melee Weapon§MSE +1TV": {
        "aspects": {
          "Unique": true
        },
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "meleeBrawlStat": {
                  "value": -1
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands or Infantry"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MSE"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Medium Shaped Explosives"
          },
          "Range": {
            "value": "0/-"
          },
          "Traits": {
            "value": ""
          },
          "TV": {
            "value": 1
          }
        }
      },
      "Model/Weapon Property, Variable and Type§Occupancy:X": {
        "stats": {
          "NameVariable": {
            "format": "Occupancy:{v}"
          }
        },
        "text": "The Occupancy:X trait is used during deployment. Buildings with this trait will specify the type and amount of other models which may be inside it during its deployment. By default, this trait also lets you know how many models can fit inside a building sold by DP9.\n\n**Squads**: This model may hold up to X infantry squads.\n - 3 Infantry teams, infantry singles, or drones may be substituted in place of one infantry squad.\n\nModels do not have to spend any actions in order to enter or exit a building."
      },
      "Model/Weapon Property, Variable and Type§Transport:X": {
        "stats": {
          "NameVariable": {
            "format": "Transport:{v}"
          }
        },
        "text": "Models with this trait will specify the amount (X) and type of other models which they are able to transport.\n\n**Types**:\n - X Drones: This model may transport X number of universal drones.\n - X Squads: This model may transport up to X number of infantry squads.\n    - 3 infantry teams, infantry singles, or drones may be transported in place of one infantry squad.\n - X Gears: This model may transport X number of gears or X number of infantry squads.\n    - 3 infantry teams, infantry singles, or 3 drones may be transported instead of one gear.\nModels of the correct type may embark onto or disembark from a transport during the transport’s activation. \nIndividual models cannot embark and disembark on the same round.\n\n**Embark**: A transport may embark one or more models when they are within one inch of them.\n - Once the models have embarked onto the transport, remove them from the battlefield and place them to one side. They are considered to be inside the transport after they embark.\n - Models inside a transport cannot attack other models unless otherwise noted.\n - Only models with the VTOL trait may embark on elevated VTOLs.\n\n**Disembark**: A transport may also disembark one or more models.\n - Disembarked models are placed in base contact with the transport they disembarked from.\n - Transporting models must be braced or at combat speed in order to disembark other models.\n - Only models with the Airdrop or VTOL trait may disembark from elevated VTOLs.\n\n**Destroyed Transports**: All models within a transport are disgorged immediately if the transport is destroyed.\n - Place each model within one inch of the transport.\n -  Each model will perform an exclusive roll with two dice, using their PI skill. Each die that fails results in one damage. If a transport is overkilled the roll will require four dice.\n - Disgorged models are immobilized.\n - Models disgorged onto a surface which they cannot enter, such as deep water for most infantry, are immediately destroyed."
      },
      "Model/Weapon Property, Variable§AOE:X": {
        "stats": {
          "NameVariable": {
            "format": "AOE:{v}"
          }
        },
        "text": "**Area-of-Effect**  \nWeapons with the AOE:X trait may be used to attack an \narea with a radius of X inches around a target point. You \nwill need to declare a target point and measure radius \nfrom there. All models in the radius, friend or foe, become \ntargets. If the attack is centered on one model, then that \nmodel becomes the primary target. All other models \nwithin the area are considered secondary targets. Attack \nrolls against secondary targets have a -1d6 modifier. One \nopposed roll is performed for each targeted model.\n\nAn AOE attack may target a point on the battlefield instead \nof a model (i.e., to maximize the number of secondary \ntargets). There is no need to roll against a target point. It \nis automatic.\n\nIf the attack is indirect (sensor locked, or forward \nobserved), then it goes over any intervening terrain and \nis only blocked by overhanging cover that may be above \na target model. More specifically, ‘full’ medium or heavy \noverhanging cover because attacks will normally go \nthrough light cover (tree branches do not stop munitions).\n\nIf the attack is direct (LOS or sensor lock), then targets \nbehind full medium or heavy cover cannot be hit. For \nexample, a model completely behind a large rock, from \nthe perspective of the shooter, cannot be hit by a rocket \npack fired directly because the large rock is in the way. \nThis will more commonly only apply to secondary targets \nbecause you would normally have LOS to a primary target \nif you were shooting at it directly. One exception to that \nwould be if you shoot through full light cover at a target \nwhich you have sensor locked."
      },
      "Model/Weapon Property, Variable§AP:X": {
        "stats": {
          "NameVariable": {
            "format": "AP:{v}"
          }
        },
        "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
      },
      "Model/Weapon Property, Variable§Brawl:X": {
        "rules": {
          "updateNameVariablewithParentBrawlStat": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then set the NameVariable value to match the parent's brawlStat value.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "NameVariable",
                    "value"
                  ]
                ],
                "value": [
                  "{parent}",
                  "stats",
                  "brawlStat",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If the parent is some kind of model...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "lineage"
                  ]
                ],
                "value": "Model"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 143
          },
          "updateNameVariableWithParentMeleeBrawlStat": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then set the NameVariable value to match the parent's meleeBrawlStat value.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "NameVariable",
                    "value"
                  ]
                ],
                "value": [
                  "{parent}",
                  "stats",
                  "meleeBrawlStat",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If the parent is some kind of melee weapon...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "lineage"
                  ]
                ],
                "value": "Melee Weapon"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 143
          }
        },
        "stats": {
          "brawlStat": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "meleeBrawlStat": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "NameVariable": {
            "format": "Brawl:{v}"
          }
        },
        "text": "- A Brawl:X trait on a weapon will modify attack rolls by XD6 when using that weapon.\n - A Brawl:X trait on a model will modify all melee rolls that model makes by XD6.\n\nMultiple instances of the Brawl:X trait are cumulative."
      },
      "Model/Weapon Property, Variable§Burst:X": {
        "stats": {
          "NameVariable": {
            "format": "Burst:{v}"
          }
        },
        "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
      },
      "Model/Weapon Property, Variable§Demo:X": {
        "stats": {
          "NameVariable": {
            "format": "Demo:{v}"
          }
        },
        "text": "A weapon with the Demo:X trait will allow certain weapons to damage buildings, terrain and fortifications more efficiently than other weapons.\n\nWhen attacking a building, terrain feature or fortification, if the margin of success is 0 (MOS:0) or better the weapon will do the amount of damage equal to X. If regular damage calculations would result in more damage, then that may be used instead."
      },
      "Model/Weapon Property, Variable§Fire:X": {
        "stats": {
          "NameVariable": {
            "format": "Fire:{v}"
          }
        },
        "text": "When an attack with the Fire:X trait hits, apply damage as normal, then roll XD6. For each die that meets or exceeds a threshold of 4+, apply one additional damage. After this roll there are no further effects."
      },
      "Model/Weapon Property, Variable§Jetpack:X": {
        "stats": {
          "NameVariable": {
            "format": "Jetpack:{v}"
          }
        },
        "text": "This model can launch into the air, replacing a normal Move with a jetpack move.\n - You must move in a straight line horizontally up to X inches.\n - You may only turn the model before or after completing a jetpack move.\n - You may only perform Actions before or after completing a jetpack move.\n - Move over walls, or on to and off of elevations up to X inches in height without climbing.\n - Ignore difficult and dangerous ground during the middle of your jetpack move. Difficult or dangerous ground only applies if you finish a jetpack move on \nsuch terrain."
      },
      "Model/Weapon Property, Variable§Jump Jets:X": {
        "stats": {
          "NameVariable": {
            "format": "Jump Jets:{v}"
          }
        },
        "text": "This model can execute a powered jump over obstacles while using another movement type. You may not perform Actions in the middle of a jump.\n - Jump over walls, or on to and off of elevations, up to X inches in height without climbing."
      },
      "Model/Weapon Property, Variable§LA:X": {
        "stats": {
          "NameVariable": {
            "format": "LA:{v}"
          }
        },
        "text": "**Limited Ammo**  \nWeapons with the LA:X trait may only be fired X times before running out of ammunition. Mark this model with a token to indicate the ammunition remaining."
      },
      "Model/Weapon Property, Variable§Mine:X": {
        "stats": {
          "NameVariable": {
            "format": "Mine:{v}"
          }
        },
        "text": "A model with the Mine:X trait may plant mines on the battlefield. The model has X number of mines. Planted mines use 40mm round markers or bases. See **Mines and Minefields** (p24)."
      },
      "Model/Weapon Property, Variable§Reach:X": {
        "rules": {
          "updateNameVariableFromParentMeleeReachStat": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "NameVariable",
                    "value"
                  ]
                ],
                "value": [
                  "{parent}",
                  "stats",
                  "meleeReachStat",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 143
          }
        },
        "stats": {
          "meleeReachStat": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "NameVariable": {
            "format": "Reach:{v}"
          }
        },
        "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
      },
      "Model/Weapon Property, Variable§Sensors:X": {
        "stats": {
          "NameVariable": {
            "format": "Sensors:{v}"
          }
        },
        "text": "This model has two features in addition to the regular sensor rules noted in **Sensor Lock** (p11).\n - This model has a sensor range of “X” inches.\n - Models in formation may use this model’s sensor locks for ranged attacks."
      },
      "Model/Weapon Property§(OR)": {
        "text": "This trait is always accompanied by multiple ammunition \ntypes or additional firing modes. The player must choose \none type to use when attacking."
      },
      "Model/Weapon Property§/": {
        "text": "**Combination Weapon**  \nWeapons separated by a forward slash ( / ) are combination \nweapons. One example is the LAC/LGL. This would be a \nlight autocannon with a light grenade launcher (usually \nunderslung). This is there more as a hobby reference. The \nspecific part(s) that represents a combination weapon is \ndifferent from other weapons. For example, a LAC/LGL is \nvisually distinguishable from a LAC.\n\nEach weapon belonging to the combination weapon \nworks independently from the other. Firing each weapon \nrequires its own Action and they do not fire together just \nbecause they are a combination weapon. However, some \nupgrades, such as a few found in the duelist upgrade \noptions, do pertain to upgrading combination weapons."
      },
      "Model/Weapon Property§AA": {
        "text": "Weapons with the AA trait receive +1D6 for ranged attacks \nagainst elevated VTOLs and airstrike counters. This model \nmay retaliate against an airstrike counter when they \nperform an airstrike."
      },
      "Model/Weapon Property§Advanced": {
        "text": "When a weapon with the Advanced trait attacks, add +1 to \nthe result rolled (+1 R)."
      },
      "Model/Weapon Property§Agile": {
        "text": "Attacks targeting this model will miss on a margin of success of zero (MOS:0)."
      },
      "Model/Weapon Property§AI": {
        "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
      },
      "Model/Weapon Property§Airdrop": {
        "text": "Combat groups composed entirely of models with the \nAirdrop trait may deploy using the airdrop deployment \noption. See **Airdrop Deployment** (p17)."
      },
      "Model/Weapon Property§Amphib": {
        "text": "**Amphibious**  \nThis model may move over water terrain at its full MR."
      },
      "Model/Weapon Property§AMS": {
        "text": "**Anti-Missile System**  \nThis model may reroll defense rolls against all indirect \nattacks and airstrikes."
      },
      "Model/Weapon Property§Apex": {
        "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
      },
      "Model/Weapon Property§Auto": {
        "text": "A weapon with this trait may be used for retaliation once \nper round without spending an action point. If this is a \ncombination weapon, then only one of the weapons may \nbe used in this way per round."
      },
      "Model/Weapon Property§Auto, Duelist": {
        "rules": {
          "renameAuto": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Auto"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Modified": {
            "value": 1
          }
        },
        "text": "A weapon with this trait may be used for retaliation once \nper round without spending an action point. If this is a \ncombination weapon, then only one of the weapons may \nbe used in this way per round."
      },
      "Model/Weapon Property§Aux": {
        "text": "Weapons and traits with the Aux trait are unavailable \nwhen this model is crippled or haywired."
      },
      "Model/Weapon Property§B": {
        "text": "**Back Arc**  \nWeapons with this trait can only be fired at targets within \nthis model’s back arc (the back 180 degrees of the model)."
      },
      "Model/Weapon Property§Blast": {
        "text": "- If an attacking model has LOS to a target, indirect \nattacks with this weapon ignore the bonus defense \ndice for cover.\n - A fire mission may also receive this benefit if the \nforward observer, or the attacking model has LOS to \nthe target(s)."
      },
      "Model/Weapon Property§Brace": {
        "text": "This weapon may only be fired if the model is braced."
      },
      "Model/Weapon Property§CBS": {
        "text": "**Counter-Battery Sensors**  \nA model with the CBS trait may use a counterstrike \nreaction. See **Counterstrike** (p33)."
      },
      "Model/Weapon Property§Climber": {
        "text": "This trait allows a model to climb terrain features at its full \nMovement Rate (MR). See **Climbing** (p23)."
      },
      "Model/Weapon Property§Comms": {
        "text": "Commanders with the Comms trait do not need to roll \nfor orders, when all the recipients of the order are in \nformation with this model. They will still have to roll an \nopposed roll when there are jamming attempts made \nagainst their orders. Also, if a roll is required, due to one \nof the models being out of formation, and the roll fails, \nthen the order fails for all models in its entirety.\n\nCommanders in formation with a model that has the \nComms trait may use the Comms trait of that model and \ntheir EW skill in place of their own when issuing orders."
      },
      "Model/Weapon Property§Conscript": {
        "text": "If this model is not in formation with a commander, all of \nits skills are +1 TN. This model may not be a commander \nand commanders may never take upgrades that give them \nthe Conscript trait. Models with the Conscript trait may \nnot be upgraded with the Vet trait."
      },
      "Model/Weapon Property§Corrosion": {
        "text": "When an attack with the Corrosion trait hits a model, \napply damage as normal and then place a corrosion token \nnext to the model.\n\nIn each cleanup phase, each model with a corrosion token \nrolls one die. If the roll meets or exceeds a threshold of \n4+, the model will take one damage. If not removed by \na patch action, a corrosion token will stay on the model \nuntil the game ends or the model is destroyed. A model \ncan only have one corrosion token at a time."
      },
      "Model/Weapon Property§ECCM": {
        "text": "This model is equipped with an electronic counter-countermeasure system. This model and all friendly models within 6 inches gain +1D6 to all EW rolls. This effect is not cumulative with additional ECCM traits.\n\nModels with the ECCM trait can also perform ECCM firewall reactions."
      },
      "Model/Weapon Property§ECM": {
        "rules": {
          "makeECMupgradeVisible": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...make the upgrade visible.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ECM Upgrade +1TV",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the parent is a Duelist...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Duelist",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 83
          },
          "renameECM+IfUpgraded": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...rename to ECM+...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "ECM+"
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "...and add the ECM+ text.",
                "paths": [
                  [
                    "{self}",
                    "text"
                  ]
                ],
                "value": "\n\nIn addition, its ECM defense is always in effect unless it is haywired."
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If ECM_Plus is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ECM Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "ECM Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          }
        },
        "text": "This model possesses an electronic counter-measure \nsystem. A model with this trait may use the following trait \nenabled actions and reactions:\n - ECM Jam\n - ECM Attack\n - ECM Defense"
      },
      "Model/Weapon Property§Field Armor": {
        "text": "This model suffers one less damage from each attack to \na minimum of one damage. Field Armor reduces damage \nfrom the Armor Piercing trait, but it does not apply to \nother effects such as Fire, Corrosion or Haywire."
      },
      "Model/Weapon Property§Flak": {
        "text": "Weapons with the Flak trait add a +2D6 modifier to attack \nrolls targeting elevated VTOLs and airstrike counters."
      },
      "Model/Weapon Property§Frag": {
        "text": "**Fragmentation Ammunition**  \nWeapons with the Frag trait will add a +2D6 modifier to \nits attack rolls."
      },
      "Model/Weapon Property§Guided": {
        "text": "This weapon has increased accuracy when used for \na fire mission with a target designator. See **Target \nDesignator** (p50)."
      },
      "Model/Weapon Property§Hands": {
        "text": "This model has additional upgrade options available and \nlimited climbing ability. See **Climbing** (p23)."
      },
      "Model/Weapon Property§Haywire": {
        "text": "When an attack with the Haywire trait hits, apply damage \nas normal, then place a haywire token next to the model \nand roll 1D6. On a result of 4 or better, the model takes \none additional damage.\n\nA model with a haywired token counts as being haywired \nand suffers -1D6 on all PI, GU and EW rolls for the rest \nof the round. Haywired tokens are removed during the \ncleanup phase. A Haywired token may not be removed by \nthe patch action."
      },
      "Model/Weapon Property§L": {
        "text": "**Right Arc**  \nA weapon with this trait can only be fired at targets within this model’s left arc (the left 180 degrees of the model)."
      },
      "Model/Weapon Property§Link": {
        "text": "Weapons with the Link trait add a +1D6 modifier to any \nattack roll made with this weapon."
      },
      "Model/Weapon Property§Lumbering": {
        "text": "This model does not receive the +1D6 defense roll \nmodifier for being at top speed."
      },
      "Model/Weapon Property§Medic": {
        "text": "Medics may use the patch action. A medic may not use an \nattack action, be a forward observer, use ECM or ECCM \ntraits for ECM attacks, ECM jamming and firewalls, or \nperform detailed scans. However, they may retaliate if \nthey are fired upon. A medic may not capture objectives, \nbe an objective, or be any type of leader or commander.\n\nWhen a medic is the primary target of an attack, \nimmediately mark the attacking model with a token. \nAll attacks on this marked model receive a free reroll. \nRemove this token during the cleanup phase."
      },
      "Model/Weapon Property§Offroad": {
        "text": "Models with this trait may travel over difficult surfaces \nat their full MR. This does not apply to water terrain and \ndoes not benefit climbing."
      },
      "Model/Weapon Property§Precise": {
        "text": "Ranged weapons with the Precise trait add +1 to the result \nrolled (+1 R) when in optimal range.\n\nMelee weapons with the Precise trait add +1 to the result \nrolled (+1 R).\n\nMultiple sources of Precise are not cumulative."
      },
      "Model/Weapon Property§Precise, Duelist": {
        "rules": {
          "renamePrecise": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Precise"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Modified": {
            "value": 1
          }
        },
        "text": "Ranged weapons with the Precise trait add +1 to the result \nrolled (+1 R) when in optimal range.\n\nMelee weapons with the Precise trait add +1 to the result \nrolled (+1 R).\n\nMultiple sources of Precise are not cumulative."
      },
      "Model/Weapon Property§Prox": {
        "text": "**Proximity**  \nWeapons with the Prox trait may be used to perform a \ndirect attack against all models around this model, within \nthe weapon’s listed range.\n - All possible targets (friend or foe) are considered \nprimary targets.\n - This weapon cannot be used to attack elevated VTOLs \nunless the model using it is also an elevated VTOL.\n - Elevated VTOLs cannot use this weapon to attack \nnon-elevated VTOLs.\n - This weapon cannot be used to attack buildings, \nterrain or area terrain."
      },
      "Model/Weapon Property§R": {
        "text": "**Right Arc**  \nA weapon with this trait can only be fired at targets within \nthis model’s right arc (the right 180 degrees of the model)."
      },
      "Model/Weapon Property§React": {
        "text": "A weapon with this trait can be used for retaliations. Weapons listed under the React Weapons Column of a model table are considered to have the React trait."
      },
      "Model/Weapon Property§React+": {
        "text": "This model may perform a Reaction once per round \nwithout spending an action point.\n\nYou may also use this trait to focus. To focus, spend 1 \nadditional action point, or sacrifice your React+ trait for \nthe round to gain a +1D6 modifier to one direct attack \nor melee attack. This cannot be used for indirect attacks."
      },
      "Model/Weapon Property§Repair": {
        "text": "This model may use the patch action."
      },
      "Model/Weapon Property§Resist:C": {
        "text": "**Resistant to Corrosion**  \nThis model does not receive the extra damage that comes \nfrom the Corrosion trait."
      },
      "Model/Weapon Property§Resist:F": {
        "text": "**Resistant to Fire**  \nThis model does not receive the extra damage that comes \nfrom the Fire trait."
      },
      "Model/Weapon Property§Resist:H": {
        "text": "**Resistant to Haywire**  \nThis model does not roll for additional damage after being haywired. However, it still suffers the haywired status."
      },
      "Model/Weapon Property§SatUp": {
        "text": "**Satellite Uplink**  \nIncrease this model’s EW skill by one for all **independent**\nEW rolls. This is not cumulative with additional SatUps."
      },
      "Model/Weapon Property§Sensor Boom": {
        "text": "This model may check LOS and sensor lock from a point \nup to 1” away from its silhouette. This only applies to \nindirect attacks, forward observations, ECM attacks, ECM \njamming and detailed scan actions."
      },
      "Model/Weapon Property§Shield": {
        "text": "This model may reroll defense rolls if the attack originated from within its front arc."
      },
      "Model/Weapon Property§Silent": {
        "text": "Models do not lose the hidden status when attacking with \na weapon that has the Silent trait."
      },
      "Model/Weapon Property§Smoke": {
        "text": "A model with the Smoke trait may spend an action point \nto discharge smoke. See **Discharge Smoke** (p32)."
      },
      "Model/Weapon Property§SP:+1": {
        "text": "This model will gain one Skill Point (SP) in addition to \nany it may have from other sources. If the model is a \ncommander, it will instead gain one Command Point (CP)."
      },
      "Model/Weapon Property§Split": {
        "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
      },
      "Model/Weapon Property§Spray": {
        "text": "Models attacked with this weapon do not gain defense \nmodifiers from partial cover. This weapon cannot be fired \nthrough full light cover."
      },
      "Model/Weapon Property§Stable": {
        "text": "This model receives +1D6 to direct and indirect attack \nrolls while at combat speed or at top speed.\n\nMultiple sources of Stable are not cumulative."
      },
      "Model/Weapon Property§Stable, Duelist": {
        "rules": {
          "renameStable": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Stable"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Modified": {
            "value": 1
          }
        },
        "text": "This model receives +1D6 to direct and indirect attack \nrolls while at combat speed or at top speed.\n\nMultiple sources of Stable are not cumulative."
      },
      "Model/Weapon Property§Stationary": {
        "text": "This model is always braced, cannot move or turn, and \nmay not perform hide actions or evade reactions."
      },
      "Model/Weapon Property§Stealth": {
        "text": "Enemy models cannot sensor lock this model until it is \nwithin half their sensor range. For example, a model with \na standard sensor range of 18 inches can only sensor lock \na model with the Stealth trait at 9 inches or less."
      },
      "Model/Weapon Property§Sub": {
        "text": "**Submersible**  \nThis model uses its full MR through water. While in water, \nthis model has partial cover.\n\nModels with the Sub trait may also used the submerged \ndeployment option. See **Submerged Deployment** (p17)."
      },
      "Model/Weapon Property§Supply": {
        "text": "Models with this trait may use the reload action to \nreplenish ammunition for a weapon with the LA:X trait."
      },
      "Model/Weapon Property§T": {
        "text": "**Turret**  \nA turret mounted weapon has 360 degree rotation and \ncan be used to fire within any arc.\nTurrets do not remove the back arc modifier when this \nmodel is attacked."
      },
      "Model/Weapon Property§TD": {
        "text": "**Target Designator**  \nA target designator is a precision laser marking device \nwhich steers guided weapons to a target.\n\nIn order to designate a target with the TD trait, a model \nmust successfully perform a forward observation action \nwith LOS **and** sensor lock.\n\nAfter the forward observation, fire missions using guided \nweapons receive +1D6 on the attack roll in addition to the \nstandard +1D6 bonus from the forward observation. Both \nbonuses apply against the primary target only."
      },
      "Model/Weapon Property§Towed": {
        "text": "One model with this trait may be towed behind a gear, \nstrider or vehicle with the W or G movement type. Models \nwith the VTOL trait cannot be used to tow.\n\nTowing uses all the rules associated with transports with \nthe following exceptions:\n - The towing model cannot move more than 6 inches \nfor each move.\n - The towed model is placed behind the model towing \nit, facing aft. It does not go inside a transport.\n - The towed model may be attacked normally.\n - The towed model cannot perform any Actions while \nit is being towed."
      },
      "Model/Weapon Property§Vet": {
        "stats": {
          "SP": {
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          }
        },
        "text": "**Veteran**  \nThis model is considered a veteran. It has one Skill Point \n(SP) and may purchase upgrades from the standard and \nveteran upgrade lists."
      },
      "Model/Weapon Property§VTOL": {
        "text": "**Vertical Take-Off and Landing**  \nVTOLs like helicopters and hoppers can take to the air. \nOnce per Move, models with the VTOL trait may choose \nwhether to be elevated or at Nap Of the Earth (NOE).\n\n**NOE**: While at NOE a model moves using the hover \nmovement type, or any other movement type that is \navailable to that model.\n\n**Elevated VTOLs**:\n - Are required to be marked as being elevated.\n - Treat all surfaces as open surfaces. Elevated VTOLs \ncan fly over any terrain feature. They are assumed to \nbe above all terrain features.\n - Ignore mines and minefields.\n - All measurements are made to and from the elevated \nVTOL’s base or silhouette, and not from an elevated \nlocation above the table.\n - Do not obscure LOS and cannot be used as cover.\n - May be moved through as long as the Move does not \nend with any bases or models on top of each other.\n\n**When elevated VTOLs attack models on the ground**:\n - They gain the elevation bonus for attack (-1 TN).\n - Cannot attack with melee or proximity weapons.\n - LOS from the elevated VTOL ignores terrain that is \nnot within 1” of the target. Targets on the ground \ncannot use cover unless they are within one inch of it.\n\n**When models on the ground attack elevated VTOLs**:\n - Elevated VTOLs gain a defense bonus of +1D6 against \nany ranged attacks.\n - Cannot be attacked with melee or proximity weapons.\n - Cannot be attacks with weapons that have the Spray trait, such as flamers (LFL, MFL or HFL).\n - Cannot gain defense bonuses from cover or smoke.\n - Cannot gain defense bonuses from ECM defense unless it originates from other elevated VTOLs.\n - LOS to an elevated VTOL, from a model on the \nground, ignores all terrain that the attacking model is \nnot within 1” of.\n\n**When Elevated VTOLs attack other Elevated VTOLs**:\n - Cover is not available.\n - LOS is never obscured.\n - Elevated VTOLs still gain +1D6 for defense against \nranged attacks.\n - Elevated VTOLs attacking other elevated VTOLs do \nnot gain -1TN for being elevated.\n - Can be attacked via melee or proximity weapons from \nother elevated VTOLs."
      },
      "Model/Weapon Property§Vuln:C": {
        "text": "**Vulnerable to Corrosion**  \nThis model automatically suffers damage from the \nCorrosion trait without a roll."
      },
      "Model/Weapon Property§Vuln:F": {
        "text": "**Vulnerable to Fire**  \nThis model automatically suffers damage from the Fire \ntrait without a roll."
      },
      "Model/Weapon Property§Vuln:H": {
        "text": "**Vulnerable to Haywire**  \nThis model automatically suffers damage from the \nHaywire trait and ECM attacks without a roll."
      },
      "Ranged Weapon, Direct or Indirect, Link-upgrade§LAAM (Link)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Flak",
            "Model/Weapon Property§Guided",
            {
              "item": "Model/Weapon Property§Link",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LAAM"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Anti-Air Missile"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Link-upgrade§LATM (Link)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Guided",
            {
              "item": "Model/Weapon Property§Link",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Light Anti-Tank Missile"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Link-upgrade§LGL": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Grenade Launcher"
          },
          "Range": {
            "value": "6-12/24"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Link-upgrade§LGL, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LGL"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Grenade Launcher"
          },
          "Range": {
            "value": "6-12/24"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Link-upgrade§MGL": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Grenade Launcher"
          },
          "Range": {
            "value": "6-12/24"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Link-upgrade§MGL, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MGL"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Grenade Launcher"
          },
          "Range": {
            "value": "6-12/24"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§HAAM": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Flak",
            "Model/Weapon Property§Guided"
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§HATM"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "HAAM"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Anti-Air Missile"
          },
          "Range": {
            "value": "12-36/72"
          },
          "Swap for:": {
            "ranks": {
              "HAAM": {
                "order": 0
              },
              "HATM": {
                "order": 1
              }
            },
            "value": "HATM"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§HATM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§HAAM"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "HATM"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "10"
          },
          "Name": {
            "value": "Heavy Anti-Tank Missile"
          },
          "Range": {
            "value": "12-36/72"
          },
          "Swap for:": {
            "ranks": {
              "HAAM": {
                "order": 0
              },
              "HATM": {
                "order": 1
              }
            },
            "value": "HAAM"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§HHG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct, Swappable§HPZ"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "HHG"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "10"
          },
          "Name": {
            "value": "Heavy Hand Grenades"
          },
          "Range": {
            "value": "3-6/9"
          },
          "Swap for:": {
            "ranks": {
              "HHG": {
                "order": 0
              },
              "HPZ": {
                "order": 1
              }
            },
            "value": "HPZ"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§LAAM": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Flak",
            "Model/Weapon Property§Guided"
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§LATM"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "LAAM"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Anti-Air Missile"
          },
          "Range": {
            "value": "12-36/72"
          },
          "Swap for:": {
            "ranks": {
              "LAAM": {
                "order": 0
              },
              "LATM": {
                "order": 1
              }
            },
            "value": "LATM"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§LATM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§LAAM"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "LATM"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Light Anti-Tank Missile"
          },
          "Range": {
            "value": "12-36/72"
          },
          "Swap for:": {
            "ranks": {
              "LAAM": {
                "order": 0
              },
              "LATM": {
                "order": 1
              }
            },
            "value": "LAAM"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§LATM, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§LAAM"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "LATM"
              }
            ]
          },
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LATM"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Light Anti-Tank Missile"
          },
          "Range": {
            "value": "12-36/72"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap for:": {
            "ranks": {
              "LAAM": {
                "order": 0
              },
              "LATM": {
                "order": 1
              }
            },
            "value": "LAAM"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§LHG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct, Swappable§LPZ"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "LHG"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Light Hand Grenades"
          },
          "Range": {
            "value": "3-6/9"
          },
          "Swap for:": {
            "ranks": {
              "LHG": {
                "order": 0
              },
              "LPZ": {
                "order": 1
              }
            },
            "value": "LPZ"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§MAAM": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Flak",
            "Model/Weapon Property§Guided"
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§MATM"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "MAAM"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Anti-Air Missile"
          },
          "Range": {
            "value": "12-36/72"
          },
          "Swap for:": {
            "ranks": {
              "MAAM": {
                "order": 0
              },
              "MATM": {
                "order": 1
              }
            },
            "value": "MATM"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§MATM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§MAAM"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "MATM"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Medium Anti-Tank Missile"
          },
          "Range": {
            "value": "12-36/72"
          },
          "Swap for:": {
            "ranks": {
              "MAAM": {
                "order": 0
              },
              "MATM": {
                "order": 1
              }
            },
            "value": "MAAM"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§MATM, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§MAAM"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "MATM"
              }
            ]
          },
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MATM"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Medium Anti-Tank Missile"
          },
          "Range": {
            "value": "12-36/72"
          },
          "StatColumn": {
            "value": "React"
          },
          "Swap for:": {
            "ranks": {
              "MAAM": {
                "order": 0
              },
              "MATM": {
                "order": 1
              }
            },
            "value": "MAAM"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect, Swappable§MHG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct, Swappable§MPZ"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "MHG"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Medium Hand Grenades"
          },
          "Range": {
            "value": "3-6/9"
          },
          "Swap for:": {
            "ranks": {
              "MHG": {
                "order": 0
              },
              "MPZ": {
                "order": 1
              }
            },
            "value": "MPZ"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§HAPR": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Anti-Personnel Rocket"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§HAR": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Artillery Rocket"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§HAVM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Heavy Anti-Vehicle Missile"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§HFG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 5
                }
              }
            }
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "AOE:3, Blast"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:5"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "11"
          },
          "Name": {
            "value": "Heavy Field Gun"
          },
          "Range": {
            "value": "12-24/48"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§HGL": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Grenade Launcher"
          },
          "Range": {
            "value": "6-12/24"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§HGL, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HGL"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Grenade Launcher"
          },
          "Range": {
            "value": "6-12/24"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§HIGL": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "AOE:2, Blast"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:1"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Heavy Infantry Grenade Launcher"
          },
          "Range": {
            "value": "3-9/18"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§HRP": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Rocket Pack"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§HRP (T, Link)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property§T",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property§Link",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HRP"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Rocket Pack"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§HRP, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HRP"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Rocket Pack"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§LAPR": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Anti-Personnel Rocket"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§LAR": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Artillery Rocket"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§LAR (T)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property§T",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LAR"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Artillery Rocket"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§LAVM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Light Anti-Vehicle Missile"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§LFG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "AOE:3, Blast"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:3"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Light Field Gun"
          },
          "Range": {
            "value": "12-24/48"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§LFG, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LFG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Light Field Gun"
          },
          "Range": {
            "value": "12-24/48"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§LHG +0.5TV": {
        "aspects": {
          "Unique": true
        },
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LHG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Light Hand Grenades"
          },
          "Range": {
            "value": "3-6/9"
          },
          "TV": {
            "value": 0.5
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§LIGL": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "AOE:2, Blast"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:1"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Light Infantry Grenade Launcher"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§LRP": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Rocket Pack"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§LRP, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LRP"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Rocket Pack"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§MAPR": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Anti-Personnel Rocket"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§MAPR, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MAPR"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Anti-Personnel Rocket"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§MAR": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Artillery Rocket"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§MAVM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Medium Anti-Vehicle Missile"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§MFG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "AOE:3, Blast"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:4"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "10"
          },
          "Name": {
            "value": "Medium Field Gun"
          },
          "Range": {
            "value": "12-24/48"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§MFG, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "AOE:3, Blast"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:4"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          },
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MFG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "10"
          },
          "Name": {
            "value": "Medium Field Gun"
          },
          "Range": {
            "value": "12-24/48"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§MHG +1TV": {
        "aspects": {
          "Unique": true
        },
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MHG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Medium Hand Grenades"
          },
          "Range": {
            "value": "3-6/9"
          },
          "TV": {
            "value": 1
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§MIGL": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "AOE:2, Blast"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:1"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Medium Infantry Grenade Launcher"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§MRP": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Rocket Pack"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct or Indirect§MRP, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MRP"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Rocket Pack"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Split",
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Precise"
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Split"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Precise"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Autocannon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Split",
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Precise"
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Split"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Precise"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Autocannon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC (B)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Split",
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Precise",
            {
              "item": "Model/Weapon Property§B",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Split"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Precise"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          },
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MAC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Autocannon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC (L)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Split",
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Precise",
            {
              "item": "Model/Weapon Property§L",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Split"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Precise"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          },
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MAC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Autocannon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC (R)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Split",
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Precise",
            {
              "item": "Model/Weapon Property§R",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Split"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Precise"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          },
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MAC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Autocannon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§HAC": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Split",
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Precise"
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Split"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Precise"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "value": 1
          },
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Autocannon"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§HAC, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Split",
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Precise"
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Split"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Precise"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          },
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Change the name from HAC, React to HAC.",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HAC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "value": 1
          },
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Autocannon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§HLC": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§Advanced"
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Laser Cannon"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§HLC, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§Advanced"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HLC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Laser Cannon"
          },
          "Range": {
            "value": "12-36/72"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§HRC": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Heavy Rotary Cannon"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§HRC, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HRC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Heavy Rotary Cannon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§HRL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Heavy Rotary Laser"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§HRL, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HRL"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Heavy Rotary Laser"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§LLC": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§Advanced"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Laser Cannon"
          },
          "Range": {
            "value": "12-36/72"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§LRC": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Light Rotary Cannon"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§LRC, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LRC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Light Rotary Cannon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§LRL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Light Rotary Laser"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§MLC": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§Advanced"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Laser Cannon"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§MLC, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§Advanced"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MLC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Laser Cannon"
          },
          "Range": {
            "value": "12-36/72"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§MRC": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Medium Rotary Cannon"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§MRC (T, Link, AA)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split",
            {
              "item": "Model/Weapon Property§T",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property§Link",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property§AA",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MRC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Medium Rotary Cannon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§MRC, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MRC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Medium Rotary Cannon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§MRL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Medium Rotary Laser"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct, AA-upgrade§MRL, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MRL"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Medium Rotary Laser"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§LFC": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Frag",
            "Model/Weapon Property§AI"
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Precise, AP:1"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Frag, AI"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Light Frag Cannon"
          },
          "Range": {
            "value": "3-9/18"
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§LFC, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Frag",
            "Model/Weapon Property§AI"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LFC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Light Frag Cannon"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§LFL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Fire:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Spray"
          ]
        },
        "stats": {
          "Damage": {
            "value": "3"
          },
          "Name": {
            "value": "Light Flamer"
          },
          "Range": {
            "value": "0-9/18"
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§LFL, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Fire:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Spray"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LFL"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "3"
          },
          "Name": {
            "value": "Light Flamer"
          },
          "Range": {
            "value": "0-9/18"
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§LP": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Pistol"
          },
          "Range": {
            "value": "0-12/24"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§LP +0.5TV": {
        "aspects": {
          "Unique": true
        },
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise"
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LP"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Pistol"
          },
          "Range": {
            "value": "0-12/24"
          },
          "StatColumn": {
            "value": "React"
          },
          "TV": {
            "value": 0.5
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§LSMG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "AMSCapableGuns": {
            "value": 1
          },
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Light Submachine Gun"
          },
          "Range": {
            "value": "0-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§LSMG +0.5TV": {
        "aspects": {
          "Unique": true
        },
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LSMG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "value": 1
          },
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Light Submachine Gun"
          },
          "Range": {
            "value": "0-9/18"
          },
          "StatColumn": {
            "value": "React"
          },
          "TV": {
            "value": 0.5
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§MFC": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Frag",
            "Model/Weapon Property§AI"
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Precise, AP:2"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Frag, AI"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Medium Frag Cannon"
          },
          "Range": {
            "value": "3-9/18"
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§MFC, React": {
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Precise, AP:2"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Frag, AI"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          },
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MFC"
              }
            ],
            "evals": []
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§MFL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Fire:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Spray"
          ]
        },
        "stats": {
          "Damage": {
            "value": "4"
          },
          "Name": {
            "value": "Medium Flamer"
          },
          "Range": {
            "value": "0-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§MP": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Pistol"
          },
          "Range": {
            "value": "0-12/24"
          }
        }
      },
      "Ranged Weapon, Direct, Link-upgrade§MSMG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Medium Submachine Gun"
          },
          "Range": {
            "value": "0-9/18"
          }
        }
      },
      "Ranged Weapon, Direct, Swappable§HPZ": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§HHG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "HPZ"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Panzerfaust"
          },
          "Range": {
            "value": "3-6/9"
          },
          "Swap for:": {
            "ranks": {
              "HHG": {
                "order": 0
              },
              "HPZ": {
                "order": 1
              }
            },
            "value": "HHG"
          }
        }
      },
      "Ranged Weapon, Direct, Swappable§LPZ": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§LHG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "LPZ"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Panzerfaust"
          },
          "Range": {
            "value": "3-6/9"
          },
          "Swap for:": {
            "ranks": {
              "LHG": {
                "order": 0
              },
              "LPZ": {
                "order": 1
              }
            },
            "value": "LHG"
          }
        }
      },
      "Ranged Weapon, Direct, Swappable§MPZ": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "rules": {
          "implementSwapFor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "|** This action must be edited; text to match SWAPPED weapon **|",
                "paths": [
                  [
                    "{self}",
                    "item"
                  ]
                ],
                "value": "Ranged Weapon, Direct or Indirect, Swappable§MHG"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "|** This eval must be edited; text to match CURRENT weapon **|",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Swap for:",
                    "value"
                  ]
                ],
                "value": "MPZ"
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Panzerfaust"
          },
          "Range": {
            "value": "3-6/9"
          },
          "Swap for:": {
            "ranks": {
              "MHG": {
                "order": 0
              },
              "MPZ": {
                "order": 1
              }
            },
            "value": "MHG"
          }
        }
      },
      "Ranged Weapon, Direct§BB": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8/-/-"
          },
          "Name": {
            "value": "Bomb"
          },
          "Range": {
            "value": "0/-"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§BB (AI, Fire, Guided)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property§AI",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Fire:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                },
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property§Guided",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "BB"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8/-/-"
          },
          "Name": {
            "value": "Bomb"
          },
          "Range": {
            "value": "0/-"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§BB (AP:2, Demo:4)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                },
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                },
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "BB"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8/-/-"
          },
          "Name": {
            "value": "Bomb"
          },
          "Range": {
            "value": "0/-"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§BB (AP:2, Guided)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                },
                "Modified": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property§Guided",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "BB"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8/-/-"
          },
          "Name": {
            "value": "Bomb"
          },
          "Range": {
            "value": "0/-"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HAPGL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            "Model/Weapon Property§Frag",
            "Model/Weapon Property§Prox"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Heavy Anti-Personnel Grenade Launchers"
          },
          "Range": {
            "value": "0-3/-"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HAPGL, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            "Model/Weapon Property§Frag",
            "Model/Weapon Property§Prox"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HAPGL"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Heavy Anti-Personnel Grenade Launchers"
          },
          "Range": {
            "value": "0-3/-"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HBZ": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Bazooka"
          },
          "Range": {
            "value": "6-12/24"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HFC": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§(OR)",
            "Model/Weapon Property§Frag",
            "Model/Weapon Property§AI"
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Precise, AP:3"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "Frag, AI"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Heavy Frag Cannon"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HFL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Fire:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Spray"
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Heavy Flamer"
          },
          "Range": {
            "value": "0-9/18"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HFL, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Fire:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Spray"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HFL"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Heavy Flamer"
          },
          "Range": {
            "value": "0-9/18"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HIL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Heavy Infantry Laser"
          },
          "Range": {
            "value": "6-18/36"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HIR": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§AI"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Heavy Infantry Rifle"
          },
          "Range": {
            "value": "6-24/48"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HIS": {
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Heavy Infantry Support Weapon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "Traits": {
            "value": "-"
          }
        }
      },
      "Ranged Weapon, Direct§HIS (Burst:1)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HIS"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Heavy Infantry Support Weapon"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct§HIS, React": {
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HIS"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Heavy Infantry Support Weapon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": "-"
          }
        }
      },
      "Ranged Weapon, Direct§HIW": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Heavy Infantry Weapon"
          },
          "Range": {
            "value": "0-9/18"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HMG": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "5"
          },
          "Mode": {
            "value": "Direct"
          },
          "Name": {
            "value": "Heavy Machine Gun"
          },
          "Range": {
            "value": "3-9/18"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HMG (T)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split",
            {
              "item": "Model/Weapon Property§T",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HMG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "5"
          },
          "Mode": {
            "value": "Direct"
          },
          "Name": {
            "value": "Heavy Machine Gun"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HMG, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HMG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "5"
          },
          "Mode": {
            "value": "Direct"
          },
          "Name": {
            "value": "Heavy Machine Gun"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HP": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise"
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Pistol"
          },
          "Range": {
            "value": "0-12/24"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HPA": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Haywire",
            "Model/Weapon Property§Advanced"
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Particle Accelerator"
          },
          "Range": {
            "value": "6-24/48"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HPA, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Haywire",
            "Model/Weapon Property§Advanced"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HPA"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Particle Accelerator"
          },
          "Range": {
            "value": "6-24/48"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HPL": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Advanced",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            "Model/Weapon Property§Apex"
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Advanced"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:4, Apex, Advanced"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Pulse Laser"
          },
          "Range": {
            "value": "6-24/48"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§HRF": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise"
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Rifle"
          },
          "Range": {
            "value": "12-36/72"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HRF, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "HRF"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Rifle"
          },
          "Range": {
            "value": "12-36/72"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HRG": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Heavy Railgun"
          },
          "Range": {
            "value": "12-48/96"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HSC": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "10"
          },
          "Name": {
            "value": "Heavy Snub Cannon"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HSMG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Heavy Submachine Gun"
          },
          "Range": {
            "value": "0-9/18"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§HTG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 5
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "11"
          },
          "Name": {
            "value": "Heavy Tank Gun"
          },
          "Range": {
            "value": "12-36/72"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§LAPGL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            "Model/Weapon Property§Frag",
            "Model/Weapon Property§Prox"
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Light Anti-Personnel Grenade Launchers"
          },
          "Range": {
            "value": "0-3/-"
          },
          "Traits": {
            "value": ""
          }
        }
      },
      "Ranged Weapon, Direct§LBZ": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Bazooka"
          },
          "Range": {
            "value": "6-12/24"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§LIL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "3"
          },
          "Name": {
            "value": "Light Infantry Laser"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct§LIR": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§AI"
          ]
        },
        "stats": {
          "Damage": {
            "value": "4"
          },
          "Name": {
            "value": "Light Infantry Rifle"
          },
          "Range": {
            "value": "6-24/48"
          }
        }
      },
      "Ranged Weapon, Direct§LIS": {
        "stats": {
          "Damage": {
            "value": "4"
          },
          "Name": {
            "value": "Light Infantry Support Weapon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "Traits": {
            "value": "-"
          }
        }
      },
      "Ranged Weapon, Direct§LIW": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "3"
          },
          "Name": {
            "value": "Light Infantry Weapon"
          },
          "Range": {
            "value": "0-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§LLC (AA)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property§AA",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LLC"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Laser Cannon"
          },
          "Range": {
            "value": "12-36/72"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§LMG": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "3"
          },
          "Mode": {
            "value": "Direct"
          },
          "Name": {
            "value": "Light Machine Gun"
          },
          "Range": {
            "value": "3-9/18"
          }
        }
      },
      "Ranged Weapon, Direct§LMG (T)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split",
            {
              "item": "Model/Weapon Property§T",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LMG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "3"
          },
          "Mode": {
            "value": "Direct"
          },
          "Name": {
            "value": "Light Machine Gun"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§LMG, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LMG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "3"
          },
          "Mode": {
            "value": "Direct"
          },
          "Name": {
            "value": "Light Machine Gun"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§LPA": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Haywire",
            "Model/Weapon Property§Advanced"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Particle Accelerator"
          },
          "Range": {
            "value": "6-24/48"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§LPL": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Advanced",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Apex"
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Advanced"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:2, Apex, Advanced"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Pulse Laser"
          },
          "Range": {
            "value": "6-24/48"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§LPZ +0.5TV": {
        "aspects": {
          "Unique": true
        },
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LPZ"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Panzerfaust"
          },
          "Range": {
            "value": "3-6/9"
          },
          "TV": {
            "value": 0.5
          }
        }
      },
      "Ranged Weapon, Direct§LRF": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Rifle"
          },
          "Range": {
            "value": "12-36/72"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§LRG": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "4"
          },
          "Name": {
            "value": "Light Railgun"
          },
          "Range": {
            "value": "12-48/96"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§LSC": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Light Snub Cannon"
          },
          "Range": {
            "value": "3-9/18"
          }
        }
      },
      "Ranged Weapon, Direct§LTG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Light Tank Gun"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct§MAPGL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            "Model/Weapon Property§Frag",
            "Model/Weapon Property§Prox"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Medium Anti-Personnel Grenade Launchers"
          },
          "Range": {
            "value": "0-3/-"
          }
        }
      },
      "Ranged Weapon, Direct§MBZ": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Bazooka"
          },
          "Range": {
            "value": "6-12/24"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§MIL": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "4"
          },
          "Name": {
            "value": "Medium Infantry Laser"
          },
          "Range": {
            "value": "6-18/36"
          }
        }
      },
      "Ranged Weapon, Direct§MIR": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§AI"
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Medium Infantry Rifle"
          },
          "Range": {
            "value": "6-24/48"
          }
        }
      },
      "Ranged Weapon, Direct§MIR (Silent)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property§Silent",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MIR"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Medium Infantry Rifle"
          },
          "Range": {
            "value": "6-24/48"
          }
        }
      },
      "Ranged Weapon, Direct§MIS": {
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Medium Infantry Support Weapon"
          },
          "Range": {
            "value": "6-18/36"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": "-"
          }
        }
      },
      "Ranged Weapon, Direct§MIW": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "4"
          },
          "Name": {
            "value": "Medium Infantry Weapon"
          },
          "Range": {
            "value": "0-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§MMG": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "4"
          },
          "Mode": {
            "value": "Direct"
          },
          "Name": {
            "value": "Medium Machine Gun"
          },
          "Range": {
            "value": "3-9/18"
          }
        }
      },
      "Ranged Weapon, Direct§MMG (T)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split",
            {
              "item": "Model/Weapon Property§T",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MMG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "4"
          },
          "Mode": {
            "value": "Direct"
          },
          "Name": {
            "value": "Medium Machine Gun"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§MMG, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Split"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MMG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "AMSCapableGuns": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "Damage": {
            "value": "4"
          },
          "Mode": {
            "value": "Direct"
          },
          "Name": {
            "value": "Medium Machine Gun"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§MPA": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Haywire",
            "Model/Weapon Property§Advanced"
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Particle Accelerator"
          },
          "Range": {
            "value": "6-24/48"
          }
        }
      },
      "Ranged Weapon, Direct§MPA, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Haywire",
            "Model/Weapon Property§Advanced"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MPA"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Particle Accelerator"
          },
          "Range": {
            "value": "6-24/48"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§MPL": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Advanced",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Apex"
          ]
        },
        "rules": {
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Advanced"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:3, Apex, Advanced"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Pulse Laser"
          },
          "Range": {
            "value": "6-24/48"
          }
        }
      },
      "Ranged Weapon, Direct§MPL, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Burst:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Advanced",
            "Model/Weapon Property§(OR)",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Apex"
          ]
        },
        "rules": {
          "addAdvancedStringToStatTraits": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "note": "Add \"Advanced\" to the Traits stat, so that it appears twice.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Advanced"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 164
          },
          "overwriteTraitsAndOrClause": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...set the explicit value of the first clause of the Traits...",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Traits",
                    "value"
                  ]
                ],
                "value": "Burst:1, Advanced"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the explicit value of the second clause of the traits.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "OrClause",
                    "value"
                  ]
                ],
                "value": "AP:3, Apex, Advanced"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If the model has an OR...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "(OR)"
                  ]
                ]
              }
            ]
          },
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MPL"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Pulse Laser"
          },
          "Range": {
            "value": "6-24/48"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§MPZ +1TV": {
        "aspects": {
          "Unique": true
        },
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Requires Hands"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MPZ"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Panzerfaust"
          },
          "Range": {
            "value": "3-6/9"
          },
          "TV": {
            "value": 1
          }
        }
      },
      "Ranged Weapon, Direct§MRF": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Rifle"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct§MRF, React": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MRF"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Rifle"
          },
          "Range": {
            "value": "12-36/72"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§MRG": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Precise",
            "Model/Weapon Property§Advanced",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 5
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Medium Railgun"
          },
          "Range": {
            "value": "12-48/96"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§MSC": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Medium Snub Cannon"
          },
          "Range": {
            "value": "3-9/18"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Ranged Weapon, Direct§MTG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "10"
          },
          "Name": {
            "value": "Medium Tank Gun"
          },
          "Range": {
            "value": "12-36/72"
          }
        }
      },
      "Ranged Weapon, Direct§MTG, React": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MTG"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "10"
          },
          "Name": {
            "value": "Medium Tank Gun"
          },
          "Range": {
            "value": "12-36/72"
          },
          "StatColumn": {
            "value": "React"
          },
          "Traits": {
            "value": "AP:4, Demo:2"
          }
        }
      },
      "Ranged Weapon, Indirect§HABM": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Heavy Air Burst Missile"
          },
          "Range": {
            "value": "24-48/96"
          }
        }
      },
      "Ranged Weapon, Indirect§HAG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "11"
          },
          "Name": {
            "value": "Heavy Artillery Gun"
          },
          "Range": {
            "value": "24-48/96"
          }
        }
      },
      "Ranged Weapon, Indirect§HAM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Artillery Missile"
          },
          "Range": {
            "value": "24-48/96"
          }
        }
      },
      "Ranged Weapon, Indirect§HFM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            "Model/Weapon Property§Blast"
          ]
        },
        "stats": {
          "Damage": {
            "value": "10"
          },
          "Name": {
            "value": "Heavy Field Mortar"
          },
          "Range": {
            "value": "18-36/72"
          }
        }
      },
      "Ranged Weapon, Indirect§HGM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Heavy Guided Mortar"
          },
          "Range": {
            "value": "18-36/72"
          }
        }
      },
      "Ranged Weapon, Indirect§HIM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§AI"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Heavy Infantry Mortar"
          },
          "Range": {
            "value": "12-24/48"
          }
        }
      },
      "Ranged Weapon, Indirect§LABM": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "6"
          },
          "Name": {
            "value": "Light Air Burst Missile"
          },
          "Range": {
            "value": "24-48/96"
          }
        }
      },
      "Ranged Weapon, Indirect§LAG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Light Artillery Gun"
          },
          "Range": {
            "value": "24-48/96"
          }
        }
      },
      "Ranged Weapon, Indirect§LAM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Artillery Missile"
          },
          "Range": {
            "value": "24-48/96"
          }
        }
      },
      "Ranged Weapon, Indirect§LFM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            "Model/Weapon Property§Blast"
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Light Field Mortar"
          },
          "Range": {
            "value": "18-36/72"
          }
        }
      },
      "Ranged Weapon, Indirect§LGM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Guided Mortar"
          },
          "Range": {
            "value": "18-36/72"
          }
        }
      },
      "Ranged Weapon, Indirect§LIM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§AI"
          ]
        },
        "stats": {
          "Damage": {
            "value": "4"
          },
          "Name": {
            "value": "Light Infantry Mortar"
          },
          "Range": {
            "value": "12-24/48"
          }
        }
      },
      "Ranged Weapon, Indirect§MABM": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Air Burst Missile"
          },
          "Range": {
            "value": "24-48/96"
          }
        }
      },
      "Ranged Weapon, Indirect§MABM (T)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§Guided"
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MAMB"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Medium Air Burst Missile"
          },
          "Range": {
            "value": "24-48/96"
          }
        }
      },
      "Ranged Weapon, Indirect§MAG": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            }
          ]
        },
        "stats": {
          "Damage": {
            "value": "10"
          },
          "Name": {
            "value": "Medium Artillery Gun"
          },
          "Range": {
            "value": "24-48/96"
          }
        }
      },
      "Ranged Weapon, Indirect§MAM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Artillery Missile"
          },
          "Range": {
            "value": "24-48/96"
          }
        }
      },
      "Ranged Weapon, Indirect§MFM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 4
                }
              }
            },
            "Model/Weapon Property§Blast"
          ]
        },
        "stats": {
          "Damage": {
            "value": "9"
          },
          "Name": {
            "value": "Medium Field Mortar"
          },
          "Range": {
            "value": "18-36/72"
          }
        }
      },
      "Ranged Weapon, Indirect§MGM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§Guided"
          ]
        },
        "stats": {
          "Damage": {
            "value": "8"
          },
          "Name": {
            "value": "Medium Guided Mortar"
          },
          "Range": {
            "value": "18-36/72"
          }
        }
      },
      "Ranged Weapon, Indirect§MIM": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§AI"
          ]
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Medium Infantry Mortar"
          },
          "Range": {
            "value": "12-24/48"
          }
        }
      },
      "Ranged Weapon, Indirect§MIM (Brace)": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AOE:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Model/Weapon Property§Blast",
            "Model/Weapon Property§AI",
            {
              "item": "Model/Weapon Property§Brace",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "setDesignationWithoutReact": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "MIM"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "5"
          },
          "Name": {
            "value": "Medium Infantry Mortar"
          },
          "Range": {
            "value": "12-24/48"
          }
        }
      },
      "Roster§Force": {
        "allowed": {
          "classifications": [
            "Combat Group",
            "Faction"
          ]
        },
        "assets": {
          "traits": [
            "Combat Group§Combat Group"
          ]
        },
        "rules": {
          "noMaxVeteranGroupsInVeteranForce": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Veteran Group?",
                    "max"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Veteran Force?",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 40
          },
          "Over TV Limit.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the TV Limit is Zero, don't error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV Limit",
                    "value"
                  ]
                ],
                "value": 0
              },
              {
                "actionable": true,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "stats",
                    "TV",
                    "value"
                  ]
                },
                "min": 0,
                "not": false,
                "note": "If the TV Limit is not greater than or equal to the TV Total, send an error.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV Limit",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "OR",
            "failState": "error",
            "order": 19
          }
        },
        "stats": {
          "Combat Group": {
            "group": "Accounting",
            "label": "Combat Groups",
            "statOrder": 3,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "Duelist": {
            "group": "Hidden",
            "max": 1,
            "min": 0,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "maxCO": {
            "group": "Hidden",
            "max": 1,
            "min": 0,
            "statOrder": 3,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "maxDemoDrone": {
            "group": "Hidden",
            "max": 5,
            "min": 0,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "maxFL": {
            "group": "Hidden",
            "max": 1,
            "min": 0,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "maxHunterKiller": {
            "group": "Hidden",
            "max": 5,
            "min": 0,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "maxReconDrone": {
            "group": "Hidden",
            "max": 5,
            "min": 0,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "maxTFC": {
            "group": "Hidden",
            "max": 1,
            "min": 0,
            "statOrder": 2,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "maxXO": {
            "group": "Hidden",
            "max": 1,
            "min": 0,
            "statOrder": 4,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "TV": {
            "group": "Accounting",
            "label": "TV Total",
            "statOrder": 2,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "TV Limit": {
            "dynamic": true,
            "group": "Accounting",
            "statOrder": 1,
            "statType": "numeric",
            "value": 0,
            "visibility": "normal"
          },
          "Veteran Force?": {
            "dynamic": true,
            "group": "Accounting",
            "ranks": {
              "0": {
                "order": 0
              },
              "1": {
                "order": 1
              }
            },
            "statOrder": 4,
            "statType": "rank",
            "tracked": true,
            "value": "0",
            "visibility": "normal"
          },
          "Veteran Group?": {
            "group": "Hidden",
            "label": "Veteran Groups",
            "max": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          }
        }
      },
      "Standard Upgrade§Add Smoke +1TV": {
        "aspects": {
          "Unique": true
        },
        "assets": {
          "traits": []
        },
        "keywords": {
          "Tags": [
            "No VTOLs"
          ]
        },
        "rules": {
          "renameSmoke": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Smoke"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "TV": {
            "tracked": true,
            "value": 1
          }
        },
        "text": "A model with the Smoke trait may spend an action point \nto discharge smoke. See **Discharge Smoke** (p32)."
      },
      "Strider§Example Strider": {
        "assets": {
          "traits": []
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "EW": {
            "value": 3
          },
          "GU": {
            "value": 3
          },
          "HT": {
            "value": 2
          },
          "PI": {
            "value": 3
          },
          "React Weapons": {
            "value": "HAC"
          },
          "Traits": {
            "value": "Hands"
          },
          "TV": {
            "value": 20
          }
        }
      },
      "Terrain§Badlands Shed": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable and Type§Occupancy:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            },
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "6/0"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Badlands Shed"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 3
          },
          "Type": {
            "value": "Building"
          }
        }
      },
      "Terrain§Badlands Tower": {
        "assets": {
          "traits": [
            "Model/Weapon Property, Variable and Type§Occupancy:X",
            "Model/Weapon Property§Supply",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§Stationary",
            "Ranged Weapon, Direct§HMG (T)"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 5
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Badlands Tower"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 5
          },
          "Type": {
            "value": "Building"
          }
        }
      },
      "Terrain§Barnaby Wreck": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "8/0"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Barnaby Wreck"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 3
          },
          "Type": {
            "value": "Terrain"
          }
        }
      },
      "Terrain§Bunker, Machine Gun": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable and Type§Occupancy:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            },
            "Model/Weapon Property§Stationary",
            "Ranged Weapon, Direct§HMG (T)"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "value": 6
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "maxOutpostModules": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "ModelName": {
            "value": "Machine Gun Bunker"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 5
          },
          "Type": {
            "value": "Building"
          }
        }
      },
      "Terrain§Comms Array": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§SatUp",
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 5
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "2/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Comms Array"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 3
          },
          "Type": {
            "value": "Building"
          }
        }
      },
      "Terrain§Housing Module": {
        "assets": {
          "traits": [
            "Model/Weapon Property, Variable and Type§Occupancy:X",
            "Model/Weapon Property§Supply",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§Stationary",
            "Ranged Weapon, Direct§HMG (T)"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 5
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Housing Module"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 5
          },
          "Type": {
            "value": "Building"
          }
        }
      },
      "Terrain§Minefield (3\" X 3\")": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "EW": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "fortificationsMax": {
            "value": 1
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "-"
          },
          "HT": {
            "value": 0
          },
          "ModelName": {
            "value": "Trench"
          },
          "PI": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "Roles": {
            "value": "FT"
          },
          "TV": {
            "value": 2
          },
          "Type": {
            "value": "Terrain"
          }
        },
        "text": "Trenches are considered area terrain for infantry models only. Each part shall be placed with just enough space between them to accommodate a 50mm base (or largest infantry base present in the game)."
      },
      "Terrain§Outpost": {
        "allowed": {
          "items": [
            "Terrain§Bunker, Machine Gun",
            "Terrain§Turret, Rocket",
            "Terrain§Turret, Rotary Cannon"
          ]
        },
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable and Type§Occupancy:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§Supply",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 36
                }
              }
            },
            "Model/Weapon Property§Stationary",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC (R)",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC (L)",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC (B)"
          ]
        },
        "stats": {
          "Actions": {
            "value": 4
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "value": 5
          },
          "fortificationsMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 3
          },
          "maxOutpostModules": {
            "group": "Hidden",
            "max": 2,
            "min": 0,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "ModelName": {
            "value": "Outpost"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT"
          },
          "TV": {
            "value": 20
          },
          "Type": {
            "value": "Building"
          }
        },
        "text": "The Outpost can house 2 Infantry Squads. 1 Squad may occupy the upper floors and will be treated as if it is elevated two inches."
      },
      "Terrain§Shipping Container": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "4/0"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Shipping Container"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 1
          },
          "Type": {
            "value": "Terrain"
          }
        }
      },
      "Terrain§Solar Panel": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "4/0"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Solar Panel"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 1
          },
          "Type": {
            "value": "Terrain"
          }
        }
      },
      "Terrain§Stonehead, Large": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "fortificationsMax": {
            "value": 1
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "8/0"
          },
          "HT": {
            "value": 2.5
          },
          "ModelName": {
            "value": "Large Stonehead"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT"
          },
          "TV": {
            "value": 3
          },
          "Type": {
            "value": "Terrain"
          }
        }
      },
      "Terrain§Stonehead, Small": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "fortificationsMax": {
            "value": 1
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "6/0"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Small Stonehead"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT"
          },
          "TV": {
            "value": 3
          },
          "Type": {
            "value": "Terrain"
          }
        }
      },
      "Terrain§Trench (2\" or 3\" long)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "fortificationsMax": {
            "value": 1
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "6/0"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Trench"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT"
          },
          "TV": {
            "value": 2
          },
          "Type": {
            "value": "Terrain"
          }
        },
        "text": "Trenches are considered area terrain for infantry models only. Each part shall be placed with just enough space between them to accommodate a 50mm base (or largest infantry base present in the game)."
      },
      "Terrain§Turret, Rocket": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable and Type§Occupancy:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Model/Weapon Property§Stationary",
            "Ranged Weapon, Direct or Indirect§HRP (T, Link)"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "value": 6
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "maxOutpostModules": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "ModelName": {
            "value": "Rocket Turret"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 13
          },
          "Type": {
            "value": "Building"
          }
        }
      },
      "Terrain§Turret, Rotary Cannon": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable and Type§Occupancy:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Model/Weapon Property§Stationary",
            "Ranged Weapon, Direct, AA-upgrade§MRC (T, Link, AA)"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "value": 6
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "maxOutpostModules": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "ModelName": {
            "value": "Rotary Cannon Turret"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 13
          },
          "Type": {
            "value": "Building"
          }
        }
      },
      "Terrain§Twin Water Tanks": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "6/0"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Twin Water Tanks"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 2
          },
          "Type": {
            "value": "Terrain"
          }
        }
      },
      "Terrain§Water Condenser": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "6/0"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Water Condenser"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 2
          },
          "Type": {
            "value": "Terrain"
          }
        }
      },
      "Terrain§Windmill": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stationary"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "fortificationsMax": {
            "value": 999
          },
          "GU": {
            "format": "-",
            "statType": "term",
            "tracked": false,
            "value": "-"
          },
          "H/S": {
            "value": "4/0"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Windmill"
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FT+"
          },
          "TV": {
            "value": 1
          },
          "Type": {
            "value": "Terrain"
          }
        }
      },
      "Unit§Primary Unit": {
        "rules": {
          "|** This asset is auto-included in the Combat Group asset. **|": {
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 4
          }
        },
        "stats": {
          "Actions": {
            "max": 6,
            "min": 4
          }
        }
      },
      "Unit§Secondary Unit": {
        "rules": {
          "LargePrimary": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "If the Primary Unit has 5+ actions, then the Secondary Unit's max actions is increased to 3.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Actions",
                    "max"
                  ]
                ],
                "value": 3
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 6,
                "min": 5,
                "not": false,
                "note": "This eval checks to see if the Primary Unit has 5+ actions.",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "assets",
                    "item",
                    "Unit§Primary Unit",
                    "stats",
                    "Actions",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "Actions": {
            "max": 2,
            "min": 1
          }
        }
      },
      "Vehicle§Antelope": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§MMG (T)",
            "Model/Weapon Property§TD",
            "Model/Weapon Property§Comms"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Strike"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Antelope"
          },
          "MR": {
            "format": "G: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP+, RC, FS"
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Vehicle§Antelope Technical": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Team(s)"
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Strike"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Antelope Technical"
          },
          "MR": {
            "format": "G: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP+, RC, FS"
          },
          "TV": {
            "value": 2
          }
        },
        "text": "The transport option on the Antelope Technical is not enclosed. Models being transported can interact with the battlefield normally from their position on the back of the model.\n\nWhile being transported:\n- These models are considered to be on the back of the model.\n- They may attack and may be attacked. Use their location on the back of the model to determine LOS and range.\n- They are considered to have partial cover while being transported.\n- They are always considered to be at combat speed unless the Antelope or Elan is specifically braced."
      },
      "Vehicle§Barnaby Transport": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 5
                },
                "Type": {
                  "value": "Gear"
                }
              }
            },
            "Model/Weapon Property§Lumbering",
            "Model/Weapon Property§Repair",
            "Model/Weapon Property§Supply",
            "Ranged Weapon, Direct§MMG (T)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/5"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Barnaby Transport"
          },
          "MR": {
            "format": "G: {v}",
            "value": 7
          },
          "PI": {
            "value": 6
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Vehicle§Camel (Stinger)": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§LMG (T)",
            "Ranged Weapon, Indirect§MABM (T)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "RenameStinger": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Stinger"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Stinger"
          },
          "MR": {
            "format": "G: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Vehicle§Camel Truck": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Supply",
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            },
            "Ranged Weapon, Direct§LMG (T)"
          ]
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Camel Truck"
          },
          "MR": {
            "format": "G: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 4
          }
        },
        "text": "The transport option on the Camel Truck is not enclosed. Models being transported can interact with the battlefield normally from their position on the back of the model.\n\nWhile being transported:\n- These models are considered to be on the back of the model.\n- They may attack and may be attacked. Use their location on the back of the model to determine LOS and range.\n- They are considered to have partial cover while being transported.\n- They are always considered to be at combat speed unless the Camel Truck is specifically braced."
      },
      "Vehicle§Dragonfly": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§TD",
            "Model/Weapon Property§VTOL",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct§LLC (AA)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "ECM Upgrade +2": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 2
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§ECM"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "LATM Upgrade +2TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect, Link-upgrade§LAAM (Link)"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect, Link-upgrade§LATM (Link)"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Dragonfly"
          },
          "MR": {
            "format": "H: {v}",
            "value": 12
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "FS+"
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Vehicle§Elan": {
        "assets": {
          "traits": [
            "Ranged Weapon, Direct§MMG (T)",
            "Model/Weapon Property§TD",
            "Model/Weapon Property§Comms"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Strike"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Elan"
          },
          "MR": {
            "format": "G: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP+, RC, FS"
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Vehicle§Elan Technical": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Team(s)"
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Strike"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 0.5
          },
          "ModelName": {
            "value": "Elan Technical"
          },
          "MR": {
            "format": "G: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP+, RC, FS"
          },
          "TV": {
            "value": 2
          }
        },
        "text": "The transport option on the Elan Technical is not enclosed. Models being transported can interact with the battlefield normally from their position on the back of the model.\n\nWhile being transported:\n- These models are considered to be on the back of the model.\n- They may attack and may be attacked. Use their location on the back of the model to determine LOS and range.\n- They are considered to have partial cover while being transported.\n- They are always considered to be at combat speed unless the Antelope or Elan is specifically braced."
      },
      "Vehicle§Field Gun": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Towed",
            "Model/Weapon Property§Lumbering",
            "Ranged Weapon, Direct or Indirect§LFG"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/1"
          },
          "ModelName": {
            "value": "Field Gun"
          },
          "MR": {
            "format": "G: {v}",
            "value": 2
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Vehicle§Saker": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Jump Jets:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Ranged Weapon, Direct§MMG (T)",
            "Ranged Weapon, Direct or Indirect§LAR (T)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Earth allies"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "prefixDominusIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Dominus Saker"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Dominus Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Dominus Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Saker"
          },
          "MR": {
            "format": "H: {v}",
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Vehicle§Saker (Anakite)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Jump Jets:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Ranged Weapon, Direct§MMG (T)",
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Earth allies"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "prefixDominusIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Dominus Anakite"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Dominus Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "renameAnakite": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Anakite"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Dominus Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Anakite"
          },
          "MR": {
            "format": "H: {v}",
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        },
        "text": "The transport option on the Anakite is not enclosed. Models being transported can interact with the battlefield normally from their position on the back of the model.\n\nWhile being transported:\n- These models are considered to be on the back of the model.\n- They may attack and may be attacked. Use their location on the back of the model to determine LOS and range.\n- They are considered to have partial cover while being transported.\n- They are always considered to be at combat speed unless the Anakite is specifically braced."
      },
      "Vehicle§Saker (Squire)": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Jump Jets:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            "Ranged Weapon, Direct§MMG (T)",
            "Model/Weapon Property§Supply"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Earth allies"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Recon",
              "UA: Special Operations"
            ]
          }
        },
        "rules": {
          "prefixDominusIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Dominus Squire"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Dominus Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 159
          },
          "renameSquire": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Squire"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Dominus Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Squire"
          },
          "MR": {
            "format": "H: {v}",
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 0
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "specialOperationsMax": {
            "value": 0
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Vehicle§Varis": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§ECCM",
            "Model/Weapon Property§TD",
            "Model/Weapon Property§VTOL",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct§LLC (AA)"
          ]
        },
        "keywords": {
          "Tags": [
            "Only available to Terra Novans"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "LATM Upgrade +2TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect, Link-upgrade§LAAM (Link)"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect, Link-upgrade§LATM (Link)"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Varis"
          },
          "MR": {
            "format": "H: {v}",
            "value": 14
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "FS+"
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Veteran Gear§Example Veteran Gear": {
        "allowed": {
          "classifications": [],
          "items": []
        },
        "assets": {
          "included": [],
          "traits": [
            {
              "item": "Ranged Weapon, Direct§LAC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Burst:X",
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Or",
                  "Model/Weapon Property§React"
                ]
              }
            },
            "Model/Weapon Property§Hands"
          ]
        },
        "constraints": {
          "any": []
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "EW": {
            "value": 3
          },
          "fireSupportMax": {
            "value": 1
          },
          "fortificationsMax": {
            "value": 0
          },
          "GU": {
            "value": 3
          },
          "HT": {
            "value": 1.5
          },
          "PI": {
            "value": 3
          },
          "React Weapons": {
            "value": ""
          },
          "reconMax": {
            "value": 1
          },
          "SP": {
            "value": 0
          },
          "specialOperationsMax": {
            "value": 1
          },
          "strikeMax": {
            "value": 1
          },
          "Traits": {
            "value": ""
          },
          "TV": {
            "value": 15
          }
        }
      },
      "Veteran Upgrade Weapons§LCW (React, Precise) +1TV": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§Demo:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property§Precise",
              "stats": {
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "stripModdedDesignation": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LCW"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Combat Weapon"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Veteran Upgrade Weapons§LVB (React, Brawl:1) +1TV": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property, Variable§AP:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "meleeBrawlStat": {
                  "value": 1
                },
                "Modified": {
                  "value": 1
                }
              }
            }
          ]
        },
        "rules": {
          "stripModdedDesignation": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "LVB"
              }
            ],
            "evals": []
          }
        },
        "stats": {
          "Damage": {
            "value": "7"
          },
          "Name": {
            "value": "Light Vibro-Blade"
          },
          "StatColumn": {
            "value": "React"
          }
        }
      },
      "Veteran Upgrade§+1 Brawler +1TV": {
        "aspects": {
          "Unique": true
        },
        "keywords": {
          "Tags": [
            "Requires Cavalry Gears Infantry or Striders"
          ]
        },
        "removed": {
          "rules": {
            "updateParentStatTraits": {}
          }
        },
        "rules": {
          "addBrawlIfNotPresent": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": "Model/Weapon Property, Variable§Brawl:X"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "Brawl:X"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 21
          },
          "renameVet:+1_Brawl": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: +1 Brawl"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Brawler Upgrade": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "brawlStat": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "TV": {
            "value": 1
          }
        },
        "text": "Add the Brawl:1 trait or increase an existing Brawl trait by +1."
      },
      "Veteran Upgrade§+2 Brawler +2TV": {
        "aspects": {
          "Unique": true
        },
        "keywords": {
          "Tags": [
            "Requires Cavalry Gears Infantry or Striders"
          ]
        },
        "removed": {
          "rules": {
            "updateParentStatTraits": {}
          }
        },
        "rules": {
          "addBrawlIfNotPresent": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": "Model/Weapon Property, Variable§Brawl:X"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "Brawl:X"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 21
          },
          "renameVet:+2_Brawl": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: +2 Brawl"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Brawler Upgrade": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          },
          "brawlStat": {
            "group": "Hidden",
            "statType": "numeric",
            "tracked": true,
            "value": 2,
            "visibility": "hidden"
          },
          "TV": {
            "value": 2
          }
        },
        "text": "Add the Brawl:2 trait or increase an existing Brawl trait by +2."
      },
      "Veteran Upgrade§AMS +1TV": {
        "aspects": {
          "Unique": true,
          "Visibility": "active"
        },
        "keywords": {
          "Tags": [
            "Requires Frag Cannon, Autocannon, Submachine Gun, Machine Gun, or Rotary Cannon"
          ]
        },
        "rules": {
          "renameAMS": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: AMS"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "TV": {
            "value": 1
          }
        },
        "text": "**Anti-Missile System**  \nThis model may reroll defense rolls against all indirect attacks and airstrikes."
      },
      "Veteran Upgrade§ECCM +1TV": {
        "aspects": {
          "Unique": true
        },
        "rules": {
          "renameECCM": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: ECCM"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "TV": {
            "value": 1
          }
        },
        "text": "This model is equipped with an electronic counter-countermeasure system. This model and all friendly models within 6 inches gain +1D6 to all EW rolls. This effect is not cumulative with additional ECCM traits.\n\nModels with the ECCM trait can also perform ECCM firewall reactions."
      },
      "Veteran Upgrade§Field Armor +1-4TV": {
        "aspects": {
          "Unique": true
        },
        "keywords": {
          "Tags": [
            "No Terrain, Area Terrain, Buildings, Infantry, Cavalry or Airstrike counters."
          ]
        },
        "rules": {
          "increaseTVforArmor10": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV",
                    "value"
                  ]
                ],
                "value": 3
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 10,
                "min": 9,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Arm",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 63
          },
          "increaseTVforArmor12": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV",
                    "value"
                  ]
                ],
                "value": 4
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 11,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Arm",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 64
          },
          "increaseTVforArmor6": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 6,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Arm",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 61
          },
          "increaseTVforArmor8": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV",
                    "value"
                  ]
                ],
                "value": 2
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 8,
                "min": 7,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Arm",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 62
          },
          "renameFieldArmor": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: Field Armor"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "TV": {
            "value": 0
          }
        },
        "text": "This model suffers one less damage from each attack to a minimum of one damage. Field Armor reduces damage from the Armor Piercing trait, but it does not apply to other effects such as Fire, Corrosion or Haywire."
      },
      "Veteran Upgrade§Improved Gunnery +2TV/Action": {
        "rules": {
          "increaseTVPerActions": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": [
                  "{parent}",
                  "stats",
                  "Actions",
                  "value"
                ],
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "TV",
                    "value"
                  ]
                ],
                "value": 2
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 61
          },
          "renameImprovedGunnery": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: Improved Gunnery"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "GU": {
            "statType": "numeric",
            "tracked": true,
            "value": -1,
            "visibility": "hidden"
          },
          "TV": {}
        },
        "text": "Improve this model’s gunnery skill by one for 2 TV, for each action point that this model has. This cost also increases by 2 TV per additional action purchased via any other upgrades."
      },
      "Veteran Upgrade§Resist:C +1TV": {
        "rules": {
          "addResistCifNotVuln": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: Resist:C"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "text"
                  ]
                ],
                "value": "**Resistant to Corrosion**\nThis model does not receive the extra damage that comes from the Corrosion trait."
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "Vuln:C"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "removeVulnC": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then rename this asset Remove Vuln:C...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: Remove Vuln:C"
              },
              {
                "actionType": "remove",
                "iterations": 1,
                "note": "...and remove the Vuln:C trait.",
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": "Model/Weapon Property§Vuln:C"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If there's a Vuln:C trait...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Vuln:C"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "TV": {
            "value": 1
          }
        }
      },
      "Veteran Upgrade§Resist:F +1TV": {
        "rules": {
          "addResistFifNotVuln": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: Resist:F"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "text"
                  ]
                ],
                "value": "**Resistant to Fire**  \nThis model does not receive the extra damage that comes from the Fire trait."
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "Vuln:F"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "removeVulnF": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then rename this asset Remove Vuln:F...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: Remove Vuln:F"
              },
              {
                "actionType": "remove",
                "iterations": 1,
                "note": "...and remove the Vuln:F trait.",
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": "Model/Weapon Property§Vuln:F"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If there's a Vuln:F trait...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Vuln:F"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "TV": {
            "value": 1
          }
        }
      },
      "Veteran Upgrade§Resist:H +1TV": {
        "rules": {
          "addResistHifNotVuln": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then rename this asset to Resist:H...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: Resist:H"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...and set the text to match the Resist:H trait.",
                "paths": [
                  [
                    "{self}",
                    "text"
                  ]
                ],
                "value": "**Resistant to Haywire**  \nThis model does not roll for additional damage after being haywired. However, it still suffers the haywired status."
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "note": "If there's no Vuln:H...",
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "tally",
                    "Vuln:H"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          },
          "removeVulnH": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then rename this asset Remove Vuln:H...",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Vet: Remove Vuln:H"
              },
              {
                "actionType": "remove",
                "iterations": 1,
                "note": "...and remove the Vuln:H trait.",
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": "Model/Weapon Property§Vuln:H"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "note": "If there's a Vuln:H trait...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Vuln:H"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 81
          }
        },
        "stats": {
          "TV": {
            "value": 1
          }
        }
      }
    },
    "gameModes": {},
    "theme": {}
  }
}