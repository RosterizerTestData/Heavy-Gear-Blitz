{
  "name": "South Models",
  "revision": "0.0.1",
  "game": "Heavy Gear Blitz! v3.1",
  "genre": "sci-fi",
  "publisher": "Dream Pod 9",
  "url": "https://www.dp9.com/",
  "notes": "",
  "wip": true,
  "isModule": true,
  "dependencies": [
    {
      "slug": "VUGK7N",
      "name": "Core System",
      "game": "Heavy Gear Blitz! v3.1",
      "source": ""
    }
  ],
  "rulebook": {
    "assetTaxonomy": {},
    "assetCatalog": {
      "Cavalry§Lizard Rider": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Ranged Weapon, Direct§MIW",
            "Ranged Weapon, Direct or Indirect§LIGL",
            "Melee Weapon, Reach-upgrade§HICW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Lizard Rider"
          ]
        },
        "rules": {
          "changeToTeamUpgrade": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then set the H/S stat to \"3/3\".",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "prepend": " ",
                "value": "3/3"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Team Upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Team Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Lizard Rider"
          },
          "MR": {
            "format": "I: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP+, RC"
          },
          "Team Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Cavalry§Lizard Rider Anti-Tank": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Ranged Weapon, Direct§LIW",
            "Melee Weapon, Reach-upgrade§HICW",
            "Ranged Weapon, Direct or Indirect§LAVM"
          ]
        },
        "keywords": {
          "Keywords": [
            "Lizard Rider"
          ]
        },
        "rules": {
          "changeToTeamUpgrade": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then set the H/S stat to \"3/3\".",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "prepend": " ",
                "value": "3/3"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Team Upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Team Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Lizard Rider Anti-Tank"
          },
          "MR": {
            "format": "I: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, RC"
          },
          "Team Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Cavalry§Lizard Rider Observer": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            "Ranged Weapon, Direct§MIW",
            "Melee Weapon, Reach-upgrade§HICW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Lizard Rider"
          ]
        },
        "rules": {
          "changeToTeamUpgrade": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then set the H/S stat to \"3/3\".",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "H/S",
                    "value"
                  ]
                ],
                "prepend": " ",
                "value": "3/3"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Team Upgrade is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Team Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 3
          },
          "EW": {
            "value": 5
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "2/1"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Lizard Rider Observer"
          },
          "MR": {
            "format": "I: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, RC"
          },
          "Team Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                }
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "TV": {
            "value": 3
          }
        }
      },
      "Gear§Anolis": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 36
                }
              }
            },
            "Model/Weapon Property§TD",
            "Model/Weapon Property§Comms",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Anolis"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Anolis"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, RC, FS"
          },
          "Rugged Terrain Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Arena Dartjager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Shield",
            "Model/Weapon Property§Comms",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Dartjager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 5
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Arena Dartjager"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, SK, RC"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Artillery Cobra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Model/Weapon Property§CBS",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                },
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade§HAC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Indirect§MFM",
            "Ranged Weapon, Direct§MMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Artillery Cobra"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Gear§Asp": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Conscript",
            {
              "item": "Ranged Weapon, Direct, Link-upgrade§LSMG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§AI",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Asp"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Asp"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Gear§Asp Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Conscript",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Asp"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Asp Gunner"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Gear§Basilisk": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Basilisk"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Basilisk"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, RC, FS"
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Basilisk Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Basilisk"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Basilisk Gunner"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, RC, FS"
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Black Adder": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Adder"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "stats": {
                              "NameVariable": {
                                "value": 3
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Black Adder"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Black Adder Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Adder"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "stats": {
                              "NameVariable": {
                                "value": 3
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Black Adder Gunner"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Black Box Iguana": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM+",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 36
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct, Swappable§LPZ"
          ]
        },
        "keywords": {
          "Keywords": [
            "Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Black Box Iguana"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Black Mamba": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Black Mamba"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK+, FS"
          },
          "strikeMax": {
            "value": 999
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Black Mamba Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct, AA-upgrade§HAC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Black Mamba Gunner"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Gear§Blazing Mamba": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct, AA-upgrade§MRL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Blazing Mamba"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Gear§Blitz Basilisk": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            {
              "item": "Ranged Weapon, Direct or Indirect, Swappable§LATM",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Guided",
                  {
                    "item": "Model/Weapon Property, Variable§LA:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Basilisk"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Blitz Basilisk"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, RC, FS"
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Blitz Dartjager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            {
              "item": "Ranged Weapon, Direct or Indirect, Swappable§LATM",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Guided",
                  {
                    "item": "Model/Weapon Property, Variable§LA:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Dartjager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 5
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Blitz Dartjager"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, SK, RC"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Blitz Jager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            {
              "item": "Ranged Weapon, Direct or Indirect, Swappable§LATM",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Guided",
                  {
                    "item": "Model/Weapon Property, Variable§LA:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Blitz Jager"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Blitz Mamba": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            {
              "item": "Ranged Weapon, Direct or Indirect, Swappable§LATM",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Guided",
                  {
                    "item": "Model/Weapon Property, Variable§LA:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Blitz Mamba"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Boa": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§HMG",
            "Ranged Weapon, Direct, AA-upgrade§HAC, React"
          ]
        },
        "keywords": {
          "Keywords": [
            "Boa (South)"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prefixLongFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Long Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Long Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Long Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Long Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 9
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 2
          },
          "Long Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§LFM"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§MFM"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Melee Swap +0TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "stats": {
                                "NameVariable": {
                                  "value": 3
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 3
                                }
                              }
                            },
                            "custom": false,
                            "designation": "AP:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--APX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "itemKey": "Model/Weapon Property, Variable§AP:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "AP:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 3,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "stats": {
                                "meleeReachStat": {
                                  "value": 1
                                },
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "meleeReachStat": {
                                  "value": 1
                                },
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Reach:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--ReachX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "itemKey": "Model/Weapon Property, Variable§Reach:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateNameVariableFromParentMeleeReachStat": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{parent}",
                                      "stats",
                                      "meleeReachStat",
                                      "value"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 143
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "meleeReachStat": {
                                "group": "Hidden",
                                "statType": "numeric",
                                "tracked": true,
                                "value": 1,
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Reach:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 0,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Demo:X",
                            "stats": {
                              "Modified": {
                                "value": "✓"
                              },
                              "NameVariable": {
                                "value": 4
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                    }
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Boa"
          },
          "MR": {
            "value": 5
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 15
          }
        }
      },
      "Gear§Brawler Asp": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Conscript",
            {
              "item": "Ranged Weapon, Direct, Link-upgrade§LSMG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§AI",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct, Swappable§LPZ",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Asp"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Brawler Asp"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 4
          }
        }
      },
      "Gear§Brawler Cobra MP": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Shield",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§React+",
            "Ranged Weapon, Combo§HAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Indirect§HIM",
            "Ranged Weapon, Direct§MMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "MP Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Brawler Cobra MP"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Gear§Brawler Copperhead": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Combo§LAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Copperhead"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  },
                  {
                    "trait": "Model/Weapon Property§Shield"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Brawler Copperhead"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Brawler Jager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Combo§LAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Brawler Jager"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Brawler Mamba": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct or Indirect, Link-upgrade§MGL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LAPR",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Brawler Mamba"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Gear§Brawler Mamba MP": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Shield",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Combo§MAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Direct, Swappable§MPZ",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "MP Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Brawler Mamba MP"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Bushmaster Cobra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct, AA-upgrade§HRC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LFG",
            "Ranged Weapon, Direct§MMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Bushmaster Cobra"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Gear§Chatterbox Iguana": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM",
            "Model/Weapon Property§ECCM",
            "Model/Weapon Property§SP:+1",
            "Model/Weapon Property§SatUp",
            "Ranged Weapon, Direct, Link-upgrade§LSMG",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chatterbox Iguana"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Cobra MP": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Shield",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Indirect§HIM",
            "Ranged Weapon, Direct§MMG",
            "Ranged Weapon, Direct, Swappable§HPZ"
          ]
        },
        "keywords": {
          "Keywords": [
            "MP Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Cobra MP"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Gear§Copperhead": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Copperhead"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  },
                  {
                    "trait": "Model/Weapon Property§Shield"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Copperhead"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Copperhead Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Copperhead"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  },
                  {
                    "trait": "Model/Weapon Property§Shield"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Copperhead Gunner"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Dartjager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Dartjager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "renameDartjager": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Dartjager"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 5
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Dartjager"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, SK, RC"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Dartjager Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Dartjager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "renameDartjager": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": "Dartjager Gunner"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 5
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Dartjager Gunner"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, SK, RC"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Desert Viper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct or Indirect, Link-upgrade§MGL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Desert Viper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Desert Viper"
          },
          "MR": {
            "format": "W: {v}",
            "value": 5
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "Rugged Terrain Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Diamondback": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Diamondback"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependLongFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Long Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Long Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Long Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Long Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0
              },
              "Saber": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              },
              "Chainsword": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "Long Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MAPR"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MAR"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Diamondback"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Diamondback Defender": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Field Armor",
            {
              "item": "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§AA",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Diamondback"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependLongFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Long Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Long Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Long Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Long Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0
              },
              "Saber": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              },
              "Chainsword": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "Long Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MAPR"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MAR"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Diamondback Defender"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Gear§Diamondback Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Direct, AA-upgrade§HAC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Diamondback"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependLongFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Long Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Long Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Long Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Long Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0
              },
              "Saber": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              },
              "Chainsword": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "Long Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MAPR"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MAR"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Diamondback Gunner"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Gear§Firestorm Boa": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§HMG",
            "Ranged Weapon, Direct, AA-upgrade§MRL, React"
          ]
        },
        "keywords": {
          "Keywords": [
            "Boa (South)"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prefixLongFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Long Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Long Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Long Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Long Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 9
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 2
          },
          "Long Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§LFM"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§MFM"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Melee Swap +0TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "stats": {
                                "NameVariable": {
                                  "value": 3
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 3
                                }
                              }
                            },
                            "custom": false,
                            "designation": "AP:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--APX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "itemKey": "Model/Weapon Property, Variable§AP:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "AP:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 3,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "stats": {
                                "meleeReachStat": {
                                  "value": 1
                                },
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "meleeReachStat": {
                                  "value": 1
                                },
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Reach:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--ReachX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "itemKey": "Model/Weapon Property, Variable§Reach:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateNameVariableFromParentMeleeReachStat": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{parent}",
                                      "stats",
                                      "meleeReachStat",
                                      "value"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 143
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "meleeReachStat": {
                                "group": "Hidden",
                                "statType": "numeric",
                                "tracked": true,
                                "value": 1,
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Reach:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 0,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Demo:X",
                            "stats": {
                              "Modified": {
                                "value": "✓"
                              },
                              "NameVariable": {
                                "value": 4
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                    }
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Firestorm Boa"
          },
          "MR": {
            "value": 5
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 16
          }
        }
      },
      "Gear§Flame Cobra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Model/Weapon Property§Resist:F",
            "Ranged Weapon, Direct§HFL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            {
              "item": "Ranged Weapon, Direct or Indirect§MAPR",
              "assets": {
                "traits": [
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Fire:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MAR",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Fire:X",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      },
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Indirect§LGM",
            "Ranged Weapon, Direct§MMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Flame Cobra"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Gear§Flame Copperhead": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Resist:F",
            "Ranged Weapon, Direct, Link-upgrade§MFL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            {
              "item": "Ranged Weapon, Direct or Indirect§LAPR",
              "assets": {
                "traits": [
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Fire:X",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      },
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Copperhead"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  },
                  {
                    "trait": "Model/Weapon Property§Shield"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Flame Copperhead"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Flame Jager": {
        "assets": {
          "included": [],
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Resist:F",
            "Ranged Weapon, Direct, Link-upgrade§MFL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            {
              "item": "Ranged Weapon, Direct or Indirect§LAPR",
              "assets": {
                "traits": [
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Fire:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Flame Jager"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Hunting Cobra MP": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Shield",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct§HRF, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Indirect§HIM",
            "Ranged Weapon, Direct§MMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "MP Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Hunting Cobra MP"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Gear§Hunting Iguana": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM",
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§MRF, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Hunting Iguana"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Hunting Salamander": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Ranged Weapon, Direct§HRF, React",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Brawl:X",
                    "stats": {
                      "meleeBrawlStat": {
                        "value": 1
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Salamander"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Hunting Salamander"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "Rugged Terrain Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Hunting Sidewinder": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct§MRF, React",
            "Ranged Weapon, Direct, Link-upgrade§LSMG",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Sidewinder"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§SatUp",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Hunting Sidewinder"
          },
          "Mortar Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MRP"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§LGM"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Hunting Viper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct§MSC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Desert Viper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Hunting Viper"
          },
          "MR": {
            "format": "W: {v}",
            "value": 5
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "Rugged Terrain Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Iguana": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, Link-upgrade§LSMG",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Iguana"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 999
          },
          "Roles": {
            "value": "RC+, FS"
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Iguana Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Iguana Gunner"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Iguana MP": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Shield",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Direct, Swappable§LPZ",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "MP Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Iguana MP"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP+, SK"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Iguana MP Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Shield",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Melee Weapon§MSE",
            "Ranged Weapon, Direct, Swappable§LPZ",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "MP Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Iguana MP Gunner"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Jager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct, Swappable§LPZ",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Jager"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Jager Defender": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§AA",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Jager Defender"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Jager Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Jager Gunner"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Junglemower Cobra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct, AA-upgrade§HRC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MAR",
            "Ranged Weapon, Indirect§LGM",
            "Ranged Weapon, Direct§MMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Junglemower Cobra"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Gear§Long Fang Adder": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Adder"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "stats": {
                              "NameVariable": {
                                "value": 3
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Long Fang Adder"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Long Fang Cobra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct, AA-upgrade§HAC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct or Indirect§LFG",
            "Ranged Weapon, Direct§MMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Long Fang Cobra"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Gear§Long Fang Mamba": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Long Fang Mamba"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Gear§Longbow Jager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Comms",
            "Ranged Weapon, Direct§MRF, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Indirect§HIM",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Longbow Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Longbow Jager"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Mamba MP": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Shield",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Direct, Swappable§MPZ",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "MP Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Mamba MP"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP+, SK"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Para Iguana": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Combo§LAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Para Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "renameParaIguana": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "prepend": " ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Para Iguana"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 999
          },
          "Roles": {
            "value": "RC+, FS"
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Para Iguana Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Para Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "renameParaIguana": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "prepend": " ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 141
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Para Iguana Gunner"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Para Jager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Combo§LAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Para Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependPara": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Prepend Para to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Para ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "renameCommandJagerIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "renameJager": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Remove the \"Para\" from the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": " ",
                "value": "Jager"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Para Jager"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Para Striking Iguana": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Para Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Para Striking Iguana"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Para Striking Jager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Para Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependPara": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Prepend Para to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Para ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "renameCommandJagerIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "renameJager": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Remove the \"Para\" from the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": "Striking Jager"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Para Striking Jager"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Pit Black Adder": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Direct§MSC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Adder"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "stats": {
                              "NameVariable": {
                                "value": 3
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Pit Black Adder"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Pit Viper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct§MSC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Desert Viper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Pit Viper"
          },
          "MR": {
            "format": "W: {v}",
            "value": 5
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "Rugged Terrain Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Python": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct, AA-upgrade§HAC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct or Indirect§MAR",
            "Ranged Weapon, Indirect§LGM"
          ]
        },
        "keywords": {
          "Keywords": [
            "Python"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Python"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Gear§Rattlesnake": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Rattlesnake"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Rattlesnake"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Recon Iguana": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§LRF",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Recon Iguana"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Riotmaster Rattlesnake": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Rattlesnake"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Riotmaster Rattlesnake"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Riotmaster Viper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct, Swappable§MPZ"
          ]
        },
        "keywords": {
          "Keywords": [
            "Street Viper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Riotmaster Viper"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Salamander": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Ranged Weapon, Combo§MAC/LFL",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Brawl:X",
                    "stats": {
                      "meleeBrawlStat": {
                        "value": 1
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Salamander"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Salamander"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "Rugged Terrain Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Salamander Brawler": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Ranged Weapon, Combo§MAC/LGL",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Brawl:X",
                    "stats": {
                      "meleeBrawlStat": {
                        "value": 1
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Salamander"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Salamander Brawler"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "Rugged Terrain Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Salamander Riotmaster": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Ranged Weapon, Combo§MAC/LFC",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Brawl:X",
                    "stats": {
                      "meleeBrawlStat": {
                        "value": 1
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Salamander"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Salamander Riotmaster"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "Rugged Terrain Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Sidewinder": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Sidewinder"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§SatUp",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Sidewinder"
          },
          "Mortar Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MRP"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§LGM"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Sidewinder Riotmaster": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Sidewinder"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§SatUp",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Sidewinder Riotmaster"
          },
          "Mortar Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MRP"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§LGM"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Silverscale": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Comms",
            {
              "item": "Model/Weapon Property§ECM+",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Model/Weapon Property§TD",
            "Model/Weapon Property§Sensor Boom",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Silverscale"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Silverscale"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, RC, FS"
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Slashing Cobra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct, AA-upgrade§HAC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect, Swappable§MATM",
            "Ranged Weapon, Indirect§LGM",
            "Ranged Weapon, Direct§MMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Slashing Cobra"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Gear§Spitting Cobra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct, AA-upgrade§HAC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct or Indirect§MAR",
            "Ranged Weapon, Indirect§LGM",
            "Ranged Weapon, Direct§MMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Spitting Cobra"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Gear§Street Viper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct§LRF",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct, Swappable§LPZ"
          ]
        },
        "keywords": {
          "Keywords": [
            "Street Viper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Street Viper"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Striking Basilisk": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Basilisk"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Striking Basilisk"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, RC, FS"
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Striking Black Adder": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Adder"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "stats": {
                              "NameVariable": {
                                "value": 3
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Striking Black Adder"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Striking Boa": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§HMG",
            "Ranged Weapon, Direct§MBZ"
          ]
        },
        "keywords": {
          "Keywords": [
            "Boa (South)"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prefixLongFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Long Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Long Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Long Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Long Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 9
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 2
          },
          "Long Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§LFM"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§MFM"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Melee Swap +0TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "stats": {
                                "NameVariable": {
                                  "value": 3
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 3
                                }
                              }
                            },
                            "custom": false,
                            "designation": "AP:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--APX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "itemKey": "Model/Weapon Property, Variable§AP:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "AP:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 3,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "stats": {
                                "meleeReachStat": {
                                  "value": 1
                                },
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "meleeReachStat": {
                                  "value": 1
                                },
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Reach:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--ReachX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "itemKey": "Model/Weapon Property, Variable§Reach:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateNameVariableFromParentMeleeReachStat": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{parent}",
                                      "stats",
                                      "meleeReachStat",
                                      "value"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 143
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "meleeReachStat": {
                                "group": "Hidden",
                                "statType": "numeric",
                                "tracked": true,
                                "value": 1,
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Reach:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 0,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Demo:X",
                            "stats": {
                              "Modified": {
                                "value": "✓"
                              },
                              "NameVariable": {
                                "value": 4
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                    }
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Striking Boa"
          },
          "MR": {
            "value": 5
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Gear§Striking Cobra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct§MBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§MMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Striking Cobra"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Gear§Striking Copperhead": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Copperhead"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  },
                  {
                    "trait": "Model/Weapon Property§Shield"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Striking Copperhead"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Striking Dartjager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Dartjager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 5
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Dartjager"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "GP, SK, RC"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Striking Diamondback": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Direct§MBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Diamondback"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependLongFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Long Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Long Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Long Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Long Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0
              },
              "Saber": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              },
              "Chainsword": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LCW"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 1
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "Long Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MAPR"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MAR"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Striking Diamondback"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Striking Iguana": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM",
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Striking Iguana"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Striking Jager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Striking Jager"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Striking Mamba": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Black Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependRazorFangIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Razor Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Razor Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Razor Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Razor Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Striking Mamba"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Razor Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Striking Sidewinder": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct§MBZ",
            "Ranged Weapon, Direct, Link-upgrade§LSMG",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Sidewinder"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§SatUp",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Striking Sidewinder"
          },
          "Mortar Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MRP"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§LGM"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Stripped-Down Brawler Jager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Combo§LAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Stripped-Down Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependStrippedDown": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Prepend Stripped-Down to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Stripped-Down ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 178
          },
          "renameBrawlerJager": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Remove the \"Stripped-Down\" from the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": " ",
                "value": "Brawler Jager"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Stripped-Down Brawler Jager"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Stripped-Down Jager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Stripped-Down Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependStrippedDown": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Prepend Stripped-Down to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Stripped-Down ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "renameJager": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Remove the \"Stripped-Down\" from the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": " ",
                "value": "Jager"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Stripped-Down Jager"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Gear§Stripped-Down Jager Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Stripped-Down Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependStrippedDown": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Prepend Stripped-Down to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Stripped-Down ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "renameJagerGunner": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Remove the \"Stripped-Down\" from the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": " ",
                "value": "Jager Gunner"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Stripped-Down Jager Gunner"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Stripped-Down Striking Jager": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Stripped-Down Jager"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Fortifications",
              "UA: Special Operations",
              "UA: Recon"
            ]
          }
        },
        "rules": {
          "prependCommandIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependStrippedDown": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Prepend Stripped-Down to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Stripped-Down ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "renameJager": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "Remove the \"Stripped-Down\" from the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": " ",
                "value": "Striking Jager"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 161
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "Command Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Stripped-Down Striking Jager"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Gear§Viper Defender": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§AA",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "Street Viper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Viper Defender"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Viper Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Desert Viper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Viper Gunner"
          },
          "MR": {
            "format": "W: {v}",
            "value": 5
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "Rugged Terrain Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Climber"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Water Viper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Sub",
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Ranged Weapon, Direct, Link-upgrade§LSMG",
            {
              "item": "Ranged Weapon, Direct or Indirect§LRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Water Viper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Water Viper"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK+, FS"
          },
          "SR Upgrade +3TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "specialOperationsMax": 1,
                  "TV": 3
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§ECM"
                  },
                  {
                    "trait": "Model/Weapon Property§ECCM"
                  },
                  {
                    "trait": "Model/Weapon Property§Smoke"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§Stealth",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 999
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Water Viper Brawler": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Sub",
            "Ranged Weapon, Direct or Indirect, Link-upgrade§MGL, React",
            "Ranged Weapon, Direct, Link-upgrade§LSMG",
            {
              "item": "Ranged Weapon, Direct or Indirect§LRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Water Viper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Water Viper Brawler"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "SR Upgrade +3TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "specialOperationsMax": 1,
                  "TV": 3
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§ECM"
                  },
                  {
                    "trait": "Model/Weapon Property§ECCM"
                  },
                  {
                    "trait": "Model/Weapon Property§Smoke"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§Stealth",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Water Viper Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Sub",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Ranged Weapon, Direct, Link-upgrade§LSMG",
            {
              "item": "Ranged Weapon, Direct or Indirect§LRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Water Viper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Water Viper Gunner"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "SR Upgrade +3TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "specialOperationsMax": 1,
                  "TV": 3
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§ECM"
                  },
                  {
                    "trait": "Model/Weapon Property§ECCM"
                  },
                  {
                    "trait": "Model/Weapon Property§Smoke"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§Stealth",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Roster§Roster": {},
      "Strider§Barbed Naga": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Sensor Boom",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§HRP",
            "Ranged Weapon, Direct or Indirect§HRP",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Naga"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependFlameIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Flame\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Flame ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Flame\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Flame"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependHoodedIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Hooded\" to the ModelName",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Hooded ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Hooded +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Hooded"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependSparkIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Spark\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Spark ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Spark +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Spark"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 9
          },
          "Chin Weapon Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§AI"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§AI",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "AI",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--AI",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "item": "Model/Weapon Property§AI",
                            "itemKey": "Model/Weapon Property§AI",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Burst:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--BurstX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "item": "Model/Weapon Property, Variable§Burst:X",
                            "itemKey": "Model/Weapon Property, Variable§Burst:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Burst:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 2,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Split"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Split",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "Split",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Split",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "item": "Model/Weapon Property§Split",
                            "itemKey": "Model/Weapon Property§Split",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Apex",
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Apex",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Apex",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Apex",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "item": "Model/Weapon Property§Apex",
                            "itemKey": "Model/Weapon Property§Apex",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Ranged Weapon, Direct§HMG, React"
                    }
                  }
                ]
              },
              "Hooded +1TV": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, AA-upgrade§LLC"
                  }
                ]
              },
              "Spark +1TV": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LPA"
                  }
                ]
              },
              "Flame": {
                "order": 3,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFL"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Barbed Naga"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 19
          }
        }
      },
      "Strider§Barbed Sagittarius": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Sub",
            "Model/Weapon Property§ECM",
            "Ranged Weapon, Direct, AA-upgrade§LRC, React",
            "Ranged Weapon, Direct§HMG, React",
            {
              "item": "Ranged Weapon, Direct or Indirect§HRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Apex",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Sagittarius"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Arm": {
            "value": 11
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Barbed Sagittarius"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 27
          }
        }
      },
      "Strider§Blazing Drake": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property, Variable§Brawl:X",
            "Model/Weapon Property§Shield",
            "Model/Weapon Property§Resist:F",
            "Model/Weapon Property§AMS",
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§HRL, React",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§HFL, React",
            {
              "item": "Ranged Weapon, Direct§HFC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Frag",
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade§HSG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 5
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Reach:X",
                    "stats": {
                      "meleeReachStat": {
                        "value": 1
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MAR",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Drake"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependCommand": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +2TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "PrependFanfIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 10
          },
          "Command Upgrade +2TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 2
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": "Model/Weapon Property§ECCM"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Blazing Drake"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 30
          }
        }
      },
      "Strider§Brawler Naga": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Sensor Boom",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§HGL",
            "Ranged Weapon, Direct or Indirect§HGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Naga"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependFlameIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Flame\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Flame ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Flame\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Flame"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependHoodedIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Hooded\" to the ModelName",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Hooded ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Hooded +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Hooded"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependSparkIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Spark\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Spark ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Spark +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Spark"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 9
          },
          "Chin Weapon Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§AI"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§AI",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "AI",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--AI",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "item": "Model/Weapon Property§AI",
                            "itemKey": "Model/Weapon Property§AI",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Burst:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--BurstX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "item": "Model/Weapon Property, Variable§Burst:X",
                            "itemKey": "Model/Weapon Property, Variable§Burst:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Burst:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 2,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Split"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Split",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "Split",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Split",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "item": "Model/Weapon Property§Split",
                            "itemKey": "Model/Weapon Property§Split",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Apex",
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Apex",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Apex",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Apex",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "item": "Model/Weapon Property§Apex",
                            "itemKey": "Model/Weapon Property§Apex",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Ranged Weapon, Direct§HMG, React"
                    }
                  }
                ]
              },
              "Hooded +1TV": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, AA-upgrade§LLC"
                  }
                ]
              },
              "Spark +1TV": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LPA"
                  }
                ]
              },
              "Flame": {
                "order": 3,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFL"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Brawler Naga"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 21
          }
        }
      },
      "Strider§Command Naga": {
        "assets": {
          "traits": [
            "Model/Weapon Property§SP:+1",
            "Model/Weapon Property§ECM",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§SatUp",
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Sensor Boom",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect, Swappable§MATM",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Naga"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependFlameIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Flame\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Flame ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Flame\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Flame"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependHoodedIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Hooded\" to the ModelName",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Hooded ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Hooded +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Hooded"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependSparkIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Spark\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Spark ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Spark +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Spark"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 9
          },
          "Chin Weapon Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§AI"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§AI",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "AI",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--AI",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "item": "Model/Weapon Property§AI",
                            "itemKey": "Model/Weapon Property§AI",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Burst:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--BurstX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "item": "Model/Weapon Property, Variable§Burst:X",
                            "itemKey": "Model/Weapon Property, Variable§Burst:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Burst:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 2,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Split"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Split",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "Split",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Split",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "item": "Model/Weapon Property§Split",
                            "itemKey": "Model/Weapon Property§Split",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Apex",
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Apex",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Apex",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Apex",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "item": "Model/Weapon Property§Apex",
                            "itemKey": "Model/Weapon Property§Apex",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Ranged Weapon, Direct§HMG, React"
                    }
                  }
                ]
              },
              "Hooded +1TV": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, AA-upgrade§LLC"
                  }
                ]
              },
              "Spark +1TV": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LPA"
                  }
                ]
              },
              "Flame": {
                "order": 3,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFL"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Command Naga"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 19
          }
        }
      },
      "Strider§Drake": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property, Variable§Brawl:X",
            "Model/Weapon Property§Shield",
            "Model/Weapon Property§Resist:F",
            "Model/Weapon Property§AMS",
            {
              "item": "Ranged Weapon, Direct§HBZ",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 4
                      }
                    }
                  },
                  "Model/Weapon Property§Apex",
                  "Model/Weapon Property§Precise"
                ]
              }
            },
            "Ranged Weapon, Direct§HFL, React",
            {
              "item": "Ranged Weapon, Direct§HFC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Frag",
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade§HSG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 5
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Reach:X",
                    "stats": {
                      "meleeReachStat": {
                        "value": 1
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MAR",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Drake"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependCommand": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +2TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "prependFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 10
          },
          "Command Upgrade +2TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 2
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": "Model/Weapon Property§ECCM"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§MABM"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§AOE:X",
                            "stats": {
                              "NameVariable": {
                                "value": 3
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "stats": {
                              "NameVariable": {
                                "value": 1
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property§Link",
                            "stats": {
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          }
                        ]
                      },
                      "item": "Ranged Weapon, Direct or Indirect§HRP"
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Drake"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 27
          }
        }
      },
      "Strider§Fire Dragon": {
        "assets": {
          "traits": [
            "Model/Weapon Property§AMS",
            "Model/Weapon Property§Stable",
            "Model/Weapon Property§Lumbering",
            "Ranged Weapon, Direct, Link-upgrade§MFL",
            {
              "item": "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§R",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§L",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§HRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Fire Dragon"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 11
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 999
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Fire Dragon"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FS+"
          },
          "TV": {
            "value": 28
          }
        }
      },
      "Strider§Force Dragon": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Stable",
            "Model/Weapon Property§Lumbering",
            {
              "item": "Ranged Weapon, Direct§MPL, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Advanced",
                  "Model/Weapon Property§(OR)",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§Apex",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§MPA, React",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Haywire",
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§AA",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§R",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§L",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Fire Dragon"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 11
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Force Dragon"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 32
          }
        }
      },
      "Strider§Force Drake": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property, Variable§Brawl:X",
            "Model/Weapon Property§Shield",
            "Model/Weapon Property§Resist:F",
            "Model/Weapon Property§AMS",
            {
              "item": "Ranged Weapon, Direct§MPL, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Advanced",
                  "Model/Weapon Property§(OR)",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§Apex",
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§HFL, React",
            {
              "item": "Ranged Weapon, Direct§HFC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Frag",
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade§HSG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 5
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Reach:X",
                    "stats": {
                      "meleeReachStat": {
                        "value": 1
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MAR",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Drake"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependCommand": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +2TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "prependFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 10
          },
          "Command Upgrade +2TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 2
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": "Model/Weapon Property§ECCM"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§MABM"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§AOE:X",
                            "stats": {
                              "NameVariable": {
                                "value": 3
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "stats": {
                              "NameVariable": {
                                "value": 1
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property§Link",
                            "stats": {
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          }
                        ]
                      },
                      "item": "Ranged Weapon, Direct or Indirect§HRP"
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Force Drake"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 29
          }
        }
      },
      "Strider§Force Sagittarius": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Sub",
            "Model/Weapon Property§ECM",
            "Ranged Weapon, Direct, AA-upgrade§LRC, React",
            "Ranged Weapon, Direct§HMG, React",
            {
              "item": "Ranged Weapon, Direct§MPL",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Advanced",
                  "Model/Weapon Property§(OR)",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§Apex",
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Sagittarius"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Arm": {
            "value": 11
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Force Sagittarius"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 28
          }
        }
      },
      "Strider§Hunting Naga": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Sensor Boom",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade§MLC",
            "Ranged Weapon, Direct, AA-upgrade§MLC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Naga"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependFlameIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Flame\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Flame ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Flame\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Flame"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependHoodedIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Hooded\" to the ModelName",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Hooded ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Hooded +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Hooded"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependSparkIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Spark\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Spark ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Spark +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Spark"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 9
          },
          "Chin Weapon Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§AI"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§AI",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "AI",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--AI",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "item": "Model/Weapon Property§AI",
                            "itemKey": "Model/Weapon Property§AI",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Burst:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--BurstX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "item": "Model/Weapon Property, Variable§Burst:X",
                            "itemKey": "Model/Weapon Property, Variable§Burst:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Burst:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 2,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Split"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Split",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "Split",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Split",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "item": "Model/Weapon Property§Split",
                            "itemKey": "Model/Weapon Property§Split",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Apex",
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Apex",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Apex",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Apex",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "item": "Model/Weapon Property§Apex",
                            "itemKey": "Model/Weapon Property§Apex",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Ranged Weapon, Direct§HMG, React"
                    }
                  }
                ]
              },
              "Hooded +1TV": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, AA-upgrade§LLC"
                  }
                ]
              },
              "Spark +1TV": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LPA"
                  }
                ]
              },
              "Flame": {
                "order": 3,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFL"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Hunting Naga"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 21
          }
        }
      },
      "Strider§Hydra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Sub",
            "Model/Weapon Property§ECM",
            {
              "item": "Model/Weapon Property§Sensor Boom",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§MTG, React",
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LRC, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§Link"
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect, Link-upgrade§MGL",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§Blast",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§MRF",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Indirect§HIM",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Blast",
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Hydra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Hydra"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS+"
          },
          "TV": {
            "value": 30
          }
        }
      },
      "Strider§Junglemower Drake": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property, Variable§Brawl:X",
            "Model/Weapon Property§Shield",
            "Model/Weapon Property§Resist:F",
            "Model/Weapon Property§AMS",
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§HRC, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  {
                    "item": "Model/Weapon Property§Apex",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§HFL, React",
            {
              "item": "Ranged Weapon, Direct§HFC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Frag",
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade§HSG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 5
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Reach:X",
                    "stats": {
                      "meleeReachStat": {
                        "value": 1
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MAR",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Indirect§MGM"
          ]
        },
        "keywords": {
          "Keywords": [
            "Drake"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependCommand": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend Command to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Command ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Command Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Command Upgrade +2TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 163
          },
          "prependFang": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Fang \" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Fang ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Fang Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Fang Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 10
          },
          "Command Upgrade +2TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 2
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": "Model/Weapon Property§ECCM"
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "Fang Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§MABM"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§AOE:X",
                            "stats": {
                              "NameVariable": {
                                "value": 3
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "stats": {
                              "NameVariable": {
                                "value": 1
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property§Link",
                            "stats": {
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          }
                        ]
                      },
                      "item": "Ranged Weapon, Direct or Indirect§HRP"
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Junglemower Drake"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 28
          }
        }
      },
      "Strider§Long Fang Naga": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Sensor Boom",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§LFG",
            "Ranged Weapon, Direct or Indirect§LFG",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Naga"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependFlameIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Flame\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Flame ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Flame\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Flame"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependHoodedIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Hooded\" to the ModelName",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Hooded ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Hooded +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Hooded"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependSparkIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Spark\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Spark ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Spark +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Spark"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 9
          },
          "Chin Weapon Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§AI"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§AI",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "AI",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--AI",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "item": "Model/Weapon Property§AI",
                            "itemKey": "Model/Weapon Property§AI",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Burst:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--BurstX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "item": "Model/Weapon Property, Variable§Burst:X",
                            "itemKey": "Model/Weapon Property, Variable§Burst:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Burst:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 2,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Split"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Split",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "Split",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Split",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "item": "Model/Weapon Property§Split",
                            "itemKey": "Model/Weapon Property§Split",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Apex",
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Apex",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Apex",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Apex",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "item": "Model/Weapon Property§Apex",
                            "itemKey": "Model/Weapon Property§Apex",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Ranged Weapon, Direct§HMG, React"
                    }
                  }
                ]
              },
              "Hooded +1TV": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, AA-upgrade§LLC"
                  }
                ]
              },
              "Spark +1TV": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LPA"
                  }
                ]
              },
              "Flame": {
                "order": 3,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFL"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Long Fang Naga"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 19
          }
        }
      },
      "Strider§Naga": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Sensor Boom",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect, Swappable§MATM",
            "Ranged Weapon, Direct or Indirect, Swappable§MATM",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Naga"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependFlameIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Flame\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Flame ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Flame\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Flame"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependHoodedIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Hooded\" to the ModelName",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Hooded ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Hooded +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Hooded"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependSparkIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Spark\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Spark ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Spark +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Spark"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 9
          },
          "Chin Weapon Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§AI"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§AI",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "AI",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--AI",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "item": "Model/Weapon Property§AI",
                            "itemKey": "Model/Weapon Property§AI",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Burst:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--BurstX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "item": "Model/Weapon Property, Variable§Burst:X",
                            "itemKey": "Model/Weapon Property, Variable§Burst:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Burst:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 2,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Split"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Split",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "Split",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Split",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "item": "Model/Weapon Property§Split",
                            "itemKey": "Model/Weapon Property§Split",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Apex",
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Apex",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Apex",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Apex",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "item": "Model/Weapon Property§Apex",
                            "itemKey": "Model/Weapon Property§Apex",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Ranged Weapon, Direct§HMG, React"
                    }
                  }
                ]
              },
              "Hooded +1TV": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, AA-upgrade§LLC"
                  }
                ]
              },
              "Spark +1TV": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LPA"
                  }
                ]
              },
              "Flame": {
                "order": 3,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFL"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Naga"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS+"
          },
          "TV": {
            "value": 21
          }
        }
      },
      "Strider§Sagittarius": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Sub",
            "Model/Weapon Property§ECM",
            "Ranged Weapon, Direct, AA-upgrade§LRC, React",
            "Ranged Weapon, Direct§HMG, React",
            "Ranged Weapon, Indirect§HABM",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Sagittarius"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Arm": {
            "value": 11
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Sagittarius"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS+"
          },
          "TV": {
            "value": 28
          }
        }
      },
      "Strider§Spark Sagittarius": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Sub",
            "Model/Weapon Property§ECM",
            "Ranged Weapon, Direct, AA-upgrade§LRC, React",
            "Ranged Weapon, Direct§HMG, React",
            {
              "item": "Ranged Weapon, Direct§MPA",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Haywire",
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Sagittarius"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Arm": {
            "value": 11
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Spark Sagittarius"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 30
          }
        }
      },
      "Strider§Tusked Naga": {
        "assets": {
          "traits": [
            {
              "item": "Model/Weapon Property§TD",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Sensor Boom",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect, Swappable§MATM",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§Guided",
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade§LCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Naga"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependFlameIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Flame\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Flame ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Flame\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Flame"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependHoodedIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Hooded\" to the ModelName",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Hooded ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Hooded +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Hooded"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          },
          "prependSparkIfSelected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prefix \"Spark\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Spark ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "note": "If Chin Weapon Upgrade is set to \"Spark +1TV\"...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Chin Weapon Upgrade",
                    "processed",
                    "rank",
                    "current"
                  ]
                ],
                "value": "Spark"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 9
          },
          "Chin Weapon Upgrade": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "No": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§AI"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§AI",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "AI",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--AI",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "item": "Model/Weapon Property§AI",
                            "itemKey": "Model/Weapon Property§AI",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "**Anti-Infantry**  \nWeapons with the AI trait may deal more than two damage \nto infantry on a successful attack. These weapons also \nhave a bonus of +1D6 against infantry and cavalry models.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Burst:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 2
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Burst:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--BurstX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "item": "Model/Weapon Property, Variable§Burst:X",
                            "itemKey": "Model/Weapon Property, Variable§Burst:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Burst:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Burst:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 2,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "Add a +XD6 modifier to any attack roll made with this weapon (generally +1D6 or +2D6).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Split"
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Split",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "custom": false,
                            "designation": "Split",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Split",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "item": "Model/Weapon Property§Split",
                            "itemKey": "Model/Weapon Property§Split",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "When attacking with this weapon, this model may target \ntwo separate models.\n - Treat each target as a primary target.\n - Targets must be within 6 inches of each other.\n - The attacker suffers -1D6 on each attack roll.",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "item": "Model/Weapon Property§Apex",
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property§Apex",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Apex",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponProperty--Apex",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "item": "Model/Weapon Property§Apex",
                            "itemKey": "Model/Weapon Property§Apex",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Duelist Upgrade",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type",
                              "Standard Upgrade",
                              "Upgrade",
                              "Veteran Upgrade"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                }
                              },
                              "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Grandparent",
                            "text": "Add +1 to this weapon’s base damage. Multiple sources of \nApex are cumulative.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Ranged Weapon, Direct§HMG, React"
                    }
                  }
                ]
              },
              "Hooded +1TV": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, AA-upgrade§LLC"
                  }
                ]
              },
              "Spark +1TV": {
                "order": 2,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LPA"
                  }
                ]
              },
              "Flame": {
                "order": 3,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFL"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "No",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Tusked Naga"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 19
          }
        }
      },
      "Strider§Venomous Sagittarius": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Sub",
            "Model/Weapon Property§ECM",
            "Ranged Weapon, Direct, AA-upgrade§LRC, React",
            "Ranged Weapon, Direct§HMG, React",
            "Ranged Weapon, Direct or Indirect§HAR",
            "Ranged Weapon, Direct or Indirect§HAR",
            "Ranged Weapon, Direct or Indirect§HAR",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Sagittarius"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Arm": {
            "value": 11
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 3
          },
          "ModelName": {
            "value": "Venomous Sagittarius"
          },
          "MR": {
            "format": "W: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 33
          }
        }
      },
      "Strider§Water Dragon": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Sub",
            "Model/Weapon Property§Stable",
            "Model/Weapon Property§Lumbering",
            "Ranged Weapon, Direct§MSC",
            {
              "item": "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§R",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§L",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Indirect§MFM",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 4
                      }
                    }
                  },
                  "Model/Weapon Property§Blast",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MCW"
          ]
        },
        "keywords": {
          "Keywords": [
            "Fire Dragon"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 11
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Water Dragon"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 29
          }
        }
      },
      "Vehicle§Artemis": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Offroad",
            "Model/Weapon Property§Smoke",
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§HAC, React",
              "assets": {
                "traits": [
                  "Model/Weapon Property, Variable§Burst:X",
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§AA",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§HAC, React",
              "assets": {
                "traits": [
                  "Model/Weapon Property, Variable§Burst:X",
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§AA",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Artemis"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 11
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Artemis"
          },
          "MR": {
            "format": "G: {v}",
            "value": 4
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 25
          }
        }
      },
      "Vehicle§Ballista Hun": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Amphib",
            "Model/Weapon Property§Offroad",
            "Model/Weapon Property§Smoke",
            {
              "item": "Ranged Weapon, Indirect§MAM",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§Blast",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Guided",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Hun"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Ballista Hun"
          },
          "MR": {
            "format": "G: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "reconMax": {},
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Vehicle§Blitz Visigoth": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Offroad",
            "Model/Weapon Property§Smoke",
            "Model/Weapon Property§Field Armor",
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LLC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Advanced",
                  "Model/Weapon Property§T",
                  "Model/Weapon Property§AA"
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§R",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§L",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§LTG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§MRC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§HAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Visigoth"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 12
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "6/2"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Blitz Visigoth"
          },
          "MR": {
            "format": "G: {v}",
            "value": 4
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 34
          }
        }
      },
      "Vehicle§Caiman": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Amphib",
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§LMG, React",
              "assets": {
                "traits": [
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Caiman"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +2TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 2
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": "Model/Weapon Property§ECM"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Caiman"
          },
          "MR": {
            "format": "G: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Vehicle§Command Hetaroi": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Jump Jets:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§SatUp",
            "Model/Weapon Property§ECM",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LLC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§HRC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Hetaroi"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Command Hetaroi"
          },
          "MR": {
            "format": "H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 26
          }
        }
      },
      "Vehicle§Crocodile": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Amphib",
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§HRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Caiman"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Command Upgrade +2TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 2
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": "Model/Weapon Property§ECM"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Crocodile"
          },
          "MR": {
            "format": "G: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Vehicle§Force Hetaroi": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Jump Jets:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LLC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§MPL",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Advanced",
                  "Model/Weapon Property§(OR)",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§Apex",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Hetaroi"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Force Hetaroi"
          },
          "MR": {
            "format": "H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 25
          }
        }
      },
      "Vehicle§Hetaroi": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Jump Jets:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LLC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§HRC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Hetaroi"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Hetaroi"
          },
          "MR": {
            "format": "H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "FS+"
          },
          "TV": {
            "value": 24
          }
        }
      },
      "Vehicle§Hetaroi Spark": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Jump Jets:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LLC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§MPA",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Haywire",
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Hetaroi"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Hetaroi Spark"
          },
          "MR": {
            "format": "H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 25
          }
        }
      },
      "Vehicle§Hittite": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Amphib",
            "Model/Weapon Property§Offroad",
            "Model/Weapon Property§Smoke",
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct§HMG, React",
              "assets": {
                "traits": [
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  {
                    "item": "Model/Weapon Property§L",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§HMG, React",
              "assets": {
                "traits": [
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  {
                    "item": "Model/Weapon Property§R",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Link",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§HFL",
              "assets": {
                "traits": [
                  "Model/Weapon Property§AI",
                  {
                    "item": "Model/Weapon Property, Variable§Fire:X",
                    "stats": {
                      "NameVariable": {
                        "value": 4
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Spray",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Apex",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Hun"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Hittite"
          },
          "MR": {
            "format": "G: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "reconMax": {},
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Vehicle§Hun": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Amphib",
            "Model/Weapon Property§Offroad",
            "Model/Weapon Property§Smoke",
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LLC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§AA",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§HRF",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§MAPGL",
            {
              "item": "Ranged Weapon, Direct or Indirect§MAR",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Hun"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Hun"
          },
          "MR": {
            "format": "G: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "SK+, FS"
          },
          "strikeMax": {
            "value": 999
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Vehicle§Long Fang Hetaroi": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Jump Jets:X",
              "stats": {
                "NameVariable": {
                  "value": 2
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LLC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MFG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§Blast",
                  "Model/Weapon Property§(OR)",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 4
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Hetaroi"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 10
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Long Fang Hetaroi"
          },
          "MR": {
            "format": "H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 25
          }
        }
      },
      "Vehicle§Medical Caiman": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Amphib",
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Caiman"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Medical Caiman"
          },
          "MR": {
            "format": "G: {v}",
            "value": 7
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 5
          }
        }
      },
      "Vehicle§Ostrogoth": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Amphib",
            "Model/Weapon Property§Offroad",
            "Model/Weapon Property§Smoke",
            {
              "item": "Ranged Weapon, Indirect§MAG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§Blast",
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Hun"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Recon"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Ostrogoth"
          },
          "MR": {
            "format": "G: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "reconMax": {},
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Vehicle§Recon Hun": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Amphib",
            "Model/Weapon Property§Offroad",
            "Model/Weapon Property§Smoke",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 3
                },
                "Type": {
                  "value": "Drone(s)"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LLC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Advanced",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§AA",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Auto",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§HRF",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Hun"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Strike"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Recon Hun"
          },
          "MR": {
            "format": "G: {v}",
            "value": 6
          },
          "PI": {
            "value": 5
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 15
          }
        }
      },
      "Vehicle§Titan": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§TD",
            "Model/Weapon Property§VTOL",
            {
              "item": "Model/Weapon Property, Variable and Type§Transport:X",
              "stats": {
                "NameVariable": {
                  "value": 1
                },
                "Type": {
                  "value": "Squad(s)"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LRC, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  {
                    "item": "Model/Weapon Property§AA",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct or Indirect, Swappable§MATM",
            "Ranged Weapon, Direct or Indirect, Swappable§MATM",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct or Indirect§MRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Titan"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 8
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/4"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Titan"
          },
          "MR": {
            "format": "H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 20
          }
        }
      },
      "Vehicle§Visigoth": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Offroad",
            "Model/Weapon Property§Smoke",
            "Model/Weapon Property§Field Armor",
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LLC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Advanced",
                  "Model/Weapon Property§T",
                  "Model/Weapon Property§AA"
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§R",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§L",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§HTG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 5
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§HAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§HAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Visigoth"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 12
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "6/2"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Visigoth"
          },
          "MR": {
            "format": "G: {v}",
            "value": 4
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 36
          }
        }
      },
      "Vehicle§Visigoth Khan": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Offroad",
            "Model/Weapon Property§Smoke",
            "Model/Weapon Property§Field Armor",
            "Model/Weapon Property§ECM",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Comms",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§LLC",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  "Model/Weapon Property§Advanced",
                  "Model/Weapon Property§T",
                  "Model/Weapon Property§AA"
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§R",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect§MRP, React",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AOE:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§L",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct§HTG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 5
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property, Variable§Demo:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, AA-upgrade§HAC",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 1
                      }
                    }
                  },
                  "Model/Weapon Property§Split",
                  "Model/Weapon Property§(OR)",
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§T",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§HAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Visigoth"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 3
          },
          "Arm": {
            "value": 12
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "6/2"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Visigoth Khan"
          },
          "MR": {
            "format": "G: {v}",
            "value": 4
          },
          "PI": {
            "value": 6
          },
          "Roles": {
            "value": "FS"
          },
          "TV": {
            "value": 38
          }
        }
      },
      "Veteran Gear§Chameleon": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM+",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Model/Weapon Property§TD",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§LRP",
            {
              "item": "Ranged Weapon, Direct, Link-upgrade§LSMG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Silent",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chameleon"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chameleon"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "SO+, RC"
          },
          "specialOperationsMax": {
            "value": 999
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Veteran Gear§Chameleon Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM+",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Model/Weapon Property§TD",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§LRP",
            {
              "item": "Ranged Weapon, Direct, Link-upgrade§LSMG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Silent",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chameleon"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chameleon Gunner"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "SO+, RC"
          },
          "specialOperationsMax": {
            "value": 999
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Veteran Gear§Command Fer de Lance": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct§MRF, React",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Indirect§LGM",
            "Ranged Weapon, Direct§LAPGL",
            "Model/Weapon Property§ECCM",
            "Model/Weapon Property§Comms",
            {
              "item": "Model/Weapon Property§SatUp",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Fer de Lance"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Command Fer de Lance"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Veteran Gear§Fer de Lance": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct§MRF, React",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct or Indirect, Swappable§LATM",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Fer de Lance"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Fer de Lance"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK+, FS"
          },
          "strikeMax": {
            "value": 999
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Veteran Gear§Force Fer de Lance": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct§LPL",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Fer de Lance"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Force Fer de Lance"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Veteran Gear§Gila": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Combo§HSMG/LFC",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct, Swappable§MPZ",
            "Ranged Weapon, Direct, Link-upgrade§LFL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Gila"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependBarbedIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Barbed\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Barbed ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Barbed Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Barbed Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Barbed Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§LRP"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MRP"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Gila"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK+, FS"
          },
          "strikeMax": {
            "value": 999
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Veteran Gear§Green Mamba": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Green Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: Fortifications",
              "UA: General Purpose",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Green Mamba"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SO+, SK"
          },
          "specialOperationsMax": {
            "value": 999
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Veteran Gear§Green Mamba Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade§HAC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Green Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: Fortifications",
              "UA: General Purpose",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Green Mamba Gunner"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SO, SK"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Veteran Gear§Hooded King Cobra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct or Indirect§LAR",
            "Ranged Weapon, Indirect§LGM",
            "Ranged Weapon, Direct§HMG",
            "Ranged Weapon, Direct§MAPGL",
            "Ranged Weapon, Direct, AA-upgrade§MLC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "King Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 9
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "Hooded King Cobra"
          },
          "MR": {
            "value": 5
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 20
          }
        }
      },
      "Veteran Gear§Hunting Chameleon": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM+",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Model/Weapon Property§TD",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§LRP",
            {
              "item": "Ranged Weapon, Direct§MRF, React",
              "assets": {
                "traits": [
                  "Model/Weapon Property§Precise",
                  {
                    "item": "Model/Weapon Property§Silent",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct, Link-upgrade§LSMG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Silent",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chameleon"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Hunting Chameleon"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "SO, RC"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Veteran Gear§Hunting Gila": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Direct§MRF, React",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct, Swappable§LPZ",
            "Ranged Weapon, Direct, Link-upgrade§LFL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Gila"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "prependBarbedIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "note": "...then prepend \"Barbed\" to the ModelName.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "prepend": "Barbed ",
                "value": [
                  "{self}",
                  "stats",
                  "ModelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the Barbed Upgrade is taken...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Barbed Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 162
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "Barbed Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§LRP"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct or Indirect§MRP"
                  }
                ]
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Hunting Gila"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Veteran Gear§King Cobra": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct or Indirect§LAR",
            "Ranged Weapon, Indirect§LGM",
            "Ranged Weapon, Direct§HMG",
            "Ranged Weapon, Direct§MAPGL",
            "Ranged Weapon, Direct§MPA, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "King Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 9
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "King Cobra"
          },
          "MR": {
            "value": 5
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 20
          }
        }
      },
      "Veteran Gear§King Cobra Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct or Indirect§LAR",
            "Ranged Weapon, Indirect§LGM",
            "Ranged Weapon, Direct§HMG",
            "Ranged Weapon, Direct§MAPGL",
            "Ranged Weapon, Direct, AA-upgrade§HRC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "King Cobra"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 2
          },
          "Arm": {
            "value": 9
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 2
          },
          "ModelName": {
            "value": "King Cobra Gunner"
          },
          "MR": {
            "value": 5
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 19
          }
        }
      },
      "Veteran Gear§Lidded Iguana": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                },
                "NameVariable": {
                  "value": 36
                }
              }
            },
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Model/Weapon Property§TD",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support",
              "UA: Strike"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Lidded Iguana"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, SO"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "strikeMax": {},
          "TV": {
            "value": 11
          }
        }
      },
      "Veteran Gear§Rapier Iguana": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Field Armor",
            "Model/Weapon Property§Comms",
            "Ranged Weapon, Direct, Link-upgrade§LSMG",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "keywords": {
          "Keywords": [
            "Iguana"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support",
              "UA: Special Operations"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Rapier Iguana"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, SK"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Veteran Gear§Slashing Fer de Lance": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct§MRF, React",
            {
              "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Precise",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            {
              "item": "Ranged Weapon, Direct or Indirect, Swappable§MATM",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§AP:X",
                    "stats": {
                      "NameVariable": {
                        "value": 3
                      }
                    }
                  },
                  "Model/Weapon Property§Guided",
                  {
                    "item": "Model/Weapon Property, Variable§LA:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      },
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Fer de Lance"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Slashing Fer de Lance"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Veteran Gear§Snakeye": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade§LLC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "Snakeye Black Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Snakeye Black Mamba"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SO+, SK"
          },
          "specialOperationsMax": {
            "value": 999
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Veteran Gear§Snakeye Firestorm": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade§MRL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "Snakeye Black Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Snakeye Firestorm"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SO, SK"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Veteran Gear§Striking Chameleon": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM+",
            {
              "item": "Model/Weapon Property§ECCM",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Model/Weapon Property§TD",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LBZ",
            {
              "item": "Ranged Weapon, Direct, Link-upgrade§LSMG",
              "assets": {
                "traits": [
                  {
                    "item": "Model/Weapon Property, Variable§Burst:X",
                    "stats": {
                      "NameVariable": {
                        "value": 2
                      }
                    }
                  },
                  {
                    "item": "Model/Weapon Property§Silent",
                    "stats": {
                      "Modified": {
                        "value": "✓"
                      }
                    }
                  }
                ]
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chameleon"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 3
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Striking Chameleon"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "SO, RC"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Veteran Gear§Striking Green Mamba": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Green Mamba"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: Fortifications",
              "UA: General Purpose",
              "UA: Fire Support"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "EW": {
            "value": 5
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Striking Green Mamba"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SO, SK"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      }
    },
    "gameModes": {},
    "theme": {}
  }
}