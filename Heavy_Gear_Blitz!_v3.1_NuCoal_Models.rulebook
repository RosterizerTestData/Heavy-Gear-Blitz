{
  "name": "NuCoal Models",
  "revision": "0.0.1",
  "game": "Heavy Gear Blitz! v3.1",
  "genre": "sci-fi",
  "publisher": "Dream Pod 9",
  "url": "https://www.dp9.com/",
  "notes": "",
  "wip": true,
  "isModule": true,
  "dependencies": [
    {
      "slug": "VUGK7N",
      "name": "Core System",
      "game": "Heavy Gear Blitz! v3.1",
      "source": ""
    }
  ],
  "rulebook": {
    "assetTaxonomy": {},
    "assetCatalog": {
      "Gear§Assault Wildcat": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Ranged Weapon, Direct§MSC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
          ]
        },
        "keywords": {
          "Keywords": [
            "Wildcat"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Assault Wildcat"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Boa": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct, AA-upgrade§HAC, React",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§HMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Boa (NuCoal)"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 9
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 2
          },
          "Melee Option": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "aliases": [],
                              "allowed": {
                                "classifications": [],
                                "items": []
                              },
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "assets": {},
                              "bareResource": {
                                "item": "Model/Weapon Property, Variable§AP:X",
                                "stats": {
                                  "NameVariable": {
                                    "value": 3
                                  }
                                }
                              },
                              "claimed": [
                                "rulebook"
                              ],
                              "classes": "",
                              "classIdentity": "",
                              "classification": "Model/Weapon Property, Variable",
                              "constraints": {
                                "all": [],
                                "any": [],
                                "none": [],
                                "not": []
                              },
                              "current": {
                                "aspects": {},
                                "item": "Model/Weapon Property, Variable§AP:X",
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {
                                  "NameVariable": {
                                    "value": 3
                                  }
                                }
                              },
                              "custom": false,
                              "designation": "AP:X",
                              "disallowed": {
                                "classifications": [],
                                "items": []
                              },
                              "errors": [],
                              "flatInfo": {},
                              "id": "ModelWeaponPropertyVariable--APX",
                              "index": 0,
                              "inheritance": "inherited",
                              "inherited": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "AP:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                              },
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "itemKey": "Model/Weapon Property, Variable§AP:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "legacy": [
                                "Model/Weapon Property, Variable",
                                "Model/Weapon Property, Variable and Type"
                              ],
                              "lineage": [
                                "Grandparent",
                                "Model/Weapon Property",
                                "Model/Weapon Property, Variable"
                              ],
                              "meta": {},
                              "net": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "AP:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                              },
                              "quantity": 1,
                              "removed": {
                                "aspects": {},
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {}
                              },
                              "ruled": [],
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 3,
                                  "visibility": "hidden"
                                }
                              },
                              "tally": {},
                              "templateClass": "Model/Weapon Property",
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30).",
                              "tracked": {}
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 3
                                }
                              }
                            },
                            "custom": false,
                            "designation": "AP:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--APX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "itemKey": "Model/Weapon Property, Variable§AP:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "AP:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 3,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "aliases": [],
                              "allowed": {
                                "classifications": [],
                                "items": []
                              },
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "assets": {},
                              "bareResource": {
                                "item": "Model/Weapon Property, Variable§Reach:X",
                                "stats": {
                                  "meleeReachStat": {
                                    "value": 1
                                  },
                                  "Modified": {
                                    "value": "✓"
                                  }
                                }
                              },
                              "claimed": [
                                "rulebook"
                              ],
                              "classes": "",
                              "classIdentity": "",
                              "classification": "Model/Weapon Property, Variable",
                              "constraints": {
                                "all": [],
                                "any": [],
                                "none": [],
                                "not": []
                              },
                              "current": {
                                "aspects": {},
                                "item": "Model/Weapon Property, Variable§Reach:X",
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {
                                  "meleeReachStat": {
                                    "value": 1
                                  },
                                  "Modified": {
                                    "value": "✓"
                                  }
                                }
                              },
                              "custom": false,
                              "designation": "Reach:X",
                              "disallowed": {
                                "classifications": [],
                                "items": []
                              },
                              "errors": [],
                              "flatInfo": {},
                              "id": "ModelWeaponPropertyVariable--ReachX",
                              "index": 0,
                              "inheritance": "inherited",
                              "inherited": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateNameVariableFromParentMeleeReachStat": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{parent}",
                                          "stats",
                                          "meleeReachStat",
                                          "value"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 143
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "meleeReachStat": {
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "tracked": true,
                                    "value": 0,
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "Reach:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                              },
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "itemKey": "Model/Weapon Property, Variable§Reach:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "legacy": [
                                "Model/Weapon Property, Variable",
                                "Model/Weapon Property, Variable and Type"
                              ],
                              "lineage": [
                                "Grandparent",
                                "Model/Weapon Property",
                                "Model/Weapon Property, Variable"
                              ],
                              "meta": {},
                              "net": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateNameVariableFromParentMeleeReachStat": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{parent}",
                                          "stats",
                                          "meleeReachStat",
                                          "value"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 143
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "meleeReachStat": {
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "tracked": true,
                                    "value": 0,
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "Reach:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                              },
                              "quantity": 1,
                              "removed": {
                                "aspects": {},
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {}
                              },
                              "ruled": [],
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 1,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "✓",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "tally": {},
                              "templateClass": "Model/Weapon Property",
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack.",
                              "tracked": {}
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "meleeReachStat": {
                                  "value": 1
                                },
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Reach:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--ReachX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "itemKey": "Model/Weapon Property, Variable§Reach:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateNameVariableFromParentMeleeReachStat": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{parent}",
                                      "stats",
                                      "meleeReachStat",
                                      "value"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 143
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "meleeReachStat": {
                                "group": "Hidden",
                                "statType": "numeric",
                                "tracked": true,
                                "value": 1,
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Reach:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 0,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Demo:X",
                            "stats": {
                              "Modified": {
                                "value": "✓"
                              },
                              "NameVariable": {
                                "value": 4
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                    }
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "MFM Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§LGM"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§MFM"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Boa"
          },
          "MR": {
            "value": 5
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 15
          }
        }
      },
      "Gear§Brawler Copperhead": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Combo§LAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Copperhead"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Shield"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Brawler Copperhead"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Chasseur": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Chasseur Flechette": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Flechette"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Chasseur Grenadier": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct or Indirect, Link-upgrade§LGL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Grenadier"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Chasseur Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Gunner"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Chasseur Gunner Paratrooper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur Paratrooper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Gunner Paratrooper"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Chasseur Hellfire": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Hellfire"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Chasseur Hellfire Paratrooper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur Paratrooper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Hellfire Paratrooper"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Chasseur Mk2": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur Mk2"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Mk2"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Chasseur Mk2 Flechette": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur Mk2"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Mk2 Flechette"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Chasseur Mk2 Fulgurant": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§LPA",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur Mk2"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Mk2 Fulgurant"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Chasseur Mk2 Grenadier": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect, Link-upgrade§LGL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur Mk2"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Mk2 Grenadier"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Chasseur Mk2 Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur Mk2"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Mk2 Gunner"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Chasseur Mk2 Hellfire": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                },
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur Mk2"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Mk2 Hellfire"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Chasseur Mortier": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Indirect§LFM",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Mortier"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Chasseur Paratrooper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Combo§LAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur Paratrooper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Paratrooper"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Chasseur Torch": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Ranged Weapon, Direct, Link-upgrade§MFL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Chasseur"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Chasseur Torch"
          },
          "MR": {
            "format": "W/H: {v}",
            "value": 9
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Copperhead": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Copperhead"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Shield"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 999
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Copperhead"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP+, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Copperhead Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Copperhead"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Shield"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Copperhead Gunner"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Cuirassier": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cuirassier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: General Purpose"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {},
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Cuirassier"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK+, FS"
          },
          "strikeMax": {
            "value": 999
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Cuirassier Flechette": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cuirassier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: General Purpose"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {},
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Cuirassier Flechette"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Cuirassier Grenadier": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct or Indirect, Link-upgrade§MGL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cuirassier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: General Purpose"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {},
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Cuirassier Grenadier"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Cuirassier Hellfire": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct§MBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cuirassier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: General Purpose"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {},
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Cuirassier Hellfire"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Cuirassier Lance": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct or Indirect, Link-upgrade§MGL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cuirassier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: General Purpose"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {},
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Cuirassier Lance"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Cuirassier Long Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Ranged Weapon, Direct§HRF, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Cuirassier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications",
              "UA: General Purpose"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 7
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  },
                  {
                    "trait": {
                      "item": "Model/Weapon Property§ECCM",
                      "stats": {
                        "Aux_System": {
                          "value": "✓"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {},
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Cuirassier Long Gunner"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Gear§Firestorm Boa": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct, AA-upgrade§MRL, React",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§HMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Boa (NuCoal)"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 9
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 2
          },
          "Melee Option": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "aliases": [],
                              "allowed": {
                                "classifications": [],
                                "items": []
                              },
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "assets": {},
                              "bareResource": {
                                "item": "Model/Weapon Property, Variable§AP:X",
                                "stats": {
                                  "NameVariable": {
                                    "value": 3
                                  }
                                }
                              },
                              "claimed": [
                                "rulebook"
                              ],
                              "classes": "",
                              "classIdentity": "",
                              "classification": "Model/Weapon Property, Variable",
                              "constraints": {
                                "all": [],
                                "any": [],
                                "none": [],
                                "not": []
                              },
                              "current": {
                                "aspects": {},
                                "item": "Model/Weapon Property, Variable§AP:X",
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {
                                  "NameVariable": {
                                    "value": 3
                                  }
                                }
                              },
                              "custom": false,
                              "designation": "AP:X",
                              "disallowed": {
                                "classifications": [],
                                "items": []
                              },
                              "errors": [],
                              "flatInfo": {},
                              "id": "ModelWeaponPropertyVariable--APX",
                              "index": 0,
                              "inheritance": "inherited",
                              "inherited": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "AP:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                              },
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "itemKey": "Model/Weapon Property, Variable§AP:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "legacy": [
                                "Model/Weapon Property, Variable",
                                "Model/Weapon Property, Variable and Type"
                              ],
                              "lineage": [
                                "Grandparent",
                                "Model/Weapon Property",
                                "Model/Weapon Property, Variable"
                              ],
                              "meta": {},
                              "net": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "AP:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                              },
                              "quantity": 1,
                              "removed": {
                                "aspects": {},
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {}
                              },
                              "ruled": [],
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 3,
                                  "visibility": "hidden"
                                }
                              },
                              "tally": {},
                              "templateClass": "Model/Weapon Property",
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30).",
                              "tracked": {}
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 3
                                }
                              }
                            },
                            "custom": false,
                            "designation": "AP:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--APX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "itemKey": "Model/Weapon Property, Variable§AP:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "AP:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 3,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "aliases": [],
                              "allowed": {
                                "classifications": [],
                                "items": []
                              },
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "assets": {},
                              "bareResource": {
                                "item": "Model/Weapon Property, Variable§Reach:X",
                                "stats": {
                                  "meleeReachStat": {
                                    "value": 1
                                  },
                                  "Modified": {
                                    "value": "✓"
                                  }
                                }
                              },
                              "claimed": [
                                "rulebook"
                              ],
                              "classes": "",
                              "classIdentity": "",
                              "classification": "Model/Weapon Property, Variable",
                              "constraints": {
                                "all": [],
                                "any": [],
                                "none": [],
                                "not": []
                              },
                              "current": {
                                "aspects": {},
                                "item": "Model/Weapon Property, Variable§Reach:X",
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {
                                  "meleeReachStat": {
                                    "value": 1
                                  },
                                  "Modified": {
                                    "value": "✓"
                                  }
                                }
                              },
                              "custom": false,
                              "designation": "Reach:X",
                              "disallowed": {
                                "classifications": [],
                                "items": []
                              },
                              "errors": [],
                              "flatInfo": {},
                              "id": "ModelWeaponPropertyVariable--ReachX",
                              "index": 0,
                              "inheritance": "inherited",
                              "inherited": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateNameVariableFromParentMeleeReachStat": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{parent}",
                                          "stats",
                                          "meleeReachStat",
                                          "value"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 143
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "meleeReachStat": {
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "tracked": true,
                                    "value": 0,
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "Reach:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                              },
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "itemKey": "Model/Weapon Property, Variable§Reach:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "legacy": [
                                "Model/Weapon Property, Variable",
                                "Model/Weapon Property, Variable and Type"
                              ],
                              "lineage": [
                                "Grandparent",
                                "Model/Weapon Property",
                                "Model/Weapon Property, Variable"
                              ],
                              "meta": {},
                              "net": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateNameVariableFromParentMeleeReachStat": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{parent}",
                                          "stats",
                                          "meleeReachStat",
                                          "value"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 143
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "meleeReachStat": {
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "tracked": true,
                                    "value": 0,
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "Reach:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                              },
                              "quantity": 1,
                              "removed": {
                                "aspects": {},
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {}
                              },
                              "ruled": [],
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 1,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "✓",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "tally": {},
                              "templateClass": "Model/Weapon Property",
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack.",
                              "tracked": {}
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "meleeReachStat": {
                                  "value": 1
                                },
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Reach:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--ReachX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "itemKey": "Model/Weapon Property, Variable§Reach:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateNameVariableFromParentMeleeReachStat": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{parent}",
                                      "stats",
                                      "meleeReachStat",
                                      "value"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 143
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "meleeReachStat": {
                                "group": "Hidden",
                                "statType": "numeric",
                                "tracked": true,
                                "value": 1,
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Reach:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 0,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Demo:X",
                            "stats": {
                              "Modified": {
                                "value": "✓"
                              },
                              "NameVariable": {
                                "value": 4
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                    }
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "MFM Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§LGM"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§MFM"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Firestorm Boa"
          },
          "MR": {
            "value": 5
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 16
          }
        }
      },
      "Gear§Flame Copperhead": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, Link-upgrade§MFL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LAPR (Fire:1)",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Copperhead"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Shield"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Flame Copperhead"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Jerboa": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": -1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM+",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jerboa"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Jerboa"
          },
          "MR": {
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "Primary Weapon": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Medium Rifle": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§MRF, React"
                  }
                ]
              },
              "Frag Cannon": {
                "order": 1,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFC, React"
                  }
                ]
              },
              "Rapid Fire Bazooka": {
                "order": 2,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LBZ (AP:1, Burst:1)"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "Medium Rifle",
            "visibility": "normal"
          },
          "reconMax": {
            "value": 999
          },
          "Roles": {
            "value": "RC+, FS"
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Jerboa Fist": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Comms",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct, Swappable§LPZ",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jerboa"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Jerboa Fist"
          },
          "MR": {
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "Primary Weapon": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Medium Rifle": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§MRF, React"
                  }
                ]
              },
              "Frag Cannon": {
                "order": 1,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFC, React"
                  }
                ]
              },
              "Rapid Fire Bazooka": {
                "order": 2,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LBZ (AP:1, Burst:1)"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "Medium Rifle",
            "visibility": "normal"
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Jerboa Flash": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": -1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM+",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Model/Weapon Property§TD",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jerboa"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Jerboa Flash"
          },
          "MR": {
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "Primary Weapon": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Medium Rifle": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§MRF, React"
                  }
                ]
              },
              "Frag Cannon": {
                "order": 1,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFC, React"
                  }
                ]
              },
              "Rapid Fire Bazooka": {
                "order": 2,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LBZ (AP:1, Burst:1)"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "Medium Rifle",
            "visibility": "normal"
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Jerboa Flash Paratrooper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": -1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Model/Weapon Property§TD",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                }
              }
            },
            "Ranged Weapon, Combo§LAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jerboa Paratrooper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Jerboa Flash Paratrooper"
          },
          "MR": {
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Jerboa Paratrooper": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Airdrop",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": -1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECM+",
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                }
              }
            },
            "Ranged Weapon, Combo§LAC/LGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LSG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jerboa Paratrooper"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Jerboa Paratrooper"
          },
          "MR": {
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "reconMax": {
            "value": 999
          },
          "Roles": {
            "value": "RC+, FS"
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Jerboa Sentry": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Comms",
            {
              "item": "Model/Weapon Property§SatUp",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Model/Weapon Property§ECM",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property, Variable§Jetpack:X",
              "stats": {
                "NameVariable": {
                  "value": 6
                }
              }
            },
            {
              "item": "Model/Weapon Property, Variable§Sensors:X",
              "stats": {
                "NameVariable": {
                  "value": 24
                }
              }
            },
            "Model/Weapon Property§TD",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Jerboa"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Strike",
              "UA: Special Operations",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 4
          },
          "EW": {
            "value": 4
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 5
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1
          },
          "ModelName": {
            "value": "Jerboa Sentry"
          },
          "MR": {
            "value": 9
          },
          "PI": {
            "value": 3
          },
          "Primary Weapon": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "Medium Rifle": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§MRF, React"
                  }
                ]
              },
              "Frag Cannon": {
                "order": 1,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct, Link-upgrade§MFC, React"
                  }
                ]
              },
              "Rapid Fire Bazooka": {
                "order": 2,
                "tracking": {
                  "TV": -1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Direct§LBZ (AP:1, Burst:1)"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "Medium Rifle",
            "visibility": "normal"
          },
          "reconMax": {
            "value": 1
          },
          "Roles": {
            "value": "RC, FS"
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Gear§Lancier": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Climber",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Direct, Swappable§HPZ",
            "Ranged Weapon, Direct§LAPGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MSG (Link)"
          ]
        },
        "keywords": {
          "Keywords": [
            "Lancier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Lancier"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK+, FS"
          },
          "strikeMax": {
            "value": 999
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Lancier Dart": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Climber",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§MAPR, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Direct, Swappable§HPZ",
            "Ranged Weapon, Direct§LAPGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MSG (Link)"
          ]
        },
        "keywords": {
          "Keywords": [
            "Lancier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Lancier Dart"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Lancier Flechette": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Climber",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Direct, Swappable§HPZ",
            "Ranged Weapon, Direct§LAPGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MSG (Link)"
          ]
        },
        "keywords": {
          "Keywords": [
            "Lancier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Lancier Flechette"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Lancier Spear": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Climber",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct or Indirect§MRP, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Direct, Swappable§HPZ",
            "Ranged Weapon, Direct§LAPGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MSG (Link)"
          ]
        },
        "keywords": {
          "Keywords": [
            "Lancier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Lancier Spear"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Lancier Torch": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Climber",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct, Link-upgrade§MFL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW",
            "Ranged Weapon, Direct, Swappable§HPZ",
            "Ranged Weapon, Direct§LAPGL",
            "Melee Weapon, Reach-upgrade, Dual-upgrade§MSG (Link)"
          ]
        },
        "keywords": {
          "Keywords": [
            "Lancier"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Lancier Torch"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Pathfinder Wildcat": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§ECCM",
            "Model/Weapon Property, Variable§Sensors:X",
            "Ranged Weapon, Direct§MRF, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Wildcat"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 5
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Pathfinder Wildcat"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Rabid Wildcat": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Model/Weapon Property§Field Armor",
            "Ranged Weapon, Direct or Indirect, Link-upgrade§LGL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Wildcat"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Rabid Wildcat"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 9
          }
        }
      },
      "Gear§Striking Boa": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§React+",
            "Ranged Weapon, Direct§MBZ",
            "Ranged Weapon, Direct or Indirect§MRP",
            "Ranged Weapon, Direct§HMG"
          ]
        },
        "keywords": {
          "Keywords": [
            "Boa (NuCoal)"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": {
                      "item": "Model/Weapon Property, Variable§Brawl:X",
                      "stats": {
                        "brawlStat": {
                          "value": 2
                        }
                      }
                    }
                  }
                ]
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 9
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "5/1"
          },
          "HT": {
            "value": 2
          },
          "Melee Option": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "aliases": [],
                              "allowed": {
                                "classifications": [],
                                "items": []
                              },
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "assets": {},
                              "bareResource": {
                                "item": "Model/Weapon Property, Variable§AP:X",
                                "stats": {
                                  "NameVariable": {
                                    "value": 3
                                  }
                                }
                              },
                              "claimed": [
                                "rulebook"
                              ],
                              "classes": "",
                              "classIdentity": "",
                              "classification": "Model/Weapon Property, Variable",
                              "constraints": {
                                "all": [],
                                "any": [],
                                "none": [],
                                "not": []
                              },
                              "current": {
                                "aspects": {},
                                "item": "Model/Weapon Property, Variable§AP:X",
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {
                                  "NameVariable": {
                                    "value": 3
                                  }
                                }
                              },
                              "custom": false,
                              "designation": "AP:X",
                              "disallowed": {
                                "classifications": [],
                                "items": []
                              },
                              "errors": [],
                              "flatInfo": {},
                              "id": "ModelWeaponPropertyVariable--APX",
                              "index": 0,
                              "inheritance": "inherited",
                              "inherited": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "AP:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                              },
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "itemKey": "Model/Weapon Property, Variable§AP:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "legacy": [
                                "Model/Weapon Property, Variable",
                                "Model/Weapon Property, Variable and Type"
                              ],
                              "lineage": [
                                "Grandparent",
                                "Model/Weapon Property",
                                "Model/Weapon Property, Variable"
                              ],
                              "meta": {},
                              "net": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "AP:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                              },
                              "quantity": 1,
                              "removed": {
                                "aspects": {},
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {}
                              },
                              "ruled": [],
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 3,
                                  "visibility": "hidden"
                                }
                              },
                              "tally": {},
                              "templateClass": "Model/Weapon Property",
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30).",
                              "tracked": {}
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§AP:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "NameVariable": {
                                  "value": 3
                                }
                              }
                            },
                            "custom": false,
                            "designation": "AP:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--APX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "item": "Model/Weapon Property, Variable§AP:X",
                            "itemKey": "Model/Weapon Property, Variable§AP:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "AP:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30)."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "AP:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 3,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "**Armor Piercing**  \nArmor piercing weapons are able to do damage on a \nsuccessful attack even when the damage does not exceed \nthe enemy’s armor. See **Armor Piercing** (p30).",
                            "tracked": {}
                          },
                          {
                            "aliases": [],
                            "allowed": {
                              "classifications": [],
                              "items": []
                            },
                            "aspects": {
                              "Order Traits A–Z": true,
                              "Unique": true,
                              "Visibility": "active"
                            },
                            "assets": {},
                            "bareResource": {
                              "aliases": [],
                              "allowed": {
                                "classifications": [],
                                "items": []
                              },
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "assets": {},
                              "bareResource": {
                                "item": "Model/Weapon Property, Variable§Reach:X",
                                "stats": {
                                  "meleeReachStat": {
                                    "value": 1
                                  },
                                  "Modified": {
                                    "value": "✓"
                                  }
                                }
                              },
                              "claimed": [
                                "rulebook"
                              ],
                              "classes": "",
                              "classIdentity": "",
                              "classification": "Model/Weapon Property, Variable",
                              "constraints": {
                                "all": [],
                                "any": [],
                                "none": [],
                                "not": []
                              },
                              "current": {
                                "aspects": {},
                                "item": "Model/Weapon Property, Variable§Reach:X",
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {
                                  "meleeReachStat": {
                                    "value": 1
                                  },
                                  "Modified": {
                                    "value": "✓"
                                  }
                                }
                              },
                              "custom": false,
                              "designation": "Reach:X",
                              "disallowed": {
                                "classifications": [],
                                "items": []
                              },
                              "errors": [],
                              "flatInfo": {},
                              "id": "ModelWeaponPropertyVariable--ReachX",
                              "index": 0,
                              "inheritance": "inherited",
                              "inherited": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateNameVariableFromParentMeleeReachStat": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{parent}",
                                          "stats",
                                          "meleeReachStat",
                                          "value"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 143
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "meleeReachStat": {
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "tracked": true,
                                    "value": 0,
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "Reach:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                              },
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "itemKey": "Model/Weapon Property, Variable§Reach:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "legacy": [
                                "Model/Weapon Property, Variable",
                                "Model/Weapon Property, Variable and Type"
                              ],
                              "lineage": [
                                "Grandparent",
                                "Model/Weapon Property",
                                "Model/Weapon Property, Variable"
                              ],
                              "meta": {},
                              "net": {
                                "aspects": {
                                  "Order Traits A–Z": true,
                                  "Unique": true,
                                  "Visibility": "active"
                                },
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {
                                  "|** Rules that act as comments or info evals **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 1
                                  },
                                  "|** Rules that edit stat strings **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 160
                                  },
                                  "|** Rules that enforce model requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 60
                                  },
                                  "|** Rules that enforce roster requirements **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 40
                                  },
                                  "|** Rules that grant legal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 80
                                  },
                                  "|** Rules that programmatically add assets **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 20
                                  },
                                  "|** Rules that remove illegal options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 100
                                  },
                                  "|** Rules that rename or edit designations **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 140
                                  },
                                  "|** Rules that report illegality of configurable options **|": {
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 120
                                  },
                                  "labelAuxSystems": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...then append (Aux) to the designation.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": "(Aux)"
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "If Aux_Systems is checked...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Aux_System",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 147
                                  },
                                  "propertyAppendDesignationToParentModifications": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...then set the parent to modified...",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      },
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "...and append the asset's designation to the parent's Modifications stat.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Modifications",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "contains": true,
                                        "not": true,
                                        "note": "If the parent is not a model...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "lineage"
                                          ]
                                        ],
                                        "value": "Model"
                                      },
                                      {
                                        "actionable": true,
                                        "not": false,
                                        "note": "...and the asset is \"modified\"...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "Modified",
                                            "value"
                                          ]
                                        ],
                                        "value": "✓"
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 148
                                  },
                                  "renameWithFormattedNameVariable": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "note": "...change the designation of the asset to match that formatted value.",
                                        "paths": [
                                          [
                                            "{self}",
                                            "designation"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "processed",
                                          "format",
                                          "current"
                                        ]
                                      }
                                    ],
                                    "evals": [
                                      {
                                        "actionable": true,
                                        "not": true,
                                        "note": "If NameVariable is not 0...",
                                        "operator": "AND",
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": 0
                                      }
                                    ],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 145
                                  },
                                  "updateNameVariableFromParentMeleeReachStat": {
                                    "actions": [
                                      {
                                        "actionType": "set",
                                        "iterations": 1,
                                        "paths": [
                                          [
                                            "{self}",
                                            "stats",
                                            "NameVariable",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{parent}",
                                          "stats",
                                          "meleeReachStat",
                                          "value"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 143
                                  },
                                  "updateParentStatTraits": {
                                    "actions": [
                                      {
                                        "actionType": "modify",
                                        "iterations": 1,
                                        "note": "Modify the parent's Traits stat with this asset's designation.",
                                        "paths": [
                                          [
                                            "{parent}",
                                            "stats",
                                            "Traits",
                                            "value"
                                          ]
                                        ],
                                        "value": [
                                          "{self}",
                                          "designation"
                                        ]
                                      }
                                    ],
                                    "evals": [],
                                    "evaluate": "AND",
                                    "failState": "pass",
                                    "order": 161
                                  }
                                },
                                "stats": {
                                  "Aux_System": {
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "meleeReachStat": {
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "tracked": true,
                                    "value": 0,
                                    "visibility": "hidden"
                                  },
                                  "Modified": {
                                    "group": "Hidden",
                                    "ranks": {
                                      "-": {
                                        "order": 0
                                      },
                                      "✓": {
                                        "order": 1
                                      }
                                    },
                                    "statType": "rank",
                                    "value": "-",
                                    "visibility": "hidden"
                                  },
                                  "NameVariable": {
                                    "format": "Reach:{v}",
                                    "group": "Hidden",
                                    "statType": "numeric",
                                    "value": 0,
                                    "visibility": "hidden"
                                  }
                                },
                                "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                              },
                              "quantity": 1,
                              "removed": {
                                "aspects": {},
                                "keywords": {
                                  "Keywords": [],
                                  "Tags": []
                                },
                                "rules": {},
                                "stats": {}
                              },
                              "ruled": [],
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 1,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "✓",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "tally": {},
                              "templateClass": "Model/Weapon Property",
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack.",
                              "tracked": {}
                            },
                            "claimed": [
                              "rulebook"
                            ],
                            "classes": "",
                            "classIdentity": "",
                            "classification": "Model/Weapon Property, Variable",
                            "constraints": {
                              "all": [],
                              "any": [],
                              "none": [],
                              "not": []
                            },
                            "current": {
                              "aspects": {},
                              "item": "Model/Weapon Property, Variable§Reach:X",
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {
                                "meleeReachStat": {
                                  "value": 1
                                },
                                "Modified": {
                                  "value": "✓"
                                }
                              }
                            },
                            "custom": false,
                            "designation": "Reach:X",
                            "disallowed": {
                              "classifications": [],
                              "items": []
                            },
                            "errors": [],
                            "flatInfo": {},
                            "id": "ModelWeaponPropertyVariable--ReachX",
                            "index": 0,
                            "inheritance": "inherited",
                            "inherited": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "itemKey": "Model/Weapon Property, Variable§Reach:X",
                            "keywords": {
                              "Keywords": [],
                              "Tags": []
                            },
                            "legacy": [
                              "Model/Weapon Property, Variable",
                              "Model/Weapon Property, Variable and Type"
                            ],
                            "lineage": [
                              "Grandparent",
                              "Model/Weapon Property",
                              "Model/Weapon Property, Variable"
                            ],
                            "meta": {},
                            "net": {
                              "aspects": {
                                "Order Traits A–Z": true,
                                "Unique": true,
                                "Visibility": "active"
                              },
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {
                                "|** Rules that act as comments or info evals **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 1
                                },
                                "|** Rules that edit stat strings **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 160
                                },
                                "|** Rules that enforce model requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 60
                                },
                                "|** Rules that enforce roster requirements **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 40
                                },
                                "|** Rules that grant legal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 80
                                },
                                "|** Rules that programmatically add assets **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 20
                                },
                                "|** Rules that remove illegal options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 100
                                },
                                "|** Rules that rename or edit designations **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 140
                                },
                                "|** Rules that report illegality of configurable options **|": {
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 120
                                },
                                "labelAuxSystems": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...then append (Aux) to the designation.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": "(Aux)"
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "If Aux_Systems is checked...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Aux_System",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 147
                                },
                                "propertyAppendDesignationToParentModifications": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...then set the parent to modified...",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    },
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "...and append the asset's designation to the parent's Modifications stat.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Modifications",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "contains": true,
                                      "not": true,
                                      "note": "If the parent is not a model...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "lineage"
                                        ]
                                      ],
                                      "value": "Model"
                                    },
                                    {
                                      "actionable": true,
                                      "not": false,
                                      "note": "...and the asset is \"modified\"...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "Modified",
                                          "value"
                                        ]
                                      ],
                                      "value": "✓"
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 148
                                },
                                "renameWithFormattedNameVariable": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "note": "...change the designation of the asset to match that formatted value.",
                                      "paths": [
                                        [
                                          "{self}",
                                          "designation"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "processed",
                                        "format",
                                        "current"
                                      ]
                                    }
                                  ],
                                  "evals": [
                                    {
                                      "actionable": true,
                                      "not": true,
                                      "note": "If NameVariable is not 0...",
                                      "operator": "AND",
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": 0
                                    }
                                  ],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 145
                                },
                                "updateNameVariableFromParentMeleeReachStat": {
                                  "actions": [
                                    {
                                      "actionType": "set",
                                      "iterations": 1,
                                      "paths": [
                                        [
                                          "{self}",
                                          "stats",
                                          "NameVariable",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{parent}",
                                        "stats",
                                        "meleeReachStat",
                                        "value"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 143
                                },
                                "updateParentStatTraits": {
                                  "actions": [
                                    {
                                      "actionType": "modify",
                                      "iterations": 1,
                                      "note": "Modify the parent's Traits stat with this asset's designation.",
                                      "paths": [
                                        [
                                          "{parent}",
                                          "stats",
                                          "Traits",
                                          "value"
                                        ]
                                      ],
                                      "value": [
                                        "{self}",
                                        "designation"
                                      ]
                                    }
                                  ],
                                  "evals": [],
                                  "evaluate": "AND",
                                  "failState": "pass",
                                  "order": 161
                                }
                              },
                              "stats": {
                                "Aux_System": {
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "meleeReachStat": {
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "tracked": true,
                                  "value": 0,
                                  "visibility": "hidden"
                                },
                                "Modified": {
                                  "group": "Hidden",
                                  "ranks": {
                                    "-": {
                                      "order": 0
                                    },
                                    "✓": {
                                      "order": 1
                                    }
                                  },
                                  "statType": "rank",
                                  "value": "-",
                                  "visibility": "hidden"
                                },
                                "NameVariable": {
                                  "format": "Reach:{v}",
                                  "group": "Hidden",
                                  "statType": "numeric",
                                  "value": 0,
                                  "visibility": "hidden"
                                }
                              },
                              "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack."
                            },
                            "quantity": 1,
                            "removed": {
                              "aspects": {},
                              "keywords": {
                                "Keywords": [],
                                "Tags": []
                              },
                              "rules": {},
                              "stats": {}
                            },
                            "ruled": [],
                            "rules": {
                              "|** Rules that act as comments or info evals **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 1
                              },
                              "|** Rules that edit stat strings **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 160
                              },
                              "|** Rules that enforce model requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 60
                              },
                              "|** Rules that enforce roster requirements **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 40
                              },
                              "|** Rules that grant legal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 80
                              },
                              "|** Rules that programmatically add assets **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 20
                              },
                              "|** Rules that remove illegal options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 100
                              },
                              "|** Rules that rename or edit designations **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 140
                              },
                              "|** Rules that report illegality of configurable options **|": {
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 120
                              },
                              "labelAuxSystems": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...then append (Aux) to the designation.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": "(Aux)"
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "If Aux_Systems is checked...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Aux_System",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 147
                              },
                              "propertyAppendDesignationToParentModifications": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...then set the parent to modified...",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  },
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "...and append the asset's designation to the parent's Modifications stat.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Modifications",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "contains": true,
                                    "not": true,
                                    "note": "If the parent is not a model...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "lineage"
                                      ]
                                    ],
                                    "value": "Model"
                                  },
                                  {
                                    "actionable": true,
                                    "not": false,
                                    "note": "...and the asset is \"modified\"...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "Modified",
                                        "value"
                                      ]
                                    ],
                                    "value": "✓"
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 148
                              },
                              "renameWithFormattedNameVariable": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "note": "...change the designation of the asset to match that formatted value.",
                                    "paths": [
                                      [
                                        "{self}",
                                        "designation"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "stats",
                                      "NameVariable",
                                      "processed",
                                      "format",
                                      "current"
                                    ]
                                  }
                                ],
                                "evals": [
                                  {
                                    "actionable": true,
                                    "not": true,
                                    "note": "If NameVariable is not 0...",
                                    "operator": "AND",
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": 0
                                  }
                                ],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 145
                              },
                              "updateNameVariableFromParentMeleeReachStat": {
                                "actions": [
                                  {
                                    "actionType": "set",
                                    "iterations": 1,
                                    "paths": [
                                      [
                                        "{self}",
                                        "stats",
                                        "NameVariable",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{parent}",
                                      "stats",
                                      "meleeReachStat",
                                      "value"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 143
                              },
                              "updateParentStatTraits": {
                                "actions": [
                                  {
                                    "actionType": "modify",
                                    "iterations": 1,
                                    "note": "Modify the parent's Traits stat with this asset's designation.",
                                    "paths": [
                                      [
                                        "{parent}",
                                        "stats",
                                        "Traits",
                                        "value"
                                      ]
                                    ],
                                    "value": [
                                      "{self}",
                                      "designation"
                                    ]
                                  }
                                ],
                                "evals": [],
                                "evaluate": "AND",
                                "failState": "pass",
                                "order": 161
                              }
                            },
                            "stats": {
                              "Aux_System": {
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "-",
                                "visibility": "hidden"
                              },
                              "meleeReachStat": {
                                "group": "Hidden",
                                "statType": "numeric",
                                "tracked": true,
                                "value": 1,
                                "visibility": "hidden"
                              },
                              "Modified": {
                                "group": "Hidden",
                                "ranks": {
                                  "-": {
                                    "order": 0
                                  },
                                  "✓": {
                                    "order": 1
                                  }
                                },
                                "statType": "rank",
                                "value": "✓",
                                "visibility": "hidden"
                              },
                              "NameVariable": {
                                "format": "Reach:{v}",
                                "group": "Hidden",
                                "statType": "numeric",
                                "value": 0,
                                "visibility": "hidden"
                              }
                            },
                            "tally": {},
                            "templateClass": "Model/Weapon Property",
                            "text": "This melee weapon can attack a target X inches from its base. This is not a ranged attack.",
                            "tracked": {}
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                    }
                  }
                ]
              },
              "✓": {
                "order": 1,
                "traits": [
                  {
                    "trait": {
                      "assets": {
                        "traits": [
                          {
                            "item": "Model/Weapon Property, Variable§Reach:X",
                            "stats": {
                              "meleeReachStat": {
                                "value": 1
                              },
                              "Modified": {
                                "value": "✓"
                              }
                            }
                          },
                          {
                            "item": "Model/Weapon Property, Variable§Demo:X",
                            "stats": {
                              "Modified": {
                                "value": "✓"
                              },
                              "NameVariable": {
                                "value": 4
                              }
                            }
                          }
                        ]
                      },
                      "item": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MCW"
                    }
                  }
                ]
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "MFM Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0,
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§LGM"
                  }
                ]
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Ranged Weapon, Indirect§MFM"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "ModelName": {
            "value": "Striking Boa"
          },
          "MR": {
            "value": 5
          },
          "PI": {
            "value": 5
          },
          "Roles": {
            "value": "SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 14
          }
        }
      },
      "Gear§Striking Copperhead": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct or Indirect, Swappable§LHG",
            "Ranged Weapon, Direct§LAPGL"
          ]
        },
        "keywords": {
          "Keywords": [
            "Copperhead"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arena Pilot +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Shield"
                  },
                  {
                    "trait": "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "4/2"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Striking Copperhead"
          },
          "MR": {
            "value": 6
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 6
          }
        }
      },
      "Gear§Wildcat": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§LAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Wildcat"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Wildcat"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Wildcat Fang": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Ranged Weapon, Direct§LBZ",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Wildcat"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Wildcat Fang"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Gear§Wildcat Gunner": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Ranged Weapon, Direct, AA-upgrade, Link-upgrade§MAC",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Wildcat"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Wildcat Gunner"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 8
          }
        }
      },
      "Gear§Wildcat UC": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            {
              "item": "Model/Weapon Property, Variable§Brawl:X",
              "stats": {
                "brawlStat": {
                  "value": 1
                }
              }
            },
            "Model/Weapon Property§Comms",
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§MVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct, Swappable§LPZ"
          ]
        },
        "keywords": {
          "Keywords": [
            "Wildcat"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Special Operations",
              "UA: Recon",
              "UA: Fortifications"
            ]
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 5
          },
          "EW": {
            "value": 6
          },
          "fireSupportMax": {
            "value": 1
          },
          "generalPurposeMax": {
            "value": 1
          },
          "GU": {
            "value": 4
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Wildcat UC"
          },
          "MR": {
            "value": 8
          },
          "PI": {
            "value": 4
          },
          "Roles": {
            "value": "GP, SK, FS"
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 7
          }
        }
      },
      "Roster§Roster": {},
      "Veteran Gear§Espion": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§MRF, React (Silent)",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Espion"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Espion"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SO+, SK"
          },
          "specialOperationsMax": {
            "value": 999
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 11
          }
        }
      },
      "Veteran Gear§Espion Firestorm": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, AA-upgrade§MRL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Espion"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Espion Firestorm"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SO, SK"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 13
          }
        }
      },
      "Veteran Gear§Espion Flechette": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct, Link-upgrade§MFC, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP",
            "Ranged Weapon, Direct, Swappable§LPZ"
          ]
        },
        "keywords": {
          "Keywords": [
            "Espion"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Espion Flechette"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SO, SK"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 10
          }
        }
      },
      "Veteran Gear§Espion Fulgurant": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct§LPA",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Espion"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Espion Fulgurant"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SO, SK"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      },
      "Veteran Gear§Espion Grenadier": {
        "assets": {
          "traits": [
            "Model/Weapon Property§Hands",
            "Model/Weapon Property§Agile",
            "Model/Weapon Property§Airdrop",
            "Model/Weapon Property§ECCM",
            {
              "item": "Model/Weapon Property§Stealth",
              "stats": {
                "Aux_System": {
                  "value": "✓"
                }
              }
            },
            "Ranged Weapon, Direct or Indirect, Link-upgrade§MGL, React",
            "Melee Weapon, Reach-upgrade, Dual-upgrade, Swappable§LVB",
            "Ranged Weapon, Direct or Indirect§LRP"
          ]
        },
        "keywords": {
          "Keywords": [
            "Espion"
          ]
        },
        "removed": {
          "keywords": {
            "Tags": [
              "UA: Recon",
              "UA: General Purpose",
              "UA: Fortifications",
              "UA: Fire Support"
            ]
          }
        },
        "rules": {
          "appendCVIfChecked": {
            "actions": [
              {
                "actionType": "set",
                "append": " CV",
                "iterations": 1,
                "note": "...then append \" CV\" to the model name.",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "ModelName",
                    "value"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "note": "If the \"CV Upgrade\" is checked...",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "CV Upgrade +1TV",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 165
          }
        },
        "stats": {
          "Actions": {
            "value": 1
          },
          "Arm": {
            "value": 6
          },
          "CV Upgrade +1TV": {
            "dynamic": true,
            "group": "Upgrades",
            "groupOrder": 4,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1,
                "tracking": {
                  "EW": -1,
                  "TV": 1
                },
                "traits": [
                  {
                    "trait": "Model/Weapon Property§Comms"
                  },
                  {
                    "trait": "Model/Weapon Property§SatUp"
                  }
                ]
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "EW": {
            "value": 5
          },
          "GU": {
            "value": 3
          },
          "H/S": {
            "value": "3/3"
          },
          "HT": {
            "value": 1.5
          },
          "ModelName": {
            "value": "Espion Grenadier"
          },
          "MR": {
            "value": 7
          },
          "PI": {
            "value": 3
          },
          "Roles": {
            "value": "SO, SK"
          },
          "specialOperationsMax": {
            "value": 1
          },
          "strikeMax": {
            "value": 1
          },
          "TV": {
            "value": 12
          }
        }
      }
    },
    "gameModes": {},
    "theme": {}
  }
}